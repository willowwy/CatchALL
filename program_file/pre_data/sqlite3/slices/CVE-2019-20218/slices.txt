1 @@ testCode/CVE-2019-20218_CWE-755_a6c1a71cde082e09750465d5675699062922e387_select.c_OLD.c @@ selectExpander @@ 4981 @@ ['db->mallocFailed'] @@ {pWalker, p, pParse, pTabList, pFrom, db, pTab, pSub, zTabName, zName, pX}
static int selectExpander(Walker *pWalker, Select *p) location: 4883 cross_layer: 1 file: select.c
Parse * pParse = pWalker -> pParse ; location: 4884 cross_layer: 1 file: select.c
int i , j , k ; location: 4885 cross_layer: 1 file: select.c
SrcList * pTabList ; location: 4886 cross_layer: 1 file: select.c
struct SrcList_item * pFrom ; location: 4888 cross_layer: 1 file: select.c
sqlite3 * db = pParse -> db ; location: 4889 cross_layer: 1 file: select.c
u16 selFlags = p -> selFlags ; location: 4891 cross_layer: 1 file: select.c
p -> selFlags |= SF_Expanded; location: 4894 cross_layer: 1 file: select.c
if ( db -> mallocFailed )  location: 4895 cross_layer: 1 file: select.c
if ( ( selFlags & SF_Expanded ) != 0 )  location: 4899 cross_layer: 1 file: select.c
if ( pWalker -> eCode )  location: 4902 cross_layer: 1 file: select.c
p -> selId = ++ pParse -> nSelect; location: 4904 cross_layer: 1 file: select.c
pTabList = p -> pSrc; location: 4906 cross_layer: 1 file: select.c
for(i=0, pFrom=pTabList->a; i<pTabList->nSrc; i++, pFrom++) location: 4919 cross_layer: 1 file: select.c
if ( db -> mallocFailed || sqliteProcessJoin ( pParse , p ) )  location: 4981 cross_layer: 1 file: select.c
static int sqliteProcessJoin(Parse *pParse, Select *p) location: 459 cross_layer: 2 file: select.c
pSrc = p -> pSrc; location: 465 cross_layer: 2 file: select.c
pLeft = & pSrc -> a [ 0 ]; location: 466 cross_layer: 2 file: select.c
pRight = & pLeft [ 1 ]; location: 467 cross_layer: 2 file: select.c
for(i=0; i<pSrc->nSrc-1; i++, pRight++, pLeft++) location: 468 cross_layer: 2 file: select.c
Table * pRightTab = pRight -> pTab ; location: 469 cross_layer: 2 file: select.c
if ( NEVER ( pLeft -> pTab == 0 || pRightTab == 0 ) )  location: 472 cross_layer: 2 file: select.c
isOuter = ( pRight -> fg . jointype & JT_OUTER ) != 0; location: 473 cross_layer: 2 file: select.c
if ( pRight -> fg . jointype & JT_NATURAL )  location: 478 cross_layer: 2 file: select.c
if ( pRight -> pOn || pRight -> pUsing )  location: 479 cross_layer: 2 file: select.c
sqlite3ErrorMsg ( pParse , "a NATURAL join may not have "
"an ON or USING clause" , 0 ) location: 481 cross_layer: 2 file: select.c
void sqlite3ErrorMsg(Parse *pParse, const char *zFormat, ...) location: 181 cross_layer: 3 file: testCode/util.c
sqlite3 * db = pParse -> db ; location: 184 cross_layer: 3 file: testCode/util.c
va_start ( ap , zFormat ); location: 185 cross_layer: 3 file: testCode/util.c
zMsg = sqlite3VMPrintf ( db , zFormat , ap ); location: 186 cross_layer: 3 file: testCode/util.c
char *sqlite3VMPrintf(sqlite3 *db, const char *zFormat, va_list ap) location: 1118 cross_layer: 4 file: testCode/printf.c
assert ( db != 0 ); location: 1122 cross_layer: 4 file: testCode/printf.c
sqlite3StrAccumInit ( & acc , db , zBase , sizeof ( zBase ) , db -> aLimit [ SQLITE_LIMIT_LENGTH ] ); location: 1123 cross_layer: 4 file: testCode/printf.c
void sqlite3StrAccumInit(StrAccum *p, sqlite3 *db, char *zBase, int n, int mx) location: 1092 cross_layer: 4 file: testCode/printf.c
p -> zText = zBase; location: 1093 cross_layer: 4 file: testCode/printf.c
p -> db = db; location: 1094 cross_layer: 4 file: testCode/printf.c
p -> nAlloc = n; location: 1095 cross_layer: 4 file: testCode/printf.c
p -> mxAlloc = mx; location: 1096 cross_layer: 4 file: testCode/printf.c
p -> nChar = 0; location: 1097 cross_layer: 4 file: testCode/printf.c
p -> accError = 0; location: 1098 cross_layer: 4 file: testCode/printf.c
p -> printfFlags = 0; location: 1099 cross_layer: 4 file: testCode/printf.c
void sqlite3StrAccumInit(StrAccum *p, sqlite3 *db, char *zBase, int n, int mx) location: 1092 cross_layer: 4 file: testCode/printf.c
p -> zText = zBase; location: 1093 cross_layer: 4 file: testCode/printf.c
p -> db = db; location: 1094 cross_layer: 4 file: testCode/printf.c
p -> nAlloc = n; location: 1095 cross_layer: 4 file: testCode/printf.c
p -> mxAlloc = mx; location: 1096 cross_layer: 4 file: testCode/printf.c
p -> nChar = 0; location: 1097 cross_layer: 4 file: testCode/printf.c
p -> accError = 0; location: 1098 cross_layer: 4 file: testCode/printf.c
p -> printfFlags = 0; location: 1099 cross_layer: 4 file: testCode/printf.c
sqlite3_str_vappendf ( & acc , zFormat , ap ); location: 1126 cross_layer: 4 file: testCode/printf.c
#define etBUFSIZE SQLITE_PRINT_BUF_SIZE  /* Size of the output buffer */ location: 195 cross_layer: 4 file: testCode/printf.c
assert ( pAccum -> nChar > 0 || ( pAccum -> printfFlags & SQLITE_PRINTF_MALLOCED ) == 0 ); location: 241 cross_layer: 4 file: testCode/printf.c
if ( ( pAccum -> printfFlags & SQLITE_PRINTF_SQLFUNC ) != 0 )  location: 244 cross_layer: 4 file: testCode/printf.c
pArgList = va_arg ( ap , PrintfArguments * ) location: 245 cross_layer: 4 file: testCode/printf.c
for(; (c=(*fmt))!=0; ++fmt) location: 250 cross_layer: 4 file: testCode/printf.c
if ( c != '%' )  location: 251 cross_layer: 4 file: testCode/printf.c
bufpt = ( char * ) fmt; location: 252 cross_layer: 4 file: testCode/printf.c
fmt = strchrnul ( fmt , '%' ); location: 254 cross_layer: 4 file: testCode/printf.c
sqlite3_str_append ( pAccum , bufpt , ( int ) ( fmt - bufpt ) ); location: 258 cross_layer: 4 file: testCode/printf.c
if ( * fmt == 0 )  location: 259 cross_layer: 4 file: testCode/printf.c
if ( ( c = ( * ++ fmt ) ) == 0 )  location: 261 cross_layer: 4 file: testCode/printf.c
sqlite3_str_append ( pAccum , "%" , 1 ); location: 262 cross_layer: 4 file: testCode/printf.c
switch ( c )  location: 273 cross_layer: 4 file: testCode/printf.c
c = * ++ fmt; location: 284 cross_layer: 4 file: testCode/printf.c
if ( c == 'l' )  location: 285 cross_layer: 4 file: testCode/printf.c
c = * ++ fmt; location: 286 cross_layer: 4 file: testCode/printf.c
unsigned wx = c - '0' ; location: 294 cross_layer: 4 file: testCode/printf.c
while ( ( c = * ++ fmt ) >= '0' && c <= '9' )  location: 295 cross_layer: 4 file: testCode/printf.c
wx = wx * 10 + c - '0'; location: 296 cross_layer: 4 file: testCode/printf.c
testcase ( wx > 0x7fffffff ); location: 298 cross_layer: 4 file: testCode/printf.c
width = wx & 0x7fffffff; location: 299 cross_layer: 4 file: testCode/printf.c
if ( width > SQLITE_PRINTF_PRECISION_LIMIT )  location: 301 cross_layer: 4 file: testCode/printf.c
if ( c != '.' && c != 'l' )  location: 305 cross_layer: 4 file: testCode/printf.c
fmt --; location: 308 cross_layer: 4 file: testCode/printf.c
width = ( int ) getIntArg ( pArgList ); location: 314 cross_layer: 4 file: testCode/printf.c
width = va_arg ( ap , int ); location: 316 cross_layer: 4 file: testCode/printf.c
if ( width < 0 )  location: 318 cross_layer: 4 file: testCode/printf.c
width = width >= - 2147483647 ? - width : 0; location: 320 cross_layer: 4 file: testCode/printf.c
if ( width > SQLITE_PRINTF_PRECISION_LIMIT )  location: 323 cross_layer: 4 file: testCode/printf.c
if ( ( c = fmt [ 1 ] ) != '.' && c != 'l' )  location: 327 cross_layer: 4 file: testCode/printf.c
c = * ++ fmt; location: 328 cross_layer: 4 file: testCode/printf.c
c = * ++ fmt; location: 334 cross_layer: 4 file: testCode/printf.c
if ( c == '*' )  location: 335 cross_layer: 4 file: testCode/printf.c
precision = ( int ) getIntArg ( pArgList ); location: 337 cross_layer: 4 file: testCode/printf.c
precision = va_arg ( ap , int ); location: 339 cross_layer: 4 file: testCode/printf.c
if ( precision < 0 )  location: 341 cross_layer: 4 file: testCode/printf.c
precision = precision >= - 2147483647 ? - precision : - 1; location: 342 cross_layer: 4 file: testCode/printf.c
c = * ++ fmt; location: 344 cross_layer: 4 file: testCode/printf.c
while ( c >= '0' && c <= '9' )  location: 347 cross_layer: 4 file: testCode/printf.c
px = px * 10 + c - '0'; location: 348 cross_layer: 4 file: testCode/printf.c
c = * ++ fmt; location: 349 cross_layer: 4 file: testCode/printf.c
testcase ( px > 0x7fffffff ); location: 351 cross_layer: 4 file: testCode/printf.c
precision = px & 0x7fffffff; location: 352 cross_layer: 4 file: testCode/printf.c
if ( precision > SQLITE_PRINTF_PRECISION_LIMIT )  location: 355 cross_layer: 4 file: testCode/printf.c
if ( c == 'l' )  location: 359 cross_layer: 4 file: testCode/printf.c
while ( ! done && ( c = ( * ++ fmt ) ) != 0 )  location: 367 cross_layer: 4 file: testCode/printf.c
if ( c == fmtinfo [ idx ] . fmttype )  location: 373 cross_layer: 4 file: testCode/printf.c
v = getIntArg ( pArgList ); location: 410 cross_layer: 4 file: testCode/printf.c
v = va_arg ( ap , i64 ); location: 413 cross_layer: 4 file: testCode/printf.c
v = va_arg ( ap , long int ) location: 415 cross_layer: 4 file: testCode/printf.c
v = va_arg ( ap , int ); location: 418 cross_layer: 4 file: testCode/printf.c
if ( v < 0 )  location: 420 cross_layer: 4 file: testCode/printf.c
if ( v == SMALLEST_INT64 )  location: 421 cross_layer: 4 file: testCode/printf.c
longvalue = - v; location: 424 cross_layer: 4 file: testCode/printf.c
longvalue = v; location: 428 cross_layer: 4 file: testCode/printf.c
longvalue = ( u64 ) getIntArg ( pArgList ); location: 433 cross_layer: 4 file: testCode/printf.c
longvalue = va_arg ( ap , u64 ); location: 436 cross_layer: 4 file: testCode/printf.c
longvalue = va_arg ( ap , unsigned long int ) location: 438 cross_layer: 4 file: testCode/printf.c
longvalue = va_arg ( ap , unsigned int ) location: 441 cross_layer: 4 file: testCode/printf.c
if ( longvalue == 0 )  location: 445 cross_layer: 4 file: testCode/printf.c
if ( flag_zeropad && precision < width - ( prefix != 0 ) )  location: 446 cross_layer: 4 file: testCode/printf.c
precision = width - ( prefix != 0 ); location: 447 cross_layer: 4 file: testCode/printf.c
if ( precision < etBUFSIZE - 10 - etBUFSIZE / 3 )  location: 449 cross_layer: 4 file: testCode/printf.c
n = ( u64 ) precision + 10; location: 454 cross_layer: 4 file: testCode/printf.c
n += precision / 3; location: 455 cross_layer: 4 file: testCode/printf.c
zOut = zExtra = printfTempBuf ( pAccum , n ); location: 456 cross_layer: 4 file: testCode/printf.c
if ( zOut == 0 )  location: 457 cross_layer: 4 file: testCode/printf.c
nOut = ( int ) n; location: 458 cross_layer: 4 file: testCode/printf.c
bufpt = & zOut [ nOut - 1 ]; location: 460 cross_layer: 4 file: testCode/printf.c
int x = ( int ) ( longvalue % 10 ) ; location: 463 cross_layer: 4 file: testCode/printf.c
if ( x >= 4 || ( longvalue / 10 ) % 10 == 1 )  location: 464 cross_layer: 4 file: testCode/printf.c
* ( -- bufpt ) = zOrd [ x * 2 + 1 ]; location: 467 cross_layer: 4 file: testCode/printf.c
* ( -- bufpt ) = cset [ longvalue % base ]; location: 474 cross_layer: 4 file: testCode/printf.c
longvalue = longvalue / base; location: 475 cross_layer: 4 file: testCode/printf.c
while ( longvalue > 0 )  location: 476 cross_layer: 4 file: testCode/printf.c
length = ( int ) ( & zOut [ nOut - 1 ] - bufpt ); location: 478 cross_layer: 4 file: testCode/printf.c
while ( precision > length )  location: 479 cross_layer: 4 file: testCode/printf.c
* ( -- bufpt ) = '0'; location: 480 cross_layer: 4 file: testCode/printf.c
length ++; location: 481 cross_layer: 4 file: testCode/printf.c
int nn = ( length - 1 ) / 3 ; location: 484 cross_layer: 4 file: testCode/printf.c
int ix = ( length - 1 ) % 3 + 1 ; location: 485 cross_layer: 4 file: testCode/printf.c
bufpt -= nn; location: 486 cross_layer: 4 file: testCode/printf.c
for(idx=0; nn>0; idx++) location: 487 cross_layer: 4 file: testCode/printf.c
bufpt [ idx ] = bufpt [ idx + nn ]; location: 488 cross_layer: 4 file: testCode/printf.c
ix --; location: 489 cross_layer: 4 file: testCode/printf.c
if ( ix == 0 )  location: 490 cross_layer: 4 file: testCode/printf.c
bufpt [ ++ idx ] = cThousand; location: 491 cross_layer: 4 file: testCode/printf.c
nn --; location: 492 cross_layer: 4 file: testCode/printf.c
* ( -- bufpt ) = prefix; location: 497 cross_layer: 4 file: testCode/printf.c
* ( -- bufpt ) = x; location: 502 cross_layer: 4 file: testCode/printf.c
length = ( int ) ( & zOut [ nOut - 1 ] - bufpt ); location: 504 cross_layer: 4 file: testCode/printf.c
realvalue = getDoubleArg ( pArgList ); location: 510 cross_layer: 4 file: testCode/printf.c
realvalue = va_arg ( ap , double ); location: 512 cross_layer: 4 file: testCode/printf.c
* ( va_arg ( ap , int * ) ) = pAccum -> nChar location: 674 cross_layer: 4 file: testCode/printf.c
bufpt = getTextArg ( pArgList ); location: 685 cross_layer: 4 file: testCode/printf.c
if ( bufpt )  location: 687 cross_layer: 4 file: testCode/printf.c
buf [ 0 ] = c = * ( bufpt ++ ); location: 688 cross_layer: 4 file: testCode/printf.c
if ( ( c & 0xc0 ) == 0xc0 )  location: 689 cross_layer: 4 file: testCode/printf.c
while ( length < 4 && ( bufpt [ 0 ] & 0xc0 ) == 0x80 )  location: 690 cross_layer: 4 file: testCode/printf.c
buf [ length ++ ] = * ( bufpt ++ ); location: 691 cross_layer: 4 file: testCode/printf.c
unsigned int ch = va_arg ( ap , unsigned int ) location: 698 cross_layer: 4 file: testCode/printf.c
if ( ch < 0x00080 )  location: 699 cross_layer: 4 file: testCode/printf.c
buf [ 0 ] = ch & 0xff; location: 700 cross_layer: 4 file: testCode/printf.c
if ( ch < 0x00800 )  location: 702 cross_layer: 4 file: testCode/printf.c
buf [ 0 ] = 0xc0 + ( u8 ) ( ( ch >> 6 ) & 0x1f ); location: 703 cross_layer: 4 file: testCode/printf.c
buf [ 1 ] = 0x80 + ( u8 ) ( ch & 0x3f ); location: 704 cross_layer: 4 file: testCode/printf.c
if ( ch < 0x10000 )  location: 706 cross_layer: 4 file: testCode/printf.c
buf [ 0 ] = 0xe0 + ( u8 ) ( ( ch >> 12 ) & 0x0f ); location: 707 cross_layer: 4 file: testCode/printf.c
buf [ 1 ] = 0x80 + ( u8 ) ( ( ch >> 6 ) & 0x3f ); location: 708 cross_layer: 4 file: testCode/printf.c
buf [ 2 ] = 0x80 + ( u8 ) ( ch & 0x3f ); location: 709 cross_layer: 4 file: testCode/printf.c
buf [ 0 ] = 0xf0 + ( u8 ) ( ( ch >> 18 ) & 0x07 ); location: 712 cross_layer: 4 file: testCode/printf.c
buf [ 1 ] = 0x80 + ( u8 ) ( ( ch >> 12 ) & 0x3f ); location: 713 cross_layer: 4 file: testCode/printf.c
buf [ 2 ] = 0x80 + ( u8 ) ( ( ch >> 6 ) & 0x3f ); location: 714 cross_layer: 4 file: testCode/printf.c
buf [ 3 ] = 0x80 + ( u8 ) ( ch & 0x3f ); location: 715 cross_layer: 4 file: testCode/printf.c
if ( precision > 1 )  location: 719 cross_layer: 4 file: testCode/printf.c
width -= precision - 1; location: 720 cross_layer: 4 file: testCode/printf.c
if ( width > 1 && ! flag_leftjustify )  location: 721 cross_layer: 4 file: testCode/printf.c
sqlite3_str_appendchar ( pAccum , width - 1 , ' ' ); location: 722 cross_layer: 4 file: testCode/printf.c
while ( precision -- > 1 )  location: 725 cross_layer: 4 file: testCode/printf.c
sqlite3_str_append ( pAccum , buf , length ); location: 726 cross_layer: 4 file: testCode/printf.c
bufpt = buf; location: 729 cross_layer: 4 file: testCode/printf.c
bufpt = getTextArg ( pArgList ); location: 735 cross_layer: 4 file: testCode/printf.c
bufpt = va_arg ( ap , char * ) location: 738 cross_layer: 4 file: testCode/printf.c
if ( bufpt == 0 )  location: 740 cross_layer: 4 file: testCode/printf.c
if ( pAccum -> nChar == 0 && pAccum -> mxAlloc && width == 0 && precision < 0 && pAccum -> accError == 0 )  location: 743 cross_layer: 4 file: testCode/printf.c
assert ( ( pAccum -> printfFlags & SQLITE_PRINTF_MALLOCED ) == 0 ); location: 752 cross_layer: 4 file: testCode/printf.c
pAccum -> zText = bufpt; location: 753 cross_layer: 4 file: testCode/printf.c
pAccum -> nAlloc = sqlite3DbMallocSize ( pAccum -> db , bufpt ); location: 754 cross_layer: 4 file: testCode/printf.c
pAccum -> nChar = 0x7fffffff & ( int ) strlen ( bufpt ); location: 755 cross_layer: 4 file: testCode/printf.c
pAccum -> printfFlags |= SQLITE_PRINTF_MALLOCED; location: 756 cross_layer: 4 file: testCode/printf.c
zExtra = bufpt; location: 760 cross_layer: 4 file: testCode/printf.c
if ( precision >= 0 )  location: 762 cross_layer: 4 file: testCode/printf.c
unsigned char * z = ( unsigned char * ) bufpt ; location: 766 cross_layer: 4 file: testCode/printf.c
while ( precision -- > 0 && z [ 0 ] )  location: 767 cross_layer: 4 file: testCode/printf.c
SQLITE_SKIP_UTF8 ( z ); location: 768 cross_layer: 4 file: testCode/printf.c
length = ( int ) ( z - ( unsigned char * ) bufpt ); location: 770 cross_layer: 4 file: testCode/printf.c
for(length=0; length<precision && bufpt[length]; length++) location: 772 cross_layer: 4 file: testCode/printf.c
length = 0x7fffffff & ( int ) strlen ( bufpt ); location: 775 cross_layer: 4 file: testCode/printf.c
if ( flag_altform2 && width > 0 )  location: 778 cross_layer: 4 file: testCode/printf.c
int ii = length - 1 ; location: 780 cross_layer: 4 file: testCode/printf.c
while ( ii >= 0 )  location: 781 cross_layer: 4 file: testCode/printf.c
while ( ( bufpt [ ii -- ] & 0xc0 ) == 0x80 )  location: 781 cross_layer: 4 file: testCode/printf.c
width ++; location: 781 cross_layer: 4 file: testCode/printf.c
escarg = getTextArg ( pArgList ); location: 794 cross_layer: 4 file: testCode/printf.c
escarg = va_arg ( ap , char * ) location: 796 cross_layer: 4 file: testCode/printf.c
isnull = escarg == 0; location: 798 cross_layer: 4 file: testCode/printf.c
if ( isnull )  location: 799 cross_layer: 4 file: testCode/printf.c
k = precision; location: 805 cross_layer: 4 file: testCode/printf.c
for(i=n=0; k!=0 && (ch=escarg[i])!=0; i++, k--) location: 806 cross_layer: 4 file: testCode/printf.c
if ( ch == q )  location: 807 cross_layer: 4 file: testCode/printf.c
n ++; location: 807 cross_layer: 4 file: testCode/printf.c
if ( flag_altform2 && ( ch & 0xc0 ) == 0xc0 )  location: 808 cross_layer: 4 file: testCode/printf.c
while ( ( escarg [ i + 1 ] & 0xc0 ) == 0x80 )  location: 809 cross_layer: 4 file: testCode/printf.c
i ++; location: 809 cross_layer: 4 file: testCode/printf.c
needQuote = ! isnull && xtype == etSQLESCAPE2; location: 812 cross_layer: 4 file: testCode/printf.c
n += i + 3; location: 813 cross_layer: 4 file: testCode/printf.c
if ( n > etBUFSIZE )  location: 814 cross_layer: 4 file: testCode/printf.c
bufpt = zExtra = printfTempBuf ( pAccum , n ); location: 815 cross_layer: 4 file: testCode/printf.c
if ( bufpt == 0 )  location: 816 cross_layer: 4 file: testCode/printf.c
bufpt = buf; location: 818 cross_layer: 4 file: testCode/printf.c
if ( needQuote )  location: 821 cross_layer: 4 file: testCode/printf.c
bufpt [ j ++ ] = q; location: 821 cross_layer: 4 file: testCode/printf.c
k = i; location: 822 cross_layer: 4 file: testCode/printf.c
for(i=0; i<k; i++) location: 823 cross_layer: 4 file: testCode/printf.c
bufpt [ j ++ ] = ch = escarg [ i ]; location: 824 cross_layer: 4 file: testCode/printf.c
if ( ch == q )  location: 825 cross_layer: 4 file: testCode/printf.c
bufpt [ j ++ ] = ch; location: 825 cross_layer: 4 file: testCode/printf.c
if ( needQuote )  location: 827 cross_layer: 4 file: testCode/printf.c
bufpt [ j ++ ] = q; location: 827 cross_layer: 4 file: testCode/printf.c
bufpt [ j ] = 0; location: 828 cross_layer: 4 file: testCode/printf.c
length = j; location: 829 cross_layer: 4 file: testCode/printf.c
if ( ( pAccum -> printfFlags & SQLITE_PRINTF_INTERNAL ) == 0 )  location: 834 cross_layer: 4 file: testCode/printf.c
pToken = va_arg ( ap , Token * ) location: 835 cross_layer: 4 file: testCode/printf.c
if ( pToken && pToken -> n )  location: 837 cross_layer: 4 file: testCode/printf.c
sqlite3_str_append ( pAccum , ( const char * ) pToken -> z , pToken -> n ); location: 838 cross_layer: 4 file: testCode/printf.c
if ( ( pAccum -> printfFlags & SQLITE_PRINTF_INTERNAL ) == 0 )  location: 847 cross_layer: 4 file: testCode/printf.c
pSrc = va_arg ( ap , SrcList * ) location: 848 cross_layer: 4 file: testCode/printf.c
k = va_arg ( ap , int ); location: 849 cross_layer: 4 file: testCode/printf.c
pItem = & pSrc -> a [ k ]; location: 850 cross_layer: 4 file: testCode/printf.c
assert ( k >= 0 && k < pSrc -> nSrc ); location: 852 cross_layer: 4 file: testCode/printf.c
if ( pItem -> zDatabase )  location: 853 cross_layer: 4 file: testCode/printf.c
sqlite3_str_appendall ( pAccum , pItem -> zDatabase ); location: 854 cross_layer: 4 file: testCode/printf.c
sqlite3_str_append ( pAccum , "." , 1 ); location: 855 cross_layer: 4 file: testCode/printf.c
sqlite3_str_appendall ( pAccum , pItem -> zName ); location: 857 cross_layer: 4 file: testCode/printf.c
width -= length; location: 874 cross_layer: 4 file: testCode/printf.c
if ( width > 0 )  location: 875 cross_layer: 4 file: testCode/printf.c
sqlite3_str_appendchar ( pAccum , width , ' ' ); location: 876 cross_layer: 4 file: testCode/printf.c
sqlite3_str_append ( pAccum , bufpt , length ); location: 877 cross_layer: 4 file: testCode/printf.c
sqlite3_str_appendchar ( pAccum , width , ' ' ); location: 878 cross_layer: 4 file: testCode/printf.c
sqlite3_str_append ( pAccum , bufpt , length ); location: 880 cross_layer: 4 file: testCode/printf.c
if ( zExtra )  location: 883 cross_layer: 4 file: testCode/printf.c
sqlite3DbFree ( pAccum -> db , zExtra ); location: 884 cross_layer: 4 file: testCode/printf.c
#define etBUFSIZE SQLITE_PRINT_BUF_SIZE  /* Size of the output buffer */ location: 195 cross_layer: 4 file: testCode/printf.c
assert ( pAccum -> nChar > 0 || ( pAccum -> printfFlags & SQLITE_PRINTF_MALLOCED ) == 0 ); location: 241 cross_layer: 4 file: testCode/printf.c
if ( ( pAccum -> printfFlags & SQLITE_PRINTF_SQLFUNC ) != 0 )  location: 244 cross_layer: 4 file: testCode/printf.c
pArgList = va_arg ( ap , PrintfArguments * ) location: 245 cross_layer: 4 file: testCode/printf.c
if ( c != '%' )  location: 251 cross_layer: 4 file: testCode/printf.c
bufpt = ( char * ) fmt; location: 252 cross_layer: 4 file: testCode/printf.c
fmt = strchrnul ( fmt , '%' ); location: 254 cross_layer: 4 file: testCode/printf.c
sqlite3_str_append ( pAccum , bufpt , ( int ) ( fmt - bufpt ) ); location: 258 cross_layer: 4 file: testCode/printf.c
if ( * fmt == 0 )  location: 259 cross_layer: 4 file: testCode/printf.c
if ( ( c = ( * ++ fmt ) ) == 0 )  location: 261 cross_layer: 4 file: testCode/printf.c
sqlite3_str_append ( pAccum , "%" , 1 ); location: 262 cross_layer: 4 file: testCode/printf.c
switch ( c )  location: 273 cross_layer: 4 file: testCode/printf.c
c = * ++ fmt; location: 284 cross_layer: 4 file: testCode/printf.c
if ( c == 'l' )  location: 285 cross_layer: 4 file: testCode/printf.c
c = * ++ fmt; location: 286 cross_layer: 4 file: testCode/printf.c
unsigned wx = c - '0' ; location: 294 cross_layer: 4 file: testCode/printf.c
while ( ( c = * ++ fmt ) >= '0' && c <= '9' )  location: 295 cross_layer: 4 file: testCode/printf.c
wx = wx * 10 + c - '0'; location: 296 cross_layer: 4 file: testCode/printf.c
testcase ( wx > 0x7fffffff ); location: 298 cross_layer: 4 file: testCode/printf.c
width = wx & 0x7fffffff; location: 299 cross_layer: 4 file: testCode/printf.c
if ( width > SQLITE_PRINTF_PRECISION_LIMIT )  location: 301 cross_layer: 4 file: testCode/printf.c
if ( c != '.' && c != 'l' )  location: 305 cross_layer: 4 file: testCode/printf.c
fmt --; location: 308 cross_layer: 4 file: testCode/printf.c
width = ( int ) getIntArg ( pArgList ); location: 314 cross_layer: 4 file: testCode/printf.c
width = va_arg ( ap , int ); location: 316 cross_layer: 4 file: testCode/printf.c
if ( width < 0 )  location: 318 cross_layer: 4 file: testCode/printf.c
width = width >= - 2147483647 ? - width : 0; location: 320 cross_layer: 4 file: testCode/printf.c
if ( width > SQLITE_PRINTF_PRECISION_LIMIT )  location: 323 cross_layer: 4 file: testCode/printf.c
if ( ( c = fmt [ 1 ] ) != '.' && c != 'l' )  location: 327 cross_layer: 4 file: testCode/printf.c
c = * ++ fmt; location: 328 cross_layer: 4 file: testCode/printf.c
c = * ++ fmt; location: 334 cross_layer: 4 file: testCode/printf.c
if ( c == '*' )  location: 335 cross_layer: 4 file: testCode/printf.c
precision = ( int ) getIntArg ( pArgList ); location: 337 cross_layer: 4 file: testCode/printf.c
precision = va_arg ( ap , int ); location: 339 cross_layer: 4 file: testCode/printf.c
if ( precision < 0 )  location: 341 cross_layer: 4 file: testCode/printf.c
precision = precision >= - 2147483647 ? - precision : - 1; location: 342 cross_layer: 4 file: testCode/printf.c
c = * ++ fmt; location: 344 cross_layer: 4 file: testCode/printf.c
while ( c >= '0' && c <= '9' )  location: 347 cross_layer: 4 file: testCode/printf.c
px = px * 10 + c - '0'; location: 348 cross_layer: 4 file: testCode/printf.c
c = * ++ fmt; location: 349 cross_layer: 4 file: testCode/printf.c
testcase ( px > 0x7fffffff ); location: 351 cross_layer: 4 file: testCode/printf.c
precision = px & 0x7fffffff; location: 352 cross_layer: 4 file: testCode/printf.c
if ( precision > SQLITE_PRINTF_PRECISION_LIMIT )  location: 355 cross_layer: 4 file: testCode/printf.c
if ( c == 'l' )  location: 359 cross_layer: 4 file: testCode/printf.c
while ( ! done && ( c = ( * ++ fmt ) ) != 0 )  location: 367 cross_layer: 4 file: testCode/printf.c
if ( c == fmtinfo [ idx ] . fmttype )  location: 373 cross_layer: 4 file: testCode/printf.c
v = getIntArg ( pArgList ); location: 410 cross_layer: 4 file: testCode/printf.c
v = va_arg ( ap , i64 ); location: 413 cross_layer: 4 file: testCode/printf.c
v = va_arg ( ap , long int ) location: 415 cross_layer: 4 file: testCode/printf.c
v = va_arg ( ap , int ); location: 418 cross_layer: 4 file: testCode/printf.c
if ( v < 0 )  location: 420 cross_layer: 4 file: testCode/printf.c
if ( v == SMALLEST_INT64 )  location: 421 cross_layer: 4 file: testCode/printf.c
longvalue = - v; location: 424 cross_layer: 4 file: testCode/printf.c
longvalue = v; location: 428 cross_layer: 4 file: testCode/printf.c
longvalue = ( u64 ) getIntArg ( pArgList ); location: 433 cross_layer: 4 file: testCode/printf.c
longvalue = va_arg ( ap , u64 ); location: 436 cross_layer: 4 file: testCode/printf.c
longvalue = va_arg ( ap , unsigned long int ) location: 438 cross_layer: 4 file: testCode/printf.c
longvalue = va_arg ( ap , unsigned int ) location: 441 cross_layer: 4 file: testCode/printf.c
if ( longvalue == 0 )  location: 445 cross_layer: 4 file: testCode/printf.c
if ( flag_zeropad && precision < width - ( prefix != 0 ) )  location: 446 cross_layer: 4 file: testCode/printf.c
precision = width - ( prefix != 0 ); location: 447 cross_layer: 4 file: testCode/printf.c
if ( precision < etBUFSIZE - 10 - etBUFSIZE / 3 )  location: 449 cross_layer: 4 file: testCode/printf.c
n = ( u64 ) precision + 10; location: 454 cross_layer: 4 file: testCode/printf.c
n += precision / 3; location: 455 cross_layer: 4 file: testCode/printf.c
zOut = zExtra = printfTempBuf ( pAccum , n ); location: 456 cross_layer: 4 file: testCode/printf.c
if ( zOut == 0 )  location: 457 cross_layer: 4 file: testCode/printf.c
nOut = ( int ) n; location: 458 cross_layer: 4 file: testCode/printf.c
bufpt = & zOut [ nOut - 1 ]; location: 460 cross_layer: 4 file: testCode/printf.c
int x = ( int ) ( longvalue % 10 ) ; location: 463 cross_layer: 4 file: testCode/printf.c
if ( x >= 4 || ( longvalue / 10 ) % 10 == 1 )  location: 464 cross_layer: 4 file: testCode/printf.c
* ( -- bufpt ) = zOrd [ x * 2 + 1 ]; location: 467 cross_layer: 4 file: testCode/printf.c
* ( -- bufpt ) = cset [ longvalue % base ]; location: 474 cross_layer: 4 file: testCode/printf.c
longvalue = longvalue / base; location: 475 cross_layer: 4 file: testCode/printf.c
while ( longvalue > 0 )  location: 476 cross_layer: 4 file: testCode/printf.c
length = ( int ) ( & zOut [ nOut - 1 ] - bufpt ); location: 478 cross_layer: 4 file: testCode/printf.c
while ( precision > length )  location: 479 cross_layer: 4 file: testCode/printf.c
* ( -- bufpt ) = '0'; location: 480 cross_layer: 4 file: testCode/printf.c
length ++; location: 481 cross_layer: 4 file: testCode/printf.c
int nn = ( length - 1 ) / 3 ; location: 484 cross_layer: 4 file: testCode/printf.c
int ix = ( length - 1 ) % 3 + 1 ; location: 485 cross_layer: 4 file: testCode/printf.c
bufpt -= nn; location: 486 cross_layer: 4 file: testCode/printf.c
bufpt [ idx ] = bufpt [ idx + nn ]; location: 488 cross_layer: 4 file: testCode/printf.c
ix --; location: 489 cross_layer: 4 file: testCode/printf.c
if ( ix == 0 )  location: 490 cross_layer: 4 file: testCode/printf.c
bufpt [ ++ idx ] = cThousand; location: 491 cross_layer: 4 file: testCode/printf.c
nn --; location: 492 cross_layer: 4 file: testCode/printf.c
* ( -- bufpt ) = prefix; location: 497 cross_layer: 4 file: testCode/printf.c
* ( -- bufpt ) = x; location: 502 cross_layer: 4 file: testCode/printf.c
length = ( int ) ( & zOut [ nOut - 1 ] - bufpt ); location: 504 cross_layer: 4 file: testCode/printf.c
realvalue = getDoubleArg ( pArgList ); location: 510 cross_layer: 4 file: testCode/printf.c
realvalue = va_arg ( ap , double ); location: 512 cross_layer: 4 file: testCode/printf.c
* ( va_arg ( ap , int * ) ) = pAccum -> nChar location: 674 cross_layer: 4 file: testCode/printf.c
bufpt = getTextArg ( pArgList ); location: 685 cross_layer: 4 file: testCode/printf.c
if ( bufpt )  location: 687 cross_layer: 4 file: testCode/printf.c
buf [ 0 ] = c = * ( bufpt ++ ); location: 688 cross_layer: 4 file: testCode/printf.c
if ( ( c & 0xc0 ) == 0xc0 )  location: 689 cross_layer: 4 file: testCode/printf.c
while ( length < 4 && ( bufpt [ 0 ] & 0xc0 ) == 0x80 )  location: 690 cross_layer: 4 file: testCode/printf.c
buf [ length ++ ] = * ( bufpt ++ ); location: 691 cross_layer: 4 file: testCode/printf.c
unsigned int ch = va_arg ( ap , unsigned int ) location: 698 cross_layer: 4 file: testCode/printf.c
if ( ch < 0x00080 )  location: 699 cross_layer: 4 file: testCode/printf.c
buf [ 0 ] = ch & 0xff; location: 700 cross_layer: 4 file: testCode/printf.c
if ( ch < 0x00800 )  location: 702 cross_layer: 4 file: testCode/printf.c
buf [ 0 ] = 0xc0 + ( u8 ) ( ( ch >> 6 ) & 0x1f ); location: 703 cross_layer: 4 file: testCode/printf.c
buf [ 1 ] = 0x80 + ( u8 ) ( ch & 0x3f ); location: 704 cross_layer: 4 file: testCode/printf.c
if ( ch < 0x10000 )  location: 706 cross_layer: 4 file: testCode/printf.c
buf [ 0 ] = 0xe0 + ( u8 ) ( ( ch >> 12 ) & 0x0f ); location: 707 cross_layer: 4 file: testCode/printf.c
buf [ 1 ] = 0x80 + ( u8 ) ( ( ch >> 6 ) & 0x3f ); location: 708 cross_layer: 4 file: testCode/printf.c
buf [ 2 ] = 0x80 + ( u8 ) ( ch & 0x3f ); location: 709 cross_layer: 4 file: testCode/printf.c
buf [ 0 ] = 0xf0 + ( u8 ) ( ( ch >> 18 ) & 0x07 ); location: 712 cross_layer: 4 file: testCode/printf.c
buf [ 1 ] = 0x80 + ( u8 ) ( ( ch >> 12 ) & 0x3f ); location: 713 cross_layer: 4 file: testCode/printf.c
buf [ 2 ] = 0x80 + ( u8 ) ( ( ch >> 6 ) & 0x3f ); location: 714 cross_layer: 4 file: testCode/printf.c
buf [ 3 ] = 0x80 + ( u8 ) ( ch & 0x3f ); location: 715 cross_layer: 4 file: testCode/printf.c
if ( precision > 1 )  location: 719 cross_layer: 4 file: testCode/printf.c
width -= precision - 1; location: 720 cross_layer: 4 file: testCode/printf.c
if ( width > 1 && ! flag_leftjustify )  location: 721 cross_layer: 4 file: testCode/printf.c
sqlite3_str_appendchar ( pAccum , width - 1 , ' ' ); location: 722 cross_layer: 4 file: testCode/printf.c
while ( precision -- > 1 )  location: 725 cross_layer: 4 file: testCode/printf.c
sqlite3_str_append ( pAccum , buf , length ); location: 726 cross_layer: 4 file: testCode/printf.c
bufpt = buf; location: 729 cross_layer: 4 file: testCode/printf.c
bufpt = getTextArg ( pArgList ); location: 735 cross_layer: 4 file: testCode/printf.c
bufpt = va_arg ( ap , char * ) location: 738 cross_layer: 4 file: testCode/printf.c
if ( bufpt == 0 )  location: 740 cross_layer: 4 file: testCode/printf.c
if ( pAccum -> nChar == 0 && pAccum -> mxAlloc && width == 0 && precision < 0 && pAccum -> accError == 0 )  location: 743 cross_layer: 4 file: testCode/printf.c
assert ( ( pAccum -> printfFlags & SQLITE_PRINTF_MALLOCED ) == 0 ); location: 752 cross_layer: 4 file: testCode/printf.c
pAccum -> zText = bufpt; location: 753 cross_layer: 4 file: testCode/printf.c
pAccum -> nAlloc = sqlite3DbMallocSize ( pAccum -> db , bufpt ); location: 754 cross_layer: 4 file: testCode/printf.c
pAccum -> nChar = 0x7fffffff & ( int ) strlen ( bufpt ); location: 755 cross_layer: 4 file: testCode/printf.c
pAccum -> printfFlags |= SQLITE_PRINTF_MALLOCED; location: 756 cross_layer: 4 file: testCode/printf.c
zExtra = bufpt; location: 760 cross_layer: 4 file: testCode/printf.c
if ( precision >= 0 )  location: 762 cross_layer: 4 file: testCode/printf.c
unsigned char * z = ( unsigned char * ) bufpt ; location: 766 cross_layer: 4 file: testCode/printf.c
while ( precision -- > 0 && z [ 0 ] )  location: 767 cross_layer: 4 file: testCode/printf.c
SQLITE_SKIP_UTF8 ( z ); location: 768 cross_layer: 4 file: testCode/printf.c
length = ( int ) ( z - ( unsigned char * ) bufpt ); location: 770 cross_layer: 4 file: testCode/printf.c
length = 0x7fffffff & ( int ) strlen ( bufpt ); location: 775 cross_layer: 4 file: testCode/printf.c
if ( flag_altform2 && width > 0 )  location: 778 cross_layer: 4 file: testCode/printf.c
int ii = length - 1 ; location: 780 cross_layer: 4 file: testCode/printf.c
while ( ii >= 0 )  location: 781 cross_layer: 4 file: testCode/printf.c
while ( ( bufpt [ ii -- ] & 0xc0 ) == 0x80 )  location: 781 cross_layer: 4 file: testCode/printf.c
width ++; location: 781 cross_layer: 4 file: testCode/printf.c
escarg = getTextArg ( pArgList ); location: 794 cross_layer: 4 file: testCode/printf.c
escarg = va_arg ( ap , char * ) location: 796 cross_layer: 4 file: testCode/printf.c
isnull = escarg == 0; location: 798 cross_layer: 4 file: testCode/printf.c
if ( isnull )  location: 799 cross_layer: 4 file: testCode/printf.c
k = precision; location: 805 cross_layer: 4 file: testCode/printf.c
if ( ch == q )  location: 807 cross_layer: 4 file: testCode/printf.c
n ++; location: 807 cross_layer: 4 file: testCode/printf.c
if ( flag_altform2 && ( ch & 0xc0 ) == 0xc0 )  location: 808 cross_layer: 4 file: testCode/printf.c
while ( ( escarg [ i + 1 ] & 0xc0 ) == 0x80 )  location: 809 cross_layer: 4 file: testCode/printf.c
i ++; location: 809 cross_layer: 4 file: testCode/printf.c
needQuote = ! isnull && xtype == etSQLESCAPE2; location: 812 cross_layer: 4 file: testCode/printf.c
n += i + 3; location: 813 cross_layer: 4 file: testCode/printf.c
if ( n > etBUFSIZE )  location: 814 cross_layer: 4 file: testCode/printf.c
bufpt = zExtra = printfTempBuf ( pAccum , n ); location: 815 cross_layer: 4 file: testCode/printf.c
if ( bufpt == 0 )  location: 816 cross_layer: 4 file: testCode/printf.c
bufpt = buf; location: 818 cross_layer: 4 file: testCode/printf.c
if ( needQuote )  location: 821 cross_layer: 4 file: testCode/printf.c
bufpt [ j ++ ] = q; location: 821 cross_layer: 4 file: testCode/printf.c
k = i; location: 822 cross_layer: 4 file: testCode/printf.c
bufpt [ j ++ ] = ch = escarg [ i ]; location: 824 cross_layer: 4 file: testCode/printf.c
if ( ch == q )  location: 825 cross_layer: 4 file: testCode/printf.c
bufpt [ j ++ ] = ch; location: 825 cross_layer: 4 file: testCode/printf.c
if ( needQuote )  location: 827 cross_layer: 4 file: testCode/printf.c
bufpt [ j ++ ] = q; location: 827 cross_layer: 4 file: testCode/printf.c
bufpt [ j ] = 0; location: 828 cross_layer: 4 file: testCode/printf.c
length = j; location: 829 cross_layer: 4 file: testCode/printf.c
if ( ( pAccum -> printfFlags & SQLITE_PRINTF_INTERNAL ) == 0 )  location: 834 cross_layer: 4 file: testCode/printf.c
pToken = va_arg ( ap , Token * ) location: 835 cross_layer: 4 file: testCode/printf.c
if ( pToken && pToken -> n )  location: 837 cross_layer: 4 file: testCode/printf.c
sqlite3_str_append ( pAccum , ( const char * ) pToken -> z , pToken -> n ); location: 838 cross_layer: 4 file: testCode/printf.c
if ( ( pAccum -> printfFlags & SQLITE_PRINTF_INTERNAL ) == 0 )  location: 847 cross_layer: 4 file: testCode/printf.c
pSrc = va_arg ( ap , SrcList * ) location: 848 cross_layer: 4 file: testCode/printf.c
k = va_arg ( ap , int ); location: 849 cross_layer: 4 file: testCode/printf.c
pItem = & pSrc -> a [ k ]; location: 850 cross_layer: 4 file: testCode/printf.c
assert ( k >= 0 && k < pSrc -> nSrc ); location: 852 cross_layer: 4 file: testCode/printf.c
if ( pItem -> zDatabase )  location: 853 cross_layer: 4 file: testCode/printf.c
sqlite3_str_appendall ( pAccum , pItem -> zDatabase ); location: 854 cross_layer: 4 file: testCode/printf.c
sqlite3_str_append ( pAccum , "." , 1 ); location: 855 cross_layer: 4 file: testCode/printf.c
sqlite3_str_appendall ( pAccum , pItem -> zName ); location: 857 cross_layer: 4 file: testCode/printf.c
width -= length; location: 874 cross_layer: 4 file: testCode/printf.c
if ( width > 0 )  location: 875 cross_layer: 4 file: testCode/printf.c
sqlite3_str_appendchar ( pAccum , width , ' ' ); location: 876 cross_layer: 4 file: testCode/printf.c
sqlite3_str_append ( pAccum , bufpt , length ); location: 877 cross_layer: 4 file: testCode/printf.c
sqlite3_str_appendchar ( pAccum , width , ' ' ); location: 878 cross_layer: 4 file: testCode/printf.c
sqlite3_str_append ( pAccum , bufpt , length ); location: 880 cross_layer: 4 file: testCode/printf.c
if ( zExtra )  location: 883 cross_layer: 4 file: testCode/printf.c
sqlite3DbFree ( pAccum -> db , zExtra ); location: 884 cross_layer: 4 file: testCode/printf.c
sqlite3OomFault ( db ); location: 1129 cross_layer: 4 file: testCode/printf.c
void sqlite3OomFault(sqlite3 *db) location: 704 cross_layer: 4 file: testCode/malloc.c
if ( db -> mallocFailed == 0 && db -> bBenignMalloc == 0 )  location: 705 cross_layer: 4 file: testCode/malloc.c
db -> mallocFailed = 1; location: 706 cross_layer: 4 file: testCode/malloc.c
if ( db -> nVdbeExec > 0 )  location: 707 cross_layer: 4 file: testCode/malloc.c
db -> u1 . isInterrupted = 1; location: 708 cross_layer: 4 file: testCode/malloc.c
if ( db -> pParse )  location: 711 cross_layer: 4 file: testCode/malloc.c
db -> pParse -> rc = SQLITE_NOMEM_BKPT; location: 712 cross_layer: 4 file: testCode/malloc.c
void sqlite3OomFault(sqlite3 *db) location: 704 cross_layer: 4 file: testCode/malloc.c
if ( db -> mallocFailed == 0 && db -> bBenignMalloc == 0 )  location: 705 cross_layer: 4 file: testCode/malloc.c
db -> mallocFailed = 1; location: 706 cross_layer: 4 file: testCode/malloc.c
if ( db -> nVdbeExec > 0 )  location: 707 cross_layer: 4 file: testCode/malloc.c
db -> u1 . isInterrupted = 1; location: 708 cross_layer: 4 file: testCode/malloc.c
if ( db -> pParse )  location: 711 cross_layer: 4 file: testCode/malloc.c
db -> pParse -> rc = SQLITE_NOMEM_BKPT; location: 712 cross_layer: 4 file: testCode/malloc.c
char *sqlite3VMPrintf(sqlite3 *db, const char *zFormat, va_list ap) location: 1118 cross_layer: 4 file: testCode/printf.c
assert ( db != 0 ); location: 1122 cross_layer: 4 file: testCode/printf.c
sqlite3StrAccumInit ( & acc , db , zBase , sizeof ( zBase ) , db -> aLimit [ SQLITE_LIMIT_LENGTH ] ); location: 1123 cross_layer: 4 file: testCode/printf.c
sqlite3_str_vappendf ( & acc , zFormat , ap ); location: 1126 cross_layer: 4 file: testCode/printf.c
sqlite3OomFault ( db ); location: 1129 cross_layer: 4 file: testCode/printf.c
char *sqlite3VMPrintf(sqlite3 *db, const char *zFormat, va_list ap) location: 1118 cross_layer: 4 file: testCode/printf.c
assert ( db != 0 ); location: 1122 cross_layer: 4 file: testCode/printf.c
sqlite3StrAccumInit ( & acc , db , zBase , sizeof ( zBase ) , db -> aLimit [ SQLITE_LIMIT_LENGTH ] ); location: 1123 cross_layer: 4 file: testCode/printf.c
sqlite3_str_vappendf ( & acc , zFormat , ap ); location: 1126 cross_layer: 4 file: testCode/printf.c
sqlite3OomFault ( db ); location: 1129 cross_layer: 4 file: testCode/printf.c
if ( db -> suppressErr )  location: 188 cross_layer: 3 file: testCode/util.c
sqlite3DbFree ( db , zMsg ); location: 189 cross_layer: 3 file: testCode/util.c
void sqlite3DbFree(sqlite3 *db, void *p) location: 415 cross_layer: 4 file: testCode/malloc.c
assert ( db == 0 || sqlite3_mutex_held ( db -> mutex ) ); location: 416 cross_layer: 4 file: testCode/malloc.c
int sqlite3_mutex_held(sqlite3_mutex *p) location: 350 cross_layer: 3 file: testCode/mutex.c
assert ( p == 0 || sqlite3GlobalConfig . mutex . xMutexHeld ); location: 351 cross_layer: 3 file: testCode/mutex.c
return p == 0 || sqlite3GlobalConfig . mutex . xMutexHeld ( p ) ; location: 352 cross_layer: 3 file: testCode/mutex.c
if ( p )  location: 417 cross_layer: 4 file: testCode/malloc.c
sqlite3DbFreeNN ( db , p ); location: 417 cross_layer: 4 file: testCode/malloc.c
void sqlite3DbFreeNN(sqlite3 *db, void *p) location: 390 cross_layer: 3 file: testCode/malloc.c
assert ( db == 0 || sqlite3_mutex_held ( db -> mutex ) ); location: 391 cross_layer: 3 file: testCode/malloc.c
int sqlite3_mutex_held(sqlite3_mutex *p) location: 350 cross_layer: 4 file: testCode/mutex.c
assert ( p == 0 || sqlite3GlobalConfig . mutex . xMutexHeld ); location: 351 cross_layer: 4 file: testCode/mutex.c
return p == 0 || sqlite3GlobalConfig . mutex . xMutexHeld ( p ) ; location: 352 cross_layer: 4 file: testCode/mutex.c
assert ( p != 0 ); location: 392 cross_layer: 3 file: testCode/malloc.c
if ( db )  location: 393 cross_layer: 3 file: testCode/malloc.c
if ( db -> pnBytesFreed )  location: 394 cross_layer: 3 file: testCode/malloc.c
measureAllocationSize ( db , p ); location: 395 cross_layer: 3 file: testCode/malloc.c
static SQLITE_NOINLINE void measureAllocationSize(sqlite3 *db, void *p) location: 381 cross_layer: 4 file: testCode/malloc.c
* db -> pnBytesFreed += sqlite3DbMallocSize ( db , p ); location: 382 cross_layer: 4 file: testCode/malloc.c
if ( isLookaside ( db , p ) )  location: 398 cross_layer: 3 file: testCode/malloc.c
static int isLookaside(sqlite3 *db, void *p) location: 320 cross_layer: 4 file: testCode/malloc.c
return SQLITE_WITHIN ( p , db -> lookaside . pStart , db -> lookaside . pEnd ) ; location: 321 cross_layer: 4 file: testCode/malloc.c
LookasideSlot * pBuf = ( LookasideSlot * ) p ; location: 399 cross_layer: 3 file: testCode/malloc.c
memset ( p , 0xaa , db -> lookaside . szTrue ); location: 402 cross_layer: 3 file: testCode/malloc.c
pBuf -> pNext = db -> lookaside . pFree; location: 404 cross_layer: 3 file: testCode/malloc.c
db -> lookaside . pFree = pBuf; location: 405 cross_layer: 3 file: testCode/malloc.c
assert ( sqlite3MemdebugHasType ( p , ( MEMTYPE_LOOKASIDE | MEMTYPE_HEAP ) ) ); location: 409 cross_layer: 3 file: testCode/malloc.c
int sqlite3MemdebugHasType(void *p, u8 eType) location: 399 cross_layer: 4 file: testCode/mem2.c
if ( p && sqlite3GlobalConfig . m . xMalloc == sqlite3MemMalloc )  location: 401 cross_layer: 4 file: testCode/mem2.c
pHdr = sqlite3MemsysGetHeader ( p ); location: 403 cross_layer: 4 file: testCode/mem2.c
assert ( pHdr -> iForeGuard == FOREGUARD ); location: 404 cross_layer: 4 file: testCode/mem2.c
if ( ( pHdr -> eType & eType ) == 0 )  location: 405 cross_layer: 4 file: testCode/mem2.c
assert ( sqlite3MemdebugNoType ( p , ( u8 ) ~ ( MEMTYPE_LOOKASIDE | MEMTYPE_HEAP ) ) ); location: 410 cross_layer: 3 file: testCode/malloc.c
int sqlite3MemdebugNoType(void *p, u8 eType) location: 421 cross_layer: 4 file: testCode/mem2.c
if ( p && sqlite3GlobalConfig . m . xMalloc == sqlite3MemMalloc )  location: 423 cross_layer: 4 file: testCode/mem2.c
pHdr = sqlite3MemsysGetHeader ( p ); location: 425 cross_layer: 4 file: testCode/mem2.c
assert ( pHdr -> iForeGuard == FOREGUARD ); location: 426 cross_layer: 4 file: testCode/mem2.c
if ( ( pHdr -> eType & eType ) != 0 )  location: 427 cross_layer: 4 file: testCode/mem2.c
assert ( db != 0 || sqlite3MemdebugNoType ( p , MEMTYPE_LOOKASIDE ) ); location: 411 cross_layer: 3 file: testCode/malloc.c
int sqlite3MemdebugNoType(void *p, u8 eType) location: 421 cross_layer: 4 file: testCode/mem2.c
if ( p && sqlite3GlobalConfig . m . xMalloc == sqlite3MemMalloc )  location: 423 cross_layer: 4 file: testCode/mem2.c
pHdr = sqlite3MemsysGetHeader ( p ); location: 425 cross_layer: 4 file: testCode/mem2.c
assert ( pHdr -> iForeGuard == FOREGUARD ); location: 426 cross_layer: 4 file: testCode/mem2.c
if ( ( pHdr -> eType & eType ) != 0 )  location: 427 cross_layer: 4 file: testCode/mem2.c
sqlite3MemdebugSetType ( p , MEMTYPE_HEAP ); location: 412 cross_layer: 3 file: testCode/malloc.c
void sqlite3MemdebugSetType(void *p, u8 eType) location: 381 cross_layer: 4 file: testCode/mem2.c
if ( p && sqlite3GlobalConfig . m . xMalloc == sqlite3MemMalloc )  location: 382 cross_layer: 4 file: testCode/mem2.c
pHdr = sqlite3MemsysGetHeader ( p ); location: 384 cross_layer: 4 file: testCode/mem2.c
assert ( pHdr -> iForeGuard == FOREGUARD ); location: 385 cross_layer: 4 file: testCode/mem2.c
pHdr -> eType = eType; location: 386 cross_layer: 4 file: testCode/mem2.c
sqlite3_free ( p ); location: 413 cross_layer: 3 file: testCode/malloc.c
void sqlite3_free(void *p) location: 362 cross_layer: 4 file: testCode/malloc.c
if ( p == 0 )  location: 363 cross_layer: 4 file: testCode/malloc.c
assert ( sqlite3MemdebugHasType ( p , MEMTYPE_HEAP ) ); location: 364 cross_layer: 4 file: testCode/malloc.c
assert ( sqlite3MemdebugNoType ( p , ( u8 ) ~MEMTYPE_HEAP ) ); location: 365 cross_layer: 4 file: testCode/malloc.c
sqlite3StatusDown ( SQLITE_STATUS_MEMORY_USED , sqlite3MallocSize ( p ) ); location: 368 cross_layer: 4 file: testCode/malloc.c
sqlite3GlobalConfig . m . xFree ( p ); location: 370 cross_layer: 4 file: testCode/malloc.c
sqlite3GlobalConfig . m . xFree ( p ); location: 373 cross_layer: 4 file: testCode/malloc.c
void sqlite3DbFree(sqlite3 *db, void *p) location: 415 cross_layer: 4 file: testCode/malloc.c
assert ( db == 0 || sqlite3_mutex_held ( db -> mutex ) ); location: 416 cross_layer: 4 file: testCode/malloc.c
if ( p )  location: 417 cross_layer: 4 file: testCode/malloc.c
sqlite3DbFreeNN ( db , p ); location: 417 cross_layer: 4 file: testCode/malloc.c
void sqlite3DbFree(sqlite3 *db, void *p) location: 415 cross_layer: 4 file: testCode/malloc.c
assert ( db == 0 || sqlite3_mutex_held ( db -> mutex ) ); location: 416 cross_layer: 4 file: testCode/malloc.c
if ( p )  location: 417 cross_layer: 4 file: testCode/malloc.c
sqlite3DbFreeNN ( db , p ); location: 417 cross_layer: 4 file: testCode/malloc.c
pParse -> nErr ++; location: 191 cross_layer: 3 file: testCode/util.c
sqlite3DbFree ( db , pParse -> zErrMsg ); location: 192 cross_layer: 3 file: testCode/util.c
void sqlite3DbFree(sqlite3 *db, void *p) location: 415 cross_layer: 4 file: testCode/malloc.c
assert ( db == 0 || sqlite3_mutex_held ( db -> mutex ) ); location: 416 cross_layer: 4 file: testCode/malloc.c
if ( p )  location: 417 cross_layer: 4 file: testCode/malloc.c
sqlite3DbFreeNN ( db , p ); location: 417 cross_layer: 4 file: testCode/malloc.c
void sqlite3DbFree(sqlite3 *db, void *p) location: 415 cross_layer: 4 file: testCode/malloc.c
assert ( db == 0 || sqlite3_mutex_held ( db -> mutex ) ); location: 416 cross_layer: 4 file: testCode/malloc.c
if ( p )  location: 417 cross_layer: 4 file: testCode/malloc.c
sqlite3DbFreeNN ( db , p ); location: 417 cross_layer: 4 file: testCode/malloc.c
void sqlite3DbFree(sqlite3 *db, void *p) location: 415 cross_layer: 4 file: testCode/malloc.c
assert ( db == 0 || sqlite3_mutex_held ( db -> mutex ) ); location: 416 cross_layer: 4 file: testCode/malloc.c
if ( p )  location: 417 cross_layer: 4 file: testCode/malloc.c
sqlite3DbFreeNN ( db , p ); location: 417 cross_layer: 4 file: testCode/malloc.c
pParse -> zErrMsg = zMsg; location: 193 cross_layer: 3 file: testCode/util.c
pParse -> rc = SQLITE_ERROR; location: 194 cross_layer: 3 file: testCode/util.c
pParse -> pWith = 0; location: 195 cross_layer: 3 file: testCode/util.c
for(j=0; j<pRightTab->nCol; j++) location: 484 cross_layer: 2 file: select.c
zName = pRightTab -> aCol [ j ] . zName; location: 489 cross_layer: 2 file: select.c
if ( tableAndColumnIndex ( pSrc , i + 1 , zName , & iLeft , & iLeftCol ) )  location: 490 cross_layer: 2 file: select.c
static int tableAndColumnIndex(
SrcList *pSrc,       /* Array of tables to search */
int N,               /* Number of tables in pSrc->a[] to search */
const char *zCol,    /* Name of the column we are looking for */
int *piTab,          /* Write index of pSrc->a[] here */
int *piCol           /* Write index of pSrc->a[*piTab].pTab->aCol[] here */
) location: 317 cross_layer: 3 file: select.c
assert ( ( piTab == 0 ) == ( piCol == 0 ) ); location: 321 cross_layer: 3 file: select.c
for(i=0; i<N; i++) location: 322 cross_layer: 3 file: select.c
iCol = columnIndex ( pSrc -> a [ i ] . pTab , zCol ); location: 323 cross_layer: 3 file: select.c
static int columnIndex(Table *pTab, const char *zCol) location: 294 cross_layer: 3 file: select.c
for(i=0; i<pTab->nCol; i++) location: 296 cross_layer: 3 file: select.c
if ( sqlite3StrICmp ( pTab -> aCol [ i ] . zName , zCol ) == 0 )  location: 297 cross_layer: 3 file: select.c
int sqlite3StrICmp(const char *zLeft, const char *zRight) location: 286 cross_layer: 4 file: testCode/util.c
a = ( unsigned char * ) zLeft; location: 289 cross_layer: 4 file: testCode/util.c
b = ( unsigned char * ) zRight; location: 290 cross_layer: 4 file: testCode/util.c
c = * a; location: 292 cross_layer: 4 file: testCode/util.c
x = * b; location: 293 cross_layer: 4 file: testCode/util.c
if ( c == x )  location: 294 cross_layer: 4 file: testCode/util.c
if ( c == 0 )  location: 295 cross_layer: 4 file: testCode/util.c
c = ( int ) UpperToLower [ c ] - ( int ) UpperToLower [ x ]; location: 297 cross_layer: 4 file: testCode/util.c
if ( c )  location: 298 cross_layer: 4 file: testCode/util.c
a ++; location: 300 cross_layer: 4 file: testCode/util.c
b ++; location: 301 cross_layer: 4 file: testCode/util.c
return c ; location: 303 cross_layer: 4 file: testCode/util.c
static int columnIndex(Table *pTab, const char *zCol) location: 294 cross_layer: 4 file: select.c
if ( sqlite3StrICmp ( pTab -> aCol [ i ] . zName , zCol ) == 0 )  location: 297 cross_layer: 4 file: select.c
static int columnIndex(Table *pTab, const char *zCol) location: 294 cross_layer: 4 file: select.c
if ( sqlite3StrICmp ( pTab -> aCol [ i ] . zName , zCol ) == 0 )  location: 297 cross_layer: 4 file: select.c
int sqlite3StrICmp(const char *zLeft, const char *zRight) location: 286 cross_layer: 4 file: testCode/util.c
a = ( unsigned char * ) zLeft; location: 289 cross_layer: 4 file: testCode/util.c
b = ( unsigned char * ) zRight; location: 290 cross_layer: 4 file: testCode/util.c
c = * a; location: 292 cross_layer: 4 file: testCode/util.c
x = * b; location: 293 cross_layer: 4 file: testCode/util.c
if ( c == x )  location: 294 cross_layer: 4 file: testCode/util.c
if ( c == 0 )  location: 295 cross_layer: 4 file: testCode/util.c
c = ( int ) UpperToLower [ c ] - ( int ) UpperToLower [ x ]; location: 297 cross_layer: 4 file: testCode/util.c
if ( c )  location: 298 cross_layer: 4 file: testCode/util.c
a ++; location: 300 cross_layer: 4 file: testCode/util.c
b ++; location: 301 cross_layer: 4 file: testCode/util.c
return c ; location: 303 cross_layer: 4 file: testCode/util.c
if ( iCol >= 0 )  location: 324 cross_layer: 3 file: select.c
if ( piTab )  location: 325 cross_layer: 3 file: select.c
* piTab = i; location: 326 cross_layer: 3 file: select.c
* piCol = iCol; location: 327 cross_layer: 3 file: select.c
addWhereTerm ( pParse , pSrc , iLeft , iLeftCol , i + 1 , j , isOuter , & p -> pWhere ); location: 491 cross_layer: 2 file: select.c
static void addWhereTerm(
Parse *pParse,                  /* Parsing context */
SrcList *pSrc,                  /* List of tables in FROM clause */
int iLeft,                      /* Index of first table to join in pSrc */
int iColLeft,                   /* Index of column in first table */
int iRight,                     /* Index of second table in pSrc */
int iColRight,                  /* Index of column in second table */
int isOuterJoin,                /* True if this is an OUTER join */
Expr **ppWhere                  /* IN/OUT: The WHERE clause to add to */
) location: 355 cross_layer: 3 file: select.c
sqlite3 * db = pParse -> db ; location: 356 cross_layer: 3 file: select.c
assert ( iLeft < iRight ); location: 361 cross_layer: 3 file: select.c
assert ( pSrc -> nSrc > iRight ); location: 362 cross_layer: 3 file: select.c
assert ( pSrc -> a [ iLeft ] . pTab ); location: 363 cross_layer: 3 file: select.c
assert ( pSrc -> a [ iRight ] . pTab ); location: 364 cross_layer: 3 file: select.c
pE1 = sqlite3CreateColumnExpr ( db , pSrc , iLeft , iColLeft ); location: 366 cross_layer: 3 file: select.c
Expr *sqlite3CreateColumnExpr(sqlite3 *db, SrcList *pSrc, int iSrc, int iCol) location: 619 cross_layer: 4 file: testCode/resolve.c
Expr * p = sqlite3ExprAlloc ( db , TK_COLUMN , 0 , 0 ) ; location: 620 cross_layer: 4 file: testCode/resolve.c
if ( p )  location: 621 cross_layer: 4 file: testCode/resolve.c
struct SrcList_item * pItem = & pSrc -> a [ iSrc ] ; location: 622 cross_layer: 4 file: testCode/resolve.c
Table * pTab = p -> y . pTab = pItem -> pTab ; location: 623 cross_layer: 4 file: testCode/resolve.c
p -> iTable = pItem -> iCursor; location: 624 cross_layer: 4 file: testCode/resolve.c
if ( p -> y . pTab -> iPKey == iCol )  location: 625 cross_layer: 4 file: testCode/resolve.c
p -> iColumn = - 1; location: 626 cross_layer: 4 file: testCode/resolve.c
p -> iColumn = ( ynVar ) iCol; location: 628 cross_layer: 4 file: testCode/resolve.c
if ( ( pTab -> tabFlags & TF_HasGenerated ) != 0 && ( pTab -> aCol [ iCol ] . colFlags & COLFLAG_GENERATED ) != 0 )  location: 629 cross_layer: 4 file: testCode/resolve.c
testcase ( pTab -> nCol == 63 ); location: 632 cross_layer: 4 file: testCode/resolve.c
testcase ( pTab -> nCol == 64 ); location: 633 cross_layer: 4 file: testCode/resolve.c
pItem -> colUsed = pTab -> nCol >= 64 ? ALLBITS : MASKBIT ( pTab -> nCol ) - 1; location: 634 cross_layer: 4 file: testCode/resolve.c
testcase ( iCol == BMS ); location: 636 cross_layer: 4 file: testCode/resolve.c
testcase ( iCol == BMS - 1 ); location: 637 cross_layer: 4 file: testCode/resolve.c
pItem -> colUsed |= ( ( Bitmask ) 1 ) << ( iCol >= BMS ? BMS - 1 : iCol ); location: 638 cross_layer: 4 file: testCode/resolve.c
return p ; location: 642 cross_layer: 4 file: testCode/resolve.c
Expr *sqlite3CreateColumnExpr(sqlite3 *db, SrcList *pSrc, int iSrc, int iCol) location: 619 cross_layer: 4 file: testCode/resolve.c
Expr * p = sqlite3ExprAlloc ( db , TK_COLUMN , 0 , 0 ) ; location: 620 cross_layer: 4 file: testCode/resolve.c
if ( p )  location: 621 cross_layer: 4 file: testCode/resolve.c
struct SrcList_item * pItem = & pSrc -> a [ iSrc ] ; location: 622 cross_layer: 4 file: testCode/resolve.c
Table * pTab = p -> y . pTab = pItem -> pTab ; location: 623 cross_layer: 4 file: testCode/resolve.c
p -> iTable = pItem -> iCursor; location: 624 cross_layer: 4 file: testCode/resolve.c
if ( p -> y . pTab -> iPKey == iCol )  location: 625 cross_layer: 4 file: testCode/resolve.c
p -> iColumn = - 1; location: 626 cross_layer: 4 file: testCode/resolve.c
p -> iColumn = ( ynVar ) iCol; location: 628 cross_layer: 4 file: testCode/resolve.c
if ( ( pTab -> tabFlags & TF_HasGenerated ) != 0 && ( pTab -> aCol [ iCol ] . colFlags & COLFLAG_GENERATED ) != 0 )  location: 629 cross_layer: 4 file: testCode/resolve.c
testcase ( pTab -> nCol == 63 ); location: 632 cross_layer: 4 file: testCode/resolve.c
testcase ( pTab -> nCol == 64 ); location: 633 cross_layer: 4 file: testCode/resolve.c
pItem -> colUsed = pTab -> nCol >= 64 ? ALLBITS : MASKBIT ( pTab -> nCol ) - 1; location: 634 cross_layer: 4 file: testCode/resolve.c
testcase ( iCol == BMS ); location: 636 cross_layer: 4 file: testCode/resolve.c
testcase ( iCol == BMS - 1 ); location: 637 cross_layer: 4 file: testCode/resolve.c
pItem -> colUsed |= ( ( Bitmask ) 1 ) << ( iCol >= BMS ? BMS - 1 : iCol ); location: 638 cross_layer: 4 file: testCode/resolve.c
return p ; location: 642 cross_layer: 4 file: testCode/resolve.c
pE2 = sqlite3CreateColumnExpr ( db , pSrc , iRight , iColRight ); location: 367 cross_layer: 3 file: select.c
Expr *sqlite3CreateColumnExpr(sqlite3 *db, SrcList *pSrc, int iSrc, int iCol) location: 619 cross_layer: 4 file: testCode/resolve.c
Expr * p = sqlite3ExprAlloc ( db , TK_COLUMN , 0 , 0 ) ; location: 620 cross_layer: 4 file: testCode/resolve.c
if ( p )  location: 621 cross_layer: 4 file: testCode/resolve.c
struct SrcList_item * pItem = & pSrc -> a [ iSrc ] ; location: 622 cross_layer: 4 file: testCode/resolve.c
Table * pTab = p -> y . pTab = pItem -> pTab ; location: 623 cross_layer: 4 file: testCode/resolve.c
p -> iTable = pItem -> iCursor; location: 624 cross_layer: 4 file: testCode/resolve.c
if ( p -> y . pTab -> iPKey == iCol )  location: 625 cross_layer: 4 file: testCode/resolve.c
p -> iColumn = - 1; location: 626 cross_layer: 4 file: testCode/resolve.c
p -> iColumn = ( ynVar ) iCol; location: 628 cross_layer: 4 file: testCode/resolve.c
if ( ( pTab -> tabFlags & TF_HasGenerated ) != 0 && ( pTab -> aCol [ iCol ] . colFlags & COLFLAG_GENERATED ) != 0 )  location: 629 cross_layer: 4 file: testCode/resolve.c
testcase ( pTab -> nCol == 63 ); location: 632 cross_layer: 4 file: testCode/resolve.c
testcase ( pTab -> nCol == 64 ); location: 633 cross_layer: 4 file: testCode/resolve.c
pItem -> colUsed = pTab -> nCol >= 64 ? ALLBITS : MASKBIT ( pTab -> nCol ) - 1; location: 634 cross_layer: 4 file: testCode/resolve.c
testcase ( iCol == BMS ); location: 636 cross_layer: 4 file: testCode/resolve.c
testcase ( iCol == BMS - 1 ); location: 637 cross_layer: 4 file: testCode/resolve.c
pItem -> colUsed |= ( ( Bitmask ) 1 ) << ( iCol >= BMS ? BMS - 1 : iCol ); location: 638 cross_layer: 4 file: testCode/resolve.c
return p ; location: 642 cross_layer: 4 file: testCode/resolve.c
Expr *sqlite3CreateColumnExpr(sqlite3 *db, SrcList *pSrc, int iSrc, int iCol) location: 619 cross_layer: 4 file: testCode/resolve.c
Expr * p = sqlite3ExprAlloc ( db , TK_COLUMN , 0 , 0 ) ; location: 620 cross_layer: 4 file: testCode/resolve.c
if ( p )  location: 621 cross_layer: 4 file: testCode/resolve.c
struct SrcList_item * pItem = & pSrc -> a [ iSrc ] ; location: 622 cross_layer: 4 file: testCode/resolve.c
Table * pTab = p -> y . pTab = pItem -> pTab ; location: 623 cross_layer: 4 file: testCode/resolve.c
p -> iTable = pItem -> iCursor; location: 624 cross_layer: 4 file: testCode/resolve.c
if ( p -> y . pTab -> iPKey == iCol )  location: 625 cross_layer: 4 file: testCode/resolve.c
p -> iColumn = - 1; location: 626 cross_layer: 4 file: testCode/resolve.c
p -> iColumn = ( ynVar ) iCol; location: 628 cross_layer: 4 file: testCode/resolve.c
if ( ( pTab -> tabFlags & TF_HasGenerated ) != 0 && ( pTab -> aCol [ iCol ] . colFlags & COLFLAG_GENERATED ) != 0 )  location: 629 cross_layer: 4 file: testCode/resolve.c
testcase ( pTab -> nCol == 63 ); location: 632 cross_layer: 4 file: testCode/resolve.c
testcase ( pTab -> nCol == 64 ); location: 633 cross_layer: 4 file: testCode/resolve.c
pItem -> colUsed = pTab -> nCol >= 64 ? ALLBITS : MASKBIT ( pTab -> nCol ) - 1; location: 634 cross_layer: 4 file: testCode/resolve.c
testcase ( iCol == BMS ); location: 636 cross_layer: 4 file: testCode/resolve.c
testcase ( iCol == BMS - 1 ); location: 637 cross_layer: 4 file: testCode/resolve.c
pItem -> colUsed |= ( ( Bitmask ) 1 ) << ( iCol >= BMS ? BMS - 1 : iCol ); location: 638 cross_layer: 4 file: testCode/resolve.c
return p ; location: 642 cross_layer: 4 file: testCode/resolve.c
pEq = sqlite3PExpr ( pParse , TK_EQ , pE1 , pE2 ); location: 369 cross_layer: 3 file: select.c
Expr *sqlite3PExpr(
Parse *pParse,          /* Parsing context */
int op,                 /* Expression opcode */
Expr *pLeft,            /* Left operand */
Expr *pRight            /* Right operand */
) location: 890 cross_layer: 4 file: testCode/expr.c
p = sqlite3DbMallocRawNN ( pParse -> db , sizeof ( Expr ) ); location: 892 cross_layer: 4 file: testCode/expr.c
void *sqlite3DbMallocRawNN(sqlite3 *db, u64 n) location: 556 cross_layer: 3 file: testCode/malloc.c
assert ( db != 0 ); location: 559 cross_layer: 3 file: testCode/malloc.c
assert ( sqlite3_mutex_held ( db -> mutex ) ); location: 560 cross_layer: 3 file: testCode/malloc.c
int sqlite3_mutex_held(sqlite3_mutex *p) location: 350 cross_layer: 4 file: testCode/mutex.c
assert ( p == 0 || sqlite3GlobalConfig . mutex . xMutexHeld ); location: 351 cross_layer: 4 file: testCode/mutex.c
return p == 0 || sqlite3GlobalConfig . mutex . xMutexHeld ( p ) ; location: 352 cross_layer: 4 file: testCode/mutex.c
int sqlite3_mutex_held(sqlite3_mutex *p) location: 350 cross_layer: 4 file: testCode/mutex.c
assert ( p == 0 || sqlite3GlobalConfig . mutex . xMutexHeld ); location: 351 cross_layer: 4 file: testCode/mutex.c
return p == 0 || sqlite3GlobalConfig . mutex . xMutexHeld ( p ) ; location: 352 cross_layer: 4 file: testCode/mutex.c
assert ( db -> pnBytesFreed == 0 ); location: 561 cross_layer: 3 file: testCode/malloc.c
if ( n > db -> lookaside . sz )  location: 562 cross_layer: 3 file: testCode/malloc.c
if ( db -> lookaside . bDisable )  location: 563 cross_layer: 3 file: testCode/malloc.c
return db -> mallocFailed ? 0 : dbMallocRawFinish ( db , n ) ; location: 564 cross_layer: 3 file: testCode/malloc.c
static SQLITE_NOINLINE void *dbMallocRawFinish(sqlite3 *db, u64 n) location: 517 cross_layer: 4 file: testCode/malloc.c
assert ( db != 0 ); location: 519 cross_layer: 4 file: testCode/malloc.c
p = sqlite3Malloc ( n ); location: 520 cross_layer: 4 file: testCode/malloc.c
if ( ! p )  location: 521 cross_layer: 4 file: testCode/malloc.c
sqlite3OomFault ( db ); location: 521 cross_layer: 4 file: testCode/malloc.c
sqlite3MemdebugSetType ( p , ( db -> lookaside . bDisable == 0 ) ? MEMTYPE_LOOKASIDE : MEMTYPE_HEAP ); location: 522 cross_layer: 4 file: testCode/malloc.c
return p ; location: 524 cross_layer: 4 file: testCode/malloc.c
static SQLITE_NOINLINE void *dbMallocRawFinish(sqlite3 *db, u64 n) location: 517 cross_layer: 4 file: testCode/malloc.c
assert ( db != 0 ); location: 519 cross_layer: 4 file: testCode/malloc.c
p = sqlite3Malloc ( n ); location: 520 cross_layer: 4 file: testCode/malloc.c
if ( ! p )  location: 521 cross_layer: 4 file: testCode/malloc.c
sqlite3OomFault ( db ); location: 521 cross_layer: 4 file: testCode/malloc.c
sqlite3MemdebugSetType ( p , ( db -> lookaside . bDisable == 0 ) ? MEMTYPE_LOOKASIDE : MEMTYPE_HEAP ); location: 522 cross_layer: 4 file: testCode/malloc.c
return p ; location: 524 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 1 ] ++; location: 566 cross_layer: 3 file: testCode/malloc.c
if ( ( pBuf = db -> lookaside . pFree ) != 0 )  location: 567 cross_layer: 3 file: testCode/malloc.c
db -> lookaside . pFree = pBuf -> pNext; location: 568 cross_layer: 3 file: testCode/malloc.c
db -> lookaside . anStat [ 0 ] ++; location: 569 cross_layer: 3 file: testCode/malloc.c
return ( void * ) pBuf ; location: 570 cross_layer: 3 file: testCode/malloc.c
if ( ( pBuf = db -> lookaside . pInit ) != 0 )  location: 571 cross_layer: 3 file: testCode/malloc.c
db -> lookaside . pInit = pBuf -> pNext; location: 572 cross_layer: 3 file: testCode/malloc.c
db -> lookaside . anStat [ 0 ] ++; location: 573 cross_layer: 3 file: testCode/malloc.c
return ( void * ) pBuf ; location: 574 cross_layer: 3 file: testCode/malloc.c
db -> lookaside . anStat [ 2 ] ++; location: 576 cross_layer: 3 file: testCode/malloc.c
return dbMallocRawFinish ( db , n ) ; location: 586 cross_layer: 3 file: testCode/malloc.c
static SQLITE_NOINLINE void *dbMallocRawFinish(sqlite3 *db, u64 n) location: 517 cross_layer: 4 file: testCode/malloc.c
assert ( db != 0 ); location: 519 cross_layer: 4 file: testCode/malloc.c
p = sqlite3Malloc ( n ); location: 520 cross_layer: 4 file: testCode/malloc.c
if ( ! p )  location: 521 cross_layer: 4 file: testCode/malloc.c
sqlite3OomFault ( db ); location: 521 cross_layer: 4 file: testCode/malloc.c
sqlite3MemdebugSetType ( p , ( db -> lookaside . bDisable == 0 ) ? MEMTYPE_LOOKASIDE : MEMTYPE_HEAP ); location: 522 cross_layer: 4 file: testCode/malloc.c
return p ; location: 524 cross_layer: 4 file: testCode/malloc.c
static SQLITE_NOINLINE void *dbMallocRawFinish(sqlite3 *db, u64 n) location: 517 cross_layer: 4 file: testCode/malloc.c
assert ( db != 0 ); location: 519 cross_layer: 4 file: testCode/malloc.c
p = sqlite3Malloc ( n ); location: 520 cross_layer: 4 file: testCode/malloc.c
if ( ! p )  location: 521 cross_layer: 4 file: testCode/malloc.c
sqlite3OomFault ( db ); location: 521 cross_layer: 4 file: testCode/malloc.c
sqlite3MemdebugSetType ( p , ( db -> lookaside . bDisable == 0 ) ? MEMTYPE_LOOKASIDE : MEMTYPE_HEAP ); location: 522 cross_layer: 4 file: testCode/malloc.c
return p ; location: 524 cross_layer: 4 file: testCode/malloc.c
void *sqlite3DbMallocRawNN(sqlite3 *db, u64 n) location: 556 cross_layer: 3 file: testCode/malloc.c
assert ( db != 0 ); location: 559 cross_layer: 3 file: testCode/malloc.c
assert ( sqlite3_mutex_held ( db -> mutex ) ); location: 560 cross_layer: 3 file: testCode/malloc.c
int sqlite3_mutex_held(sqlite3_mutex *p) location: 350 cross_layer: 4 file: testCode/mutex.c
assert ( p == 0 || sqlite3GlobalConfig . mutex . xMutexHeld ); location: 351 cross_layer: 4 file: testCode/mutex.c
return p == 0 || sqlite3GlobalConfig . mutex . xMutexHeld ( p ) ; location: 352 cross_layer: 4 file: testCode/mutex.c
assert ( db -> pnBytesFreed == 0 ); location: 561 cross_layer: 3 file: testCode/malloc.c
if ( n > db -> lookaside . sz )  location: 562 cross_layer: 3 file: testCode/malloc.c
if ( db -> lookaside . bDisable )  location: 563 cross_layer: 3 file: testCode/malloc.c
return db -> mallocFailed ? 0 : dbMallocRawFinish ( db , n ) ; location: 564 cross_layer: 3 file: testCode/malloc.c
static SQLITE_NOINLINE void *dbMallocRawFinish(sqlite3 *db, u64 n) location: 517 cross_layer: 4 file: testCode/malloc.c
assert ( db != 0 ); location: 519 cross_layer: 4 file: testCode/malloc.c
p = sqlite3Malloc ( n ); location: 520 cross_layer: 4 file: testCode/malloc.c
if ( ! p )  location: 521 cross_layer: 4 file: testCode/malloc.c
sqlite3OomFault ( db ); location: 521 cross_layer: 4 file: testCode/malloc.c
sqlite3MemdebugSetType ( p , ( db -> lookaside . bDisable == 0 ) ? MEMTYPE_LOOKASIDE : MEMTYPE_HEAP ); location: 522 cross_layer: 4 file: testCode/malloc.c
return p ; location: 524 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 1 ] ++; location: 566 cross_layer: 3 file: testCode/malloc.c
if ( ( pBuf = db -> lookaside . pFree ) != 0 )  location: 567 cross_layer: 3 file: testCode/malloc.c
db -> lookaside . pFree = pBuf -> pNext; location: 568 cross_layer: 3 file: testCode/malloc.c
db -> lookaside . anStat [ 0 ] ++; location: 569 cross_layer: 3 file: testCode/malloc.c
return ( void * ) pBuf ; location: 570 cross_layer: 3 file: testCode/malloc.c
if ( ( pBuf = db -> lookaside . pInit ) != 0 )  location: 571 cross_layer: 3 file: testCode/malloc.c
db -> lookaside . pInit = pBuf -> pNext; location: 572 cross_layer: 3 file: testCode/malloc.c
db -> lookaside . anStat [ 0 ] ++; location: 573 cross_layer: 3 file: testCode/malloc.c
return ( void * ) pBuf ; location: 574 cross_layer: 3 file: testCode/malloc.c
db -> lookaside . anStat [ 2 ] ++; location: 576 cross_layer: 3 file: testCode/malloc.c
return dbMallocRawFinish ( db , n ) ; location: 586 cross_layer: 3 file: testCode/malloc.c
static SQLITE_NOINLINE void *dbMallocRawFinish(sqlite3 *db, u64 n) location: 517 cross_layer: 4 file: testCode/malloc.c
assert ( db != 0 ); location: 519 cross_layer: 4 file: testCode/malloc.c
p = sqlite3Malloc ( n ); location: 520 cross_layer: 4 file: testCode/malloc.c
if ( ! p )  location: 521 cross_layer: 4 file: testCode/malloc.c
sqlite3OomFault ( db ); location: 521 cross_layer: 4 file: testCode/malloc.c
sqlite3MemdebugSetType ( p , ( db -> lookaside . bDisable == 0 ) ? MEMTYPE_LOOKASIDE : MEMTYPE_HEAP ); location: 522 cross_layer: 4 file: testCode/malloc.c
return p ; location: 524 cross_layer: 4 file: testCode/malloc.c
if ( p )  location: 893 cross_layer: 4 file: testCode/expr.c
memset ( p , 0 , sizeof ( Expr ) ); location: 894 cross_layer: 4 file: testCode/expr.c
p -> op = op & 0xff; location: 895 cross_layer: 4 file: testCode/expr.c
p -> iAgg = - 1; location: 896 cross_layer: 4 file: testCode/expr.c
sqlite3ExprAttachSubtrees ( pParse -> db , p , pLeft , pRight ); location: 897 cross_layer: 4 file: testCode/expr.c
void sqlite3ExprAttachSubtrees(
sqlite3 *db,
Expr *pRoot,
Expr *pLeft,
Expr *pRight
) location: 860 cross_layer: 3 file: testCode/expr.c
if ( pRoot == 0 )  location: 861 cross_layer: 3 file: testCode/expr.c
assert ( db -> mallocFailed ); location: 862 cross_layer: 3 file: testCode/expr.c
sqlite3ExprDelete ( db , pLeft ); location: 863 cross_layer: 3 file: testCode/expr.c
void sqlite3ExprDelete(sqlite3 *db, Expr *p) location: 1097 cross_layer: 4 file: testCode/expr.c
if ( p )  location: 1098 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p ); location: 1098 cross_layer: 4 file: testCode/expr.c
static SQLITE_NOINLINE void sqlite3ExprDeleteNN(sqlite3 *db, Expr *p) location: 1058 cross_layer: 4 file: testCode/expr.c
assert ( p != 0 ); location: 1059 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_IntValue ) || p -> u . iValue >= 0 ); location: 1061 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_WinFunc ) || p -> y . pWin != 0 || db -> mallocFailed ); location: 1063 cross_layer: 4 file: testCode/expr.c
assert ( p -> op != TK_FUNCTION || ExprHasProperty ( p , EP_TokenOnly | EP_Reduced ) || p -> y . pWin == 0 || ExprHasProperty ( p , EP_WinFunc ) ); location: 1064 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_Leaf ) && ! ExprHasProperty ( p , EP_TokenOnly ) )  location: 1067 cross_layer: 4 file: testCode/expr.c
assert ( p -> pLeft == 0 ); location: 1068 cross_layer: 4 file: testCode/expr.c
assert ( p -> pRight == 0 ); location: 1069 cross_layer: 4 file: testCode/expr.c
assert ( p -> x . pSelect == 0 ); location: 1070 cross_layer: 4 file: testCode/expr.c
if ( ! ExprHasProperty ( p , ( EP_TokenOnly | EP_Leaf ) ) )  location: 1073 cross_layer: 4 file: testCode/expr.c
assert ( p -> x . pList == 0 || p -> pRight == 0 ); location: 1075 cross_layer: 4 file: testCode/expr.c
if ( p -> pLeft && p -> op != TK_SELECT_COLUMN )  location: 1076 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p -> pLeft ); location: 1076 cross_layer: 4 file: testCode/expr.c
if ( p -> pRight )  location: 1077 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_WinFunc ) ); location: 1078 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p -> pRight ); location: 1079 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_xIsSelect ) )  location: 1080 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_WinFunc ) ); location: 1081 cross_layer: 4 file: testCode/expr.c
sqlite3SelectDelete ( db , p -> x . pSelect ); location: 1082 cross_layer: 4 file: testCode/expr.c
sqlite3ExprListDelete ( db , p -> x . pList ); location: 1084 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_WinFunc ) )  location: 1086 cross_layer: 4 file: testCode/expr.c
sqlite3WindowDelete ( db , p -> y . pWin ); location: 1087 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_MemToken ) )  location: 1092 cross_layer: 4 file: testCode/expr.c
sqlite3DbFree ( db , p -> u . zToken ); location: 1092 cross_layer: 4 file: testCode/expr.c
if ( ! ExprHasProperty ( p , EP_Static ) )  location: 1093 cross_layer: 4 file: testCode/expr.c
sqlite3DbFreeNN ( db , p ); location: 1094 cross_layer: 4 file: testCode/expr.c
static SQLITE_NOINLINE void sqlite3ExprDeleteNN(sqlite3 *db, Expr *p) location: 1058 cross_layer: 4 file: testCode/expr.c
assert ( p != 0 ); location: 1059 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_IntValue ) || p -> u . iValue >= 0 ); location: 1061 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_WinFunc ) || p -> y . pWin != 0 || db -> mallocFailed ); location: 1063 cross_layer: 4 file: testCode/expr.c
assert ( p -> op != TK_FUNCTION || ExprHasProperty ( p , EP_TokenOnly | EP_Reduced ) || p -> y . pWin == 0 || ExprHasProperty ( p , EP_WinFunc ) ); location: 1064 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_Leaf ) && ! ExprHasProperty ( p , EP_TokenOnly ) )  location: 1067 cross_layer: 4 file: testCode/expr.c
assert ( p -> pLeft == 0 ); location: 1068 cross_layer: 4 file: testCode/expr.c
assert ( p -> pRight == 0 ); location: 1069 cross_layer: 4 file: testCode/expr.c
assert ( p -> x . pSelect == 0 ); location: 1070 cross_layer: 4 file: testCode/expr.c
if ( ! ExprHasProperty ( p , ( EP_TokenOnly | EP_Leaf ) ) )  location: 1073 cross_layer: 4 file: testCode/expr.c
assert ( p -> x . pList == 0 || p -> pRight == 0 ); location: 1075 cross_layer: 4 file: testCode/expr.c
if ( p -> pLeft && p -> op != TK_SELECT_COLUMN )  location: 1076 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p -> pLeft ); location: 1076 cross_layer: 4 file: testCode/expr.c
if ( p -> pRight )  location: 1077 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_WinFunc ) ); location: 1078 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p -> pRight ); location: 1079 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_xIsSelect ) )  location: 1080 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_WinFunc ) ); location: 1081 cross_layer: 4 file: testCode/expr.c
sqlite3SelectDelete ( db , p -> x . pSelect ); location: 1082 cross_layer: 4 file: testCode/expr.c
sqlite3ExprListDelete ( db , p -> x . pList ); location: 1084 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_WinFunc ) )  location: 1086 cross_layer: 4 file: testCode/expr.c
sqlite3WindowDelete ( db , p -> y . pWin ); location: 1087 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_MemToken ) )  location: 1092 cross_layer: 4 file: testCode/expr.c
sqlite3DbFree ( db , p -> u . zToken ); location: 1092 cross_layer: 4 file: testCode/expr.c
if ( ! ExprHasProperty ( p , EP_Static ) )  location: 1093 cross_layer: 4 file: testCode/expr.c
sqlite3DbFreeNN ( db , p ); location: 1094 cross_layer: 4 file: testCode/expr.c
static SQLITE_NOINLINE void sqlite3ExprDeleteNN(sqlite3 *db, Expr *p) location: 1058 cross_layer: 4 file: testCode/expr.c
assert ( p != 0 ); location: 1059 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_IntValue ) || p -> u . iValue >= 0 ); location: 1061 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_WinFunc ) || p -> y . pWin != 0 || db -> mallocFailed ); location: 1063 cross_layer: 4 file: testCode/expr.c
assert ( p -> op != TK_FUNCTION || ExprHasProperty ( p , EP_TokenOnly | EP_Reduced ) || p -> y . pWin == 0 || ExprHasProperty ( p , EP_WinFunc ) ); location: 1064 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_Leaf ) && ! ExprHasProperty ( p , EP_TokenOnly ) )  location: 1067 cross_layer: 4 file: testCode/expr.c
assert ( p -> pLeft == 0 ); location: 1068 cross_layer: 4 file: testCode/expr.c
assert ( p -> pRight == 0 ); location: 1069 cross_layer: 4 file: testCode/expr.c
assert ( p -> x . pSelect == 0 ); location: 1070 cross_layer: 4 file: testCode/expr.c
if ( ! ExprHasProperty ( p , ( EP_TokenOnly | EP_Leaf ) ) )  location: 1073 cross_layer: 4 file: testCode/expr.c
assert ( p -> x . pList == 0 || p -> pRight == 0 ); location: 1075 cross_layer: 4 file: testCode/expr.c
if ( p -> pLeft && p -> op != TK_SELECT_COLUMN )  location: 1076 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p -> pLeft ); location: 1076 cross_layer: 4 file: testCode/expr.c
if ( p -> pRight )  location: 1077 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_WinFunc ) ); location: 1078 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p -> pRight ); location: 1079 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_xIsSelect ) )  location: 1080 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_WinFunc ) ); location: 1081 cross_layer: 4 file: testCode/expr.c
sqlite3SelectDelete ( db , p -> x . pSelect ); location: 1082 cross_layer: 4 file: testCode/expr.c
sqlite3ExprListDelete ( db , p -> x . pList ); location: 1084 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_WinFunc ) )  location: 1086 cross_layer: 4 file: testCode/expr.c
sqlite3WindowDelete ( db , p -> y . pWin ); location: 1087 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_MemToken ) )  location: 1092 cross_layer: 4 file: testCode/expr.c
sqlite3DbFree ( db , p -> u . zToken ); location: 1092 cross_layer: 4 file: testCode/expr.c
if ( ! ExprHasProperty ( p , EP_Static ) )  location: 1093 cross_layer: 4 file: testCode/expr.c
sqlite3DbFreeNN ( db , p ); location: 1094 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDelete ( db , pRight ); location: 864 cross_layer: 3 file: testCode/expr.c
void sqlite3ExprDelete(sqlite3 *db, Expr *p) location: 1097 cross_layer: 4 file: testCode/expr.c
if ( p )  location: 1098 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p ); location: 1098 cross_layer: 4 file: testCode/expr.c
if ( pRight )  location: 866 cross_layer: 3 file: testCode/expr.c
pRoot -> pRight = pRight; location: 867 cross_layer: 3 file: testCode/expr.c
pRoot -> flags |= EP_Propagate & pRight -> flags; location: 868 cross_layer: 3 file: testCode/expr.c
if ( pLeft )  location: 870 cross_layer: 3 file: testCode/expr.c
pRoot -> pLeft = pLeft; location: 871 cross_layer: 3 file: testCode/expr.c
pRoot -> flags |= EP_Propagate & pLeft -> flags; location: 872 cross_layer: 3 file: testCode/expr.c
exprSetHeight ( pRoot ); location: 874 cross_layer: 3 file: testCode/expr.c
static void exprSetHeight(Expr *p) location: 721 cross_layer: 4 file: testCode/expr.c
heightOfExpr ( p -> pLeft , & nHeight ); location: 723 cross_layer: 4 file: testCode/expr.c
heightOfExpr ( p -> pRight , & nHeight ); location: 724 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_xIsSelect ) )  location: 725 cross_layer: 4 file: testCode/expr.c
heightOfSelect ( p -> x . pSelect , & nHeight ); location: 726 cross_layer: 4 file: testCode/expr.c
if ( p -> x . pList )  location: 727 cross_layer: 4 file: testCode/expr.c
heightOfExprList ( p -> x . pList , & nHeight ); location: 728 cross_layer: 4 file: testCode/expr.c
p -> flags |= EP_Propagate & sqlite3ExprListFlags ( p -> x . pList ); location: 729 cross_layer: 4 file: testCode/expr.c
p -> nHeight = nHeight + 1; location: 731 cross_layer: 4 file: testCode/expr.c
void sqlite3ExprAttachSubtrees(
sqlite3 *db,
Expr *pRoot,
Expr *pLeft,
Expr *pRight
) location: 860 cross_layer: 3 file: testCode/expr.c
if ( pRoot == 0 )  location: 861 cross_layer: 3 file: testCode/expr.c
assert ( db -> mallocFailed ); location: 862 cross_layer: 3 file: testCode/expr.c
sqlite3ExprDelete ( db , pLeft ); location: 863 cross_layer: 3 file: testCode/expr.c
void sqlite3ExprDelete(sqlite3 *db, Expr *p) location: 1097 cross_layer: 4 file: testCode/expr.c
if ( p )  location: 1098 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p ); location: 1098 cross_layer: 4 file: testCode/expr.c
static SQLITE_NOINLINE void sqlite3ExprDeleteNN(sqlite3 *db, Expr *p) location: 1058 cross_layer: 4 file: testCode/expr.c
assert ( p != 0 ); location: 1059 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_IntValue ) || p -> u . iValue >= 0 ); location: 1061 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_WinFunc ) || p -> y . pWin != 0 || db -> mallocFailed ); location: 1063 cross_layer: 4 file: testCode/expr.c
assert ( p -> op != TK_FUNCTION || ExprHasProperty ( p , EP_TokenOnly | EP_Reduced ) || p -> y . pWin == 0 || ExprHasProperty ( p , EP_WinFunc ) ); location: 1064 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_Leaf ) && ! ExprHasProperty ( p , EP_TokenOnly ) )  location: 1067 cross_layer: 4 file: testCode/expr.c
assert ( p -> pLeft == 0 ); location: 1068 cross_layer: 4 file: testCode/expr.c
assert ( p -> pRight == 0 ); location: 1069 cross_layer: 4 file: testCode/expr.c
assert ( p -> x . pSelect == 0 ); location: 1070 cross_layer: 4 file: testCode/expr.c
if ( ! ExprHasProperty ( p , ( EP_TokenOnly | EP_Leaf ) ) )  location: 1073 cross_layer: 4 file: testCode/expr.c
assert ( p -> x . pList == 0 || p -> pRight == 0 ); location: 1075 cross_layer: 4 file: testCode/expr.c
if ( p -> pLeft && p -> op != TK_SELECT_COLUMN )  location: 1076 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p -> pLeft ); location: 1076 cross_layer: 4 file: testCode/expr.c
if ( p -> pRight )  location: 1077 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_WinFunc ) ); location: 1078 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p -> pRight ); location: 1079 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_xIsSelect ) )  location: 1080 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_WinFunc ) ); location: 1081 cross_layer: 4 file: testCode/expr.c
sqlite3SelectDelete ( db , p -> x . pSelect ); location: 1082 cross_layer: 4 file: testCode/expr.c
sqlite3ExprListDelete ( db , p -> x . pList ); location: 1084 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_WinFunc ) )  location: 1086 cross_layer: 4 file: testCode/expr.c
sqlite3WindowDelete ( db , p -> y . pWin ); location: 1087 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_MemToken ) )  location: 1092 cross_layer: 4 file: testCode/expr.c
sqlite3DbFree ( db , p -> u . zToken ); location: 1092 cross_layer: 4 file: testCode/expr.c
if ( ! ExprHasProperty ( p , EP_Static ) )  location: 1093 cross_layer: 4 file: testCode/expr.c
sqlite3DbFreeNN ( db , p ); location: 1094 cross_layer: 4 file: testCode/expr.c
static SQLITE_NOINLINE void sqlite3ExprDeleteNN(sqlite3 *db, Expr *p) location: 1058 cross_layer: 4 file: testCode/expr.c
assert ( p != 0 ); location: 1059 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_IntValue ) || p -> u . iValue >= 0 ); location: 1061 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_WinFunc ) || p -> y . pWin != 0 || db -> mallocFailed ); location: 1063 cross_layer: 4 file: testCode/expr.c
assert ( p -> op != TK_FUNCTION || ExprHasProperty ( p , EP_TokenOnly | EP_Reduced ) || p -> y . pWin == 0 || ExprHasProperty ( p , EP_WinFunc ) ); location: 1064 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_Leaf ) && ! ExprHasProperty ( p , EP_TokenOnly ) )  location: 1067 cross_layer: 4 file: testCode/expr.c
assert ( p -> pLeft == 0 ); location: 1068 cross_layer: 4 file: testCode/expr.c
assert ( p -> pRight == 0 ); location: 1069 cross_layer: 4 file: testCode/expr.c
assert ( p -> x . pSelect == 0 ); location: 1070 cross_layer: 4 file: testCode/expr.c
if ( ! ExprHasProperty ( p , ( EP_TokenOnly | EP_Leaf ) ) )  location: 1073 cross_layer: 4 file: testCode/expr.c
assert ( p -> x . pList == 0 || p -> pRight == 0 ); location: 1075 cross_layer: 4 file: testCode/expr.c
if ( p -> pLeft && p -> op != TK_SELECT_COLUMN )  location: 1076 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p -> pLeft ); location: 1076 cross_layer: 4 file: testCode/expr.c
if ( p -> pRight )  location: 1077 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_WinFunc ) ); location: 1078 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p -> pRight ); location: 1079 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_xIsSelect ) )  location: 1080 cross_layer: 4 file: testCode/expr.c
assert ( ! ExprHasProperty ( p , EP_WinFunc ) ); location: 1081 cross_layer: 4 file: testCode/expr.c
sqlite3SelectDelete ( db , p -> x . pSelect ); location: 1082 cross_layer: 4 file: testCode/expr.c
sqlite3ExprListDelete ( db , p -> x . pList ); location: 1084 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_WinFunc ) )  location: 1086 cross_layer: 4 file: testCode/expr.c
sqlite3WindowDelete ( db , p -> y . pWin ); location: 1087 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_MemToken ) )  location: 1092 cross_layer: 4 file: testCode/expr.c
sqlite3DbFree ( db , p -> u . zToken ); location: 1092 cross_layer: 4 file: testCode/expr.c
if ( ! ExprHasProperty ( p , EP_Static ) )  location: 1093 cross_layer: 4 file: testCode/expr.c
sqlite3DbFreeNN ( db , p ); location: 1094 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDelete ( db , pRight ); location: 864 cross_layer: 3 file: testCode/expr.c
void sqlite3ExprDelete(sqlite3 *db, Expr *p) location: 1097 cross_layer: 4 file: testCode/expr.c
if ( p )  location: 1098 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p ); location: 1098 cross_layer: 4 file: testCode/expr.c
if ( pRight )  location: 866 cross_layer: 3 file: testCode/expr.c
pRoot -> pRight = pRight; location: 867 cross_layer: 3 file: testCode/expr.c
pRoot -> flags |= EP_Propagate & pRight -> flags; location: 868 cross_layer: 3 file: testCode/expr.c
if ( pLeft )  location: 870 cross_layer: 3 file: testCode/expr.c
pRoot -> pLeft = pLeft; location: 871 cross_layer: 3 file: testCode/expr.c
pRoot -> flags |= EP_Propagate & pLeft -> flags; location: 872 cross_layer: 3 file: testCode/expr.c
exprSetHeight ( pRoot ); location: 874 cross_layer: 3 file: testCode/expr.c
static void exprSetHeight(Expr *p) location: 721 cross_layer: 4 file: testCode/expr.c
heightOfExpr ( p -> pLeft , & nHeight ); location: 723 cross_layer: 4 file: testCode/expr.c
heightOfExpr ( p -> pRight , & nHeight ); location: 724 cross_layer: 4 file: testCode/expr.c
if ( ExprHasProperty ( p , EP_xIsSelect ) )  location: 725 cross_layer: 4 file: testCode/expr.c
heightOfSelect ( p -> x . pSelect , & nHeight ); location: 726 cross_layer: 4 file: testCode/expr.c
if ( p -> x . pList )  location: 727 cross_layer: 4 file: testCode/expr.c
heightOfExprList ( p -> x . pList , & nHeight ); location: 728 cross_layer: 4 file: testCode/expr.c
p -> flags |= EP_Propagate & sqlite3ExprListFlags ( p -> x . pList ); location: 729 cross_layer: 4 file: testCode/expr.c
p -> nHeight = nHeight + 1; location: 731 cross_layer: 4 file: testCode/expr.c
sqlite3ExprCheckHeight ( pParse , p -> nHeight ); location: 898 cross_layer: 4 file: testCode/expr.c
int sqlite3ExprCheckHeight(Parse *pParse, int nHeight) location: 663 cross_layer: 3 file: testCode/expr.c
int mxHeight = pParse -> db -> aLimit [ SQLITE_LIMIT_EXPR_DEPTH ] ; location: 665 cross_layer: 3 file: testCode/expr.c
if ( nHeight > mxHeight )  location: 666 cross_layer: 3 file: testCode/expr.c
sqlite3ErrorMsg ( pParse , "Expression tree is too large (maximum depth %d)" , mxHeight ); location: 667 cross_layer: 3 file: testCode/expr.c
void sqlite3ErrorMsg(Parse *pParse, const char *zFormat, ...) location: 181 cross_layer: 4 file: testCode/util.c
sqlite3 * db = pParse -> db ; location: 184 cross_layer: 4 file: testCode/util.c
va_start ( ap , zFormat ); location: 185 cross_layer: 4 file: testCode/util.c
zMsg = sqlite3VMPrintf ( db , zFormat , ap ); location: 186 cross_layer: 4 file: testCode/util.c
if ( db -> suppressErr )  location: 188 cross_layer: 4 file: testCode/util.c
sqlite3DbFree ( db , zMsg ); location: 189 cross_layer: 4 file: testCode/util.c
pParse -> nErr ++; location: 191 cross_layer: 4 file: testCode/util.c
sqlite3DbFree ( db , pParse -> zErrMsg ); location: 192 cross_layer: 4 file: testCode/util.c
pParse -> zErrMsg = zMsg; location: 193 cross_layer: 4 file: testCode/util.c
pParse -> rc = SQLITE_ERROR; location: 194 cross_layer: 4 file: testCode/util.c
pParse -> pWith = 0; location: 195 cross_layer: 4 file: testCode/util.c
int sqlite3ExprCheckHeight(Parse *pParse, int nHeight) location: 663 cross_layer: 3 file: testCode/expr.c
int mxHeight = pParse -> db -> aLimit [ SQLITE_LIMIT_EXPR_DEPTH ] ; location: 665 cross_layer: 3 file: testCode/expr.c
if ( nHeight > mxHeight )  location: 666 cross_layer: 3 file: testCode/expr.c
sqlite3ErrorMsg ( pParse , "Expression tree is too large (maximum depth %d)" , mxHeight ); location: 667 cross_layer: 3 file: testCode/expr.c
void sqlite3ErrorMsg(Parse *pParse, const char *zFormat, ...) location: 181 cross_layer: 4 file: testCode/util.c
sqlite3 * db = pParse -> db ; location: 184 cross_layer: 4 file: testCode/util.c
va_start ( ap , zFormat ); location: 185 cross_layer: 4 file: testCode/util.c
zMsg = sqlite3VMPrintf ( db , zFormat , ap ); location: 186 cross_layer: 4 file: testCode/util.c
if ( db -> suppressErr )  location: 188 cross_layer: 4 file: testCode/util.c
sqlite3DbFree ( db , zMsg ); location: 189 cross_layer: 4 file: testCode/util.c
pParse -> nErr ++; location: 191 cross_layer: 4 file: testCode/util.c
sqlite3DbFree ( db , pParse -> zErrMsg ); location: 192 cross_layer: 4 file: testCode/util.c
pParse -> zErrMsg = zMsg; location: 193 cross_layer: 4 file: testCode/util.c
pParse -> rc = SQLITE_ERROR; location: 194 cross_layer: 4 file: testCode/util.c
pParse -> pWith = 0; location: 195 cross_layer: 4 file: testCode/util.c
sqlite3ExprDelete ( pParse -> db , pLeft ); location: 900 cross_layer: 4 file: testCode/expr.c
void sqlite3ExprDelete(sqlite3 *db, Expr *p) location: 1097 cross_layer: 3 file: testCode/expr.c
if ( p )  location: 1098 cross_layer: 3 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p ); location: 1098 cross_layer: 3 file: testCode/expr.c
void sqlite3ExprDelete(sqlite3 *db, Expr *p) location: 1097 cross_layer: 3 file: testCode/expr.c
if ( p )  location: 1098 cross_layer: 3 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p ); location: 1098 cross_layer: 3 file: testCode/expr.c
sqlite3ExprDelete ( pParse -> db , pRight ); location: 901 cross_layer: 4 file: testCode/expr.c
void sqlite3ExprDelete(sqlite3 *db, Expr *p) location: 1097 cross_layer: 3 file: testCode/expr.c
if ( p )  location: 1098 cross_layer: 3 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p ); location: 1098 cross_layer: 3 file: testCode/expr.c
void sqlite3ExprDelete(sqlite3 *db, Expr *p) location: 1097 cross_layer: 3 file: testCode/expr.c
if ( p )  location: 1098 cross_layer: 3 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p ); location: 1098 cross_layer: 3 file: testCode/expr.c
return p ; location: 903 cross_layer: 4 file: testCode/expr.c
Expr *sqlite3PExpr(
Parse *pParse,          /* Parsing context */
int op,                 /* Expression opcode */
Expr *pLeft,            /* Left operand */
Expr *pRight            /* Right operand */
) location: 890 cross_layer: 4 file: testCode/expr.c
p = sqlite3DbMallocRawNN ( pParse -> db , sizeof ( Expr ) ); location: 892 cross_layer: 4 file: testCode/expr.c
if ( p )  location: 893 cross_layer: 4 file: testCode/expr.c
memset ( p , 0 , sizeof ( Expr ) ); location: 894 cross_layer: 4 file: testCode/expr.c
p -> op = op & 0xff; location: 895 cross_layer: 4 file: testCode/expr.c
p -> iAgg = - 1; location: 896 cross_layer: 4 file: testCode/expr.c
sqlite3ExprAttachSubtrees ( pParse -> db , p , pLeft , pRight ); location: 897 cross_layer: 4 file: testCode/expr.c
sqlite3ExprCheckHeight ( pParse , p -> nHeight ); location: 898 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDelete ( pParse -> db , pLeft ); location: 900 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDelete ( pParse -> db , pRight ); location: 901 cross_layer: 4 file: testCode/expr.c
return p ; location: 903 cross_layer: 4 file: testCode/expr.c
if ( pEq && isOuterJoin )  location: 370 cross_layer: 3 file: select.c
ExprSetProperty ( pEq , EP_FromJoin ); location: 371 cross_layer: 3 file: select.c
assert ( ! ExprHasProperty ( pEq , EP_TokenOnly | EP_Reduced ) ); location: 372 cross_layer: 3 file: select.c
ExprSetVVAProperty ( pEq , EP_NoReduce ); location: 373 cross_layer: 3 file: select.c
pEq -> iRightJoinTable = ( i16 ) pE2 -> iTable; location: 374 cross_layer: 3 file: select.c
* ppWhere = sqlite3ExprAnd ( pParse , * ppWhere , pEq ); location: 376 cross_layer: 3 file: select.c
Expr *sqlite3ExprAnd(Parse *pParse, Expr *pLeft, Expr *pRight) location: 930 cross_layer: 4 file: testCode/expr.c
sqlite3 * db = pParse -> db ; location: 931 cross_layer: 4 file: testCode/expr.c
if ( pLeft == 0 )  location: 932 cross_layer: 4 file: testCode/expr.c
return pRight ; location: 933 cross_layer: 4 file: testCode/expr.c
if ( pRight == 0 )  location: 934 cross_layer: 4 file: testCode/expr.c
return pLeft ; location: 935 cross_layer: 4 file: testCode/expr.c
if ( ExprAlwaysFalse ( pLeft ) || ExprAlwaysFalse ( pRight ) )  location: 936 cross_layer: 4 file: testCode/expr.c
sqlite3ExprUnmapAndDelete ( pParse , pLeft ); location: 937 cross_layer: 4 file: testCode/expr.c
sqlite3ExprUnmapAndDelete ( pParse , pRight ); location: 938 cross_layer: 4 file: testCode/expr.c
return sqlite3Expr ( db , TK_INTEGER , "0" ) ; location: 939 cross_layer: 4 file: testCode/expr.c
return sqlite3PExpr ( pParse , TK_AND , pLeft , pRight ) ; location: 941 cross_layer: 4 file: testCode/expr.c
Expr *sqlite3ExprAnd(Parse *pParse, Expr *pLeft, Expr *pRight) location: 930 cross_layer: 4 file: testCode/expr.c
sqlite3 * db = pParse -> db ; location: 931 cross_layer: 4 file: testCode/expr.c
if ( pLeft == 0 )  location: 932 cross_layer: 4 file: testCode/expr.c
return pRight ; location: 933 cross_layer: 4 file: testCode/expr.c
if ( pRight == 0 )  location: 934 cross_layer: 4 file: testCode/expr.c
return pLeft ; location: 935 cross_layer: 4 file: testCode/expr.c
if ( ExprAlwaysFalse ( pLeft ) || ExprAlwaysFalse ( pRight ) )  location: 936 cross_layer: 4 file: testCode/expr.c
sqlite3ExprUnmapAndDelete ( pParse , pLeft ); location: 937 cross_layer: 4 file: testCode/expr.c
void sqlite3ExprUnmapAndDelete(Parse *pParse, Expr *p) location: 1104 cross_layer: 4 file: testCode/expr.c
if ( p )  location: 1105 cross_layer: 4 file: testCode/expr.c
sqlite3RenameExprUnmap ( pParse , p ); location: 1107 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDeleteNN ( pParse -> db , p ); location: 1109 cross_layer: 4 file: testCode/expr.c
sqlite3ExprUnmapAndDelete ( pParse , pRight ); location: 938 cross_layer: 4 file: testCode/expr.c
void sqlite3ExprUnmapAndDelete(Parse *pParse, Expr *p) location: 1104 cross_layer: 4 file: testCode/expr.c
if ( p )  location: 1105 cross_layer: 4 file: testCode/expr.c
sqlite3RenameExprUnmap ( pParse , p ); location: 1107 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDeleteNN ( pParse -> db , p ); location: 1109 cross_layer: 4 file: testCode/expr.c
return sqlite3Expr ( db , TK_INTEGER , "0" ) ; location: 939 cross_layer: 4 file: testCode/expr.c
Expr *sqlite3Expr(
sqlite3 *db,            /* Handle for sqlite3DbMallocZero() (may be null) */
int op,                 /* Expression opcode */
const char *zToken      /* Token argument.  Might be NULL */
) location: 842 cross_layer: 4 file: testCode/expr.c
x . z = zToken; location: 844 cross_layer: 4 file: testCode/expr.c
x . n = sqlite3Strlen30 ( zToken ); location: 845 cross_layer: 4 file: testCode/expr.c
int sqlite3Strlen30(const char *z) location: 77 cross_layer: 3 file: testCode/util.c
if ( z == 0 )  location: 78 cross_layer: 3 file: testCode/util.c
return 0x3fffffff & ( int ) strlen ( z ) ; location: 79 cross_layer: 3 file: testCode/util.c
int sqlite3Strlen30(const char *z) location: 77 cross_layer: 3 file: testCode/util.c
if ( z == 0 )  location: 78 cross_layer: 3 file: testCode/util.c
return 0x3fffffff & ( int ) strlen ( z ) ; location: 79 cross_layer: 3 file: testCode/util.c
int sqlite3Strlen30(const char *z) location: 77 cross_layer: 3 file: testCode/util.c
if ( z == 0 )  location: 78 cross_layer: 3 file: testCode/util.c
return 0x3fffffff & ( int ) strlen ( z ) ; location: 79 cross_layer: 3 file: testCode/util.c
return sqlite3ExprAlloc ( db , op , & x , 0 ) ; location: 846 cross_layer: 4 file: testCode/expr.c
Expr *sqlite3ExprAlloc(
sqlite3 *db,            /* Handle for sqlite3DbMallocRawNN() */
int op,                 /* Expression opcode */
const Token *pToken,    /* Token argument.  Might be NULL */
int dequote             /* True to dequote */
) location: 795 cross_layer: 3 file: testCode/expr.c
assert ( db != 0 ); location: 800 cross_layer: 3 file: testCode/expr.c
if ( pToken )  location: 801 cross_layer: 3 file: testCode/expr.c
if ( op != TK_INTEGER || pToken -> z == 0 || sqlite3GetInt32 ( pToken -> z , & iValue ) == 0 )  location: 802 cross_layer: 3 file: testCode/expr.c
int sqlite3GetInt32(const char *zNum, int *pValue) location: 761 cross_layer: 4 file: testCode/util.c
if ( zNum [ 0 ] == '-' )  location: 765 cross_layer: 4 file: testCode/util.c
zNum ++; location: 767 cross_layer: 4 file: testCode/util.c
if ( zNum [ 0 ] == '+' )  location: 768 cross_layer: 4 file: testCode/util.c
zNum ++; location: 769 cross_layer: 4 file: testCode/util.c
zNum += 2; location: 777 cross_layer: 4 file: testCode/util.c
while ( zNum [ 0 ] == '0' )  location: 778 cross_layer: 4 file: testCode/util.c
zNum ++; location: 778 cross_layer: 4 file: testCode/util.c
for(i=0; sqlite3Isxdigit(zNum[i]) && i<8; i++) location: 779 cross_layer: 4 file: testCode/util.c
u = u * 16 + sqlite3HexToInt ( zNum [ i ] ); location: 780 cross_layer: 4 file: testCode/util.c
if ( ( u & 0x80000000 ) == 0 && sqlite3Isxdigit ( zNum [ i ] ) == 0 )  location: 782 cross_layer: 4 file: testCode/util.c
memcpy ( pValue , & u , 4 ); location: 783 cross_layer: 4 file: testCode/util.c
if ( ! sqlite3Isdigit ( zNum [ 0 ] ) )  location: 790 cross_layer: 4 file: testCode/util.c
while ( zNum [ 0 ] == '0' )  location: 791 cross_layer: 4 file: testCode/util.c
zNum ++; location: 791 cross_layer: 4 file: testCode/util.c
for(i=0; i<11 && (c = zNum[i] - '0')>=0 && c<=9; i++) location: 792 cross_layer: 4 file: testCode/util.c
v = v * 10 + c; location: 793 cross_layer: 4 file: testCode/util.c
testcase ( v - neg == 2147483647 ); location: 805 cross_layer: 4 file: testCode/util.c
v = - v; location: 810 cross_layer: 4 file: testCode/util.c
* pValue = ( int ) v; location: 812 cross_layer: 4 file: testCode/util.c
nExtra = pToken -> n + 1; location: 804 cross_layer: 3 file: testCode/expr.c
pNew = sqlite3DbMallocRawNN ( db , sizeof ( Expr ) + nExtra ); location: 808 cross_layer: 3 file: testCode/expr.c
void *sqlite3DbMallocRawNN(sqlite3 *db, u64 n) location: 556 cross_layer: 4 file: testCode/malloc.c
assert ( db != 0 ); location: 559 cross_layer: 4 file: testCode/malloc.c
assert ( sqlite3_mutex_held ( db -> mutex ) ); location: 560 cross_layer: 4 file: testCode/malloc.c
assert ( db -> pnBytesFreed == 0 ); location: 561 cross_layer: 4 file: testCode/malloc.c
if ( n > db -> lookaside . sz )  location: 562 cross_layer: 4 file: testCode/malloc.c
if ( db -> lookaside . bDisable )  location: 563 cross_layer: 4 file: testCode/malloc.c
return db -> mallocFailed ? 0 : dbMallocRawFinish ( db , n ) ; location: 564 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 1 ] ++; location: 566 cross_layer: 4 file: testCode/malloc.c
if ( ( pBuf = db -> lookaside . pFree ) != 0 )  location: 567 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . pFree = pBuf -> pNext; location: 568 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 0 ] ++; location: 569 cross_layer: 4 file: testCode/malloc.c
return ( void * ) pBuf ; location: 570 cross_layer: 4 file: testCode/malloc.c
if ( ( pBuf = db -> lookaside . pInit ) != 0 )  location: 571 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . pInit = pBuf -> pNext; location: 572 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 0 ] ++; location: 573 cross_layer: 4 file: testCode/malloc.c
return ( void * ) pBuf ; location: 574 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 2 ] ++; location: 576 cross_layer: 4 file: testCode/malloc.c
return dbMallocRawFinish ( db , n ) ; location: 586 cross_layer: 4 file: testCode/malloc.c
if ( pNew )  location: 809 cross_layer: 3 file: testCode/expr.c
memset ( pNew , 0 , sizeof ( Expr ) ); location: 810 cross_layer: 3 file: testCode/expr.c
pNew -> op = ( u8 ) op; location: 811 cross_layer: 3 file: testCode/expr.c
pNew -> iAgg = - 1; location: 812 cross_layer: 3 file: testCode/expr.c
if ( pToken )  location: 813 cross_layer: 3 file: testCode/expr.c
if ( nExtra == 0 )  location: 814 cross_layer: 3 file: testCode/expr.c
pNew -> flags |= EP_IntValue | EP_Leaf | ( iValue ? EP_IsTrue : EP_IsFalse ); location: 815 cross_layer: 3 file: testCode/expr.c
pNew -> u . iValue = iValue; location: 816 cross_layer: 3 file: testCode/expr.c
pNew -> u . zToken = ( char * ) & pNew [ 1 ]; location: 818 cross_layer: 3 file: testCode/expr.c
assert ( pToken -> z != 0 || pToken -> n == 0 ); location: 819 cross_layer: 3 file: testCode/expr.c
if ( pToken -> n )  location: 820 cross_layer: 3 file: testCode/expr.c
memcpy ( pNew -> u . zToken , pToken -> z , pToken -> n ); location: 820 cross_layer: 3 file: testCode/expr.c
pNew -> u . zToken [ pToken -> n ] = 0; location: 821 cross_layer: 3 file: testCode/expr.c
if ( dequote && sqlite3Isquote ( pNew -> u . zToken [ 0 ] ) )  location: 822 cross_layer: 3 file: testCode/expr.c
void sqlite3DequoteExpr(Expr *p) location: 251 cross_layer: 4 file: testCode/util.c
assert ( sqlite3Isquote ( p -> u . zToken [ 0 ] ) ); location: 252 cross_layer: 4 file: testCode/util.c
p -> flags |= p -> u . zToken [ 0 ] == '"' ? EP_Quoted | EP_DblQuoted : EP_Quoted; location: 253 cross_layer: 4 file: testCode/util.c
sqlite3Dequote ( p -> u . zToken ); location: 254 cross_layer: 4 file: testCode/util.c
pNew -> nHeight = 1; location: 828 cross_layer: 3 file: testCode/expr.c
return pNew ; location: 831 cross_layer: 3 file: testCode/expr.c
Expr *sqlite3ExprAlloc(
sqlite3 *db,            /* Handle for sqlite3DbMallocRawNN() */
int op,                 /* Expression opcode */
const Token *pToken,    /* Token argument.  Might be NULL */
int dequote             /* True to dequote */
) location: 795 cross_layer: 3 file: testCode/expr.c
assert ( db != 0 ); location: 800 cross_layer: 3 file: testCode/expr.c
if ( pToken )  location: 801 cross_layer: 3 file: testCode/expr.c
if ( op != TK_INTEGER || pToken -> z == 0 || sqlite3GetInt32 ( pToken -> z , & iValue ) == 0 )  location: 802 cross_layer: 3 file: testCode/expr.c
int sqlite3GetInt32(const char *zNum, int *pValue) location: 761 cross_layer: 4 file: testCode/util.c
if ( zNum [ 0 ] == '-' )  location: 765 cross_layer: 4 file: testCode/util.c
zNum ++; location: 767 cross_layer: 4 file: testCode/util.c
if ( zNum [ 0 ] == '+' )  location: 768 cross_layer: 4 file: testCode/util.c
zNum ++; location: 769 cross_layer: 4 file: testCode/util.c
zNum += 2; location: 777 cross_layer: 4 file: testCode/util.c
while ( zNum [ 0 ] == '0' )  location: 778 cross_layer: 4 file: testCode/util.c
zNum ++; location: 778 cross_layer: 4 file: testCode/util.c
u = u * 16 + sqlite3HexToInt ( zNum [ i ] ); location: 780 cross_layer: 4 file: testCode/util.c
if ( ( u & 0x80000000 ) == 0 && sqlite3Isxdigit ( zNum [ i ] ) == 0 )  location: 782 cross_layer: 4 file: testCode/util.c
memcpy ( pValue , & u , 4 ); location: 783 cross_layer: 4 file: testCode/util.c
if ( ! sqlite3Isdigit ( zNum [ 0 ] ) )  location: 790 cross_layer: 4 file: testCode/util.c
while ( zNum [ 0 ] == '0' )  location: 791 cross_layer: 4 file: testCode/util.c
zNum ++; location: 791 cross_layer: 4 file: testCode/util.c
v = v * 10 + c; location: 793 cross_layer: 4 file: testCode/util.c
testcase ( v - neg == 2147483647 ); location: 805 cross_layer: 4 file: testCode/util.c
v = - v; location: 810 cross_layer: 4 file: testCode/util.c
* pValue = ( int ) v; location: 812 cross_layer: 4 file: testCode/util.c
nExtra = pToken -> n + 1; location: 804 cross_layer: 3 file: testCode/expr.c
pNew = sqlite3DbMallocRawNN ( db , sizeof ( Expr ) + nExtra ); location: 808 cross_layer: 3 file: testCode/expr.c
void *sqlite3DbMallocRawNN(sqlite3 *db, u64 n) location: 556 cross_layer: 4 file: testCode/malloc.c
assert ( db != 0 ); location: 559 cross_layer: 4 file: testCode/malloc.c
assert ( sqlite3_mutex_held ( db -> mutex ) ); location: 560 cross_layer: 4 file: testCode/malloc.c
assert ( db -> pnBytesFreed == 0 ); location: 561 cross_layer: 4 file: testCode/malloc.c
if ( n > db -> lookaside . sz )  location: 562 cross_layer: 4 file: testCode/malloc.c
if ( db -> lookaside . bDisable )  location: 563 cross_layer: 4 file: testCode/malloc.c
return db -> mallocFailed ? 0 : dbMallocRawFinish ( db , n ) ; location: 564 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 1 ] ++; location: 566 cross_layer: 4 file: testCode/malloc.c
if ( ( pBuf = db -> lookaside . pFree ) != 0 )  location: 567 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . pFree = pBuf -> pNext; location: 568 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 0 ] ++; location: 569 cross_layer: 4 file: testCode/malloc.c
return ( void * ) pBuf ; location: 570 cross_layer: 4 file: testCode/malloc.c
if ( ( pBuf = db -> lookaside . pInit ) != 0 )  location: 571 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . pInit = pBuf -> pNext; location: 572 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 0 ] ++; location: 573 cross_layer: 4 file: testCode/malloc.c
return ( void * ) pBuf ; location: 574 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 2 ] ++; location: 576 cross_layer: 4 file: testCode/malloc.c
return dbMallocRawFinish ( db , n ) ; location: 586 cross_layer: 4 file: testCode/malloc.c
if ( pNew )  location: 809 cross_layer: 3 file: testCode/expr.c
memset ( pNew , 0 , sizeof ( Expr ) ); location: 810 cross_layer: 3 file: testCode/expr.c
pNew -> op = ( u8 ) op; location: 811 cross_layer: 3 file: testCode/expr.c
pNew -> iAgg = - 1; location: 812 cross_layer: 3 file: testCode/expr.c
if ( pToken )  location: 813 cross_layer: 3 file: testCode/expr.c
if ( nExtra == 0 )  location: 814 cross_layer: 3 file: testCode/expr.c
pNew -> flags |= EP_IntValue | EP_Leaf | ( iValue ? EP_IsTrue : EP_IsFalse ); location: 815 cross_layer: 3 file: testCode/expr.c
pNew -> u . iValue = iValue; location: 816 cross_layer: 3 file: testCode/expr.c
pNew -> u . zToken = ( char * ) & pNew [ 1 ]; location: 818 cross_layer: 3 file: testCode/expr.c
assert ( pToken -> z != 0 || pToken -> n == 0 ); location: 819 cross_layer: 3 file: testCode/expr.c
if ( pToken -> n )  location: 820 cross_layer: 3 file: testCode/expr.c
memcpy ( pNew -> u . zToken , pToken -> z , pToken -> n ); location: 820 cross_layer: 3 file: testCode/expr.c
pNew -> u . zToken [ pToken -> n ] = 0; location: 821 cross_layer: 3 file: testCode/expr.c
if ( dequote && sqlite3Isquote ( pNew -> u . zToken [ 0 ] ) )  location: 822 cross_layer: 3 file: testCode/expr.c
void sqlite3DequoteExpr(Expr *p) location: 251 cross_layer: 4 file: testCode/util.c
assert ( sqlite3Isquote ( p -> u . zToken [ 0 ] ) ); location: 252 cross_layer: 4 file: testCode/util.c
p -> flags |= p -> u . zToken [ 0 ] == '"' ? EP_Quoted | EP_DblQuoted : EP_Quoted; location: 253 cross_layer: 4 file: testCode/util.c
sqlite3Dequote ( p -> u . zToken ); location: 254 cross_layer: 4 file: testCode/util.c
pNew -> nHeight = 1; location: 828 cross_layer: 3 file: testCode/expr.c
return pNew ; location: 831 cross_layer: 3 file: testCode/expr.c
Expr *sqlite3ExprAlloc(
sqlite3 *db,            /* Handle for sqlite3DbMallocRawNN() */
int op,                 /* Expression opcode */
const Token *pToken,    /* Token argument.  Might be NULL */
int dequote             /* True to dequote */
) location: 795 cross_layer: 3 file: testCode/expr.c
assert ( db != 0 ); location: 800 cross_layer: 3 file: testCode/expr.c
if ( pToken )  location: 801 cross_layer: 3 file: testCode/expr.c
if ( op != TK_INTEGER || pToken -> z == 0 || sqlite3GetInt32 ( pToken -> z , & iValue ) == 0 )  location: 802 cross_layer: 3 file: testCode/expr.c
int sqlite3GetInt32(const char *zNum, int *pValue) location: 761 cross_layer: 4 file: testCode/util.c
if ( zNum [ 0 ] == '-' )  location: 765 cross_layer: 4 file: testCode/util.c
zNum ++; location: 767 cross_layer: 4 file: testCode/util.c
if ( zNum [ 0 ] == '+' )  location: 768 cross_layer: 4 file: testCode/util.c
zNum ++; location: 769 cross_layer: 4 file: testCode/util.c
zNum += 2; location: 777 cross_layer: 4 file: testCode/util.c
while ( zNum [ 0 ] == '0' )  location: 778 cross_layer: 4 file: testCode/util.c
zNum ++; location: 778 cross_layer: 4 file: testCode/util.c
u = u * 16 + sqlite3HexToInt ( zNum [ i ] ); location: 780 cross_layer: 4 file: testCode/util.c
if ( ( u & 0x80000000 ) == 0 && sqlite3Isxdigit ( zNum [ i ] ) == 0 )  location: 782 cross_layer: 4 file: testCode/util.c
memcpy ( pValue , & u , 4 ); location: 783 cross_layer: 4 file: testCode/util.c
if ( ! sqlite3Isdigit ( zNum [ 0 ] ) )  location: 790 cross_layer: 4 file: testCode/util.c
while ( zNum [ 0 ] == '0' )  location: 791 cross_layer: 4 file: testCode/util.c
zNum ++; location: 791 cross_layer: 4 file: testCode/util.c
v = v * 10 + c; location: 793 cross_layer: 4 file: testCode/util.c
testcase ( v - neg == 2147483647 ); location: 805 cross_layer: 4 file: testCode/util.c
v = - v; location: 810 cross_layer: 4 file: testCode/util.c
* pValue = ( int ) v; location: 812 cross_layer: 4 file: testCode/util.c
nExtra = pToken -> n + 1; location: 804 cross_layer: 3 file: testCode/expr.c
pNew = sqlite3DbMallocRawNN ( db , sizeof ( Expr ) + nExtra ); location: 808 cross_layer: 3 file: testCode/expr.c
void *sqlite3DbMallocRawNN(sqlite3 *db, u64 n) location: 556 cross_layer: 4 file: testCode/malloc.c
assert ( db != 0 ); location: 559 cross_layer: 4 file: testCode/malloc.c
assert ( sqlite3_mutex_held ( db -> mutex ) ); location: 560 cross_layer: 4 file: testCode/malloc.c
assert ( db -> pnBytesFreed == 0 ); location: 561 cross_layer: 4 file: testCode/malloc.c
if ( n > db -> lookaside . sz )  location: 562 cross_layer: 4 file: testCode/malloc.c
if ( db -> lookaside . bDisable )  location: 563 cross_layer: 4 file: testCode/malloc.c
return db -> mallocFailed ? 0 : dbMallocRawFinish ( db , n ) ; location: 564 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 1 ] ++; location: 566 cross_layer: 4 file: testCode/malloc.c
if ( ( pBuf = db -> lookaside . pFree ) != 0 )  location: 567 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . pFree = pBuf -> pNext; location: 568 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 0 ] ++; location: 569 cross_layer: 4 file: testCode/malloc.c
return ( void * ) pBuf ; location: 570 cross_layer: 4 file: testCode/malloc.c
if ( ( pBuf = db -> lookaside . pInit ) != 0 )  location: 571 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . pInit = pBuf -> pNext; location: 572 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 0 ] ++; location: 573 cross_layer: 4 file: testCode/malloc.c
return ( void * ) pBuf ; location: 574 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 2 ] ++; location: 576 cross_layer: 4 file: testCode/malloc.c
return dbMallocRawFinish ( db , n ) ; location: 586 cross_layer: 4 file: testCode/malloc.c
if ( pNew )  location: 809 cross_layer: 3 file: testCode/expr.c
memset ( pNew , 0 , sizeof ( Expr ) ); location: 810 cross_layer: 3 file: testCode/expr.c
pNew -> op = ( u8 ) op; location: 811 cross_layer: 3 file: testCode/expr.c
pNew -> iAgg = - 1; location: 812 cross_layer: 3 file: testCode/expr.c
if ( pToken )  location: 813 cross_layer: 3 file: testCode/expr.c
if ( nExtra == 0 )  location: 814 cross_layer: 3 file: testCode/expr.c
pNew -> flags |= EP_IntValue | EP_Leaf | ( iValue ? EP_IsTrue : EP_IsFalse ); location: 815 cross_layer: 3 file: testCode/expr.c
pNew -> u . iValue = iValue; location: 816 cross_layer: 3 file: testCode/expr.c
pNew -> u . zToken = ( char * ) & pNew [ 1 ]; location: 818 cross_layer: 3 file: testCode/expr.c
assert ( pToken -> z != 0 || pToken -> n == 0 ); location: 819 cross_layer: 3 file: testCode/expr.c
if ( pToken -> n )  location: 820 cross_layer: 3 file: testCode/expr.c
memcpy ( pNew -> u . zToken , pToken -> z , pToken -> n ); location: 820 cross_layer: 3 file: testCode/expr.c
pNew -> u . zToken [ pToken -> n ] = 0; location: 821 cross_layer: 3 file: testCode/expr.c
if ( dequote && sqlite3Isquote ( pNew -> u . zToken [ 0 ] ) )  location: 822 cross_layer: 3 file: testCode/expr.c
void sqlite3DequoteExpr(Expr *p) location: 251 cross_layer: 4 file: testCode/util.c
assert ( sqlite3Isquote ( p -> u . zToken [ 0 ] ) ); location: 252 cross_layer: 4 file: testCode/util.c
p -> flags |= p -> u . zToken [ 0 ] == '"' ? EP_Quoted | EP_DblQuoted : EP_Quoted; location: 253 cross_layer: 4 file: testCode/util.c
sqlite3Dequote ( p -> u . zToken ); location: 254 cross_layer: 4 file: testCode/util.c
pNew -> nHeight = 1; location: 828 cross_layer: 3 file: testCode/expr.c
return pNew ; location: 831 cross_layer: 3 file: testCode/expr.c
return sqlite3PExpr ( pParse , TK_AND , pLeft , pRight ) ; location: 941 cross_layer: 4 file: testCode/expr.c
Expr *sqlite3PExpr(
Parse *pParse,          /* Parsing context */
int op,                 /* Expression opcode */
Expr *pLeft,            /* Left operand */
Expr *pRight            /* Right operand */
) location: 890 cross_layer: 4 file: testCode/expr.c
p = sqlite3DbMallocRawNN ( pParse -> db , sizeof ( Expr ) ); location: 892 cross_layer: 4 file: testCode/expr.c
if ( p )  location: 893 cross_layer: 4 file: testCode/expr.c
memset ( p , 0 , sizeof ( Expr ) ); location: 894 cross_layer: 4 file: testCode/expr.c
p -> op = op & 0xff; location: 895 cross_layer: 4 file: testCode/expr.c
p -> iAgg = - 1; location: 896 cross_layer: 4 file: testCode/expr.c
sqlite3ExprAttachSubtrees ( pParse -> db , p , pLeft , pRight ); location: 897 cross_layer: 4 file: testCode/expr.c
sqlite3ExprCheckHeight ( pParse , p -> nHeight ); location: 898 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDelete ( pParse -> db , pLeft ); location: 900 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDelete ( pParse -> db , pRight ); location: 901 cross_layer: 4 file: testCode/expr.c
return p ; location: 903 cross_layer: 4 file: testCode/expr.c
if ( pRight -> pOn && pRight -> pUsing )  location: 499 cross_layer: 2 file: select.c
sqlite3ErrorMsg ( pParse , "cannot have both ON and USING "
"clauses in the same join" ) location: 501 cross_layer: 2 file: select.c
void sqlite3ErrorMsg(Parse *pParse, const char *zFormat, ...) location: 181 cross_layer: 3 file: testCode/util.c
sqlite3 * db = pParse -> db ; location: 184 cross_layer: 3 file: testCode/util.c
va_start ( ap , zFormat ); location: 185 cross_layer: 3 file: testCode/util.c
zMsg = sqlite3VMPrintf ( db , zFormat , ap ); location: 186 cross_layer: 3 file: testCode/util.c
if ( db -> suppressErr )  location: 188 cross_layer: 3 file: testCode/util.c
sqlite3DbFree ( db , zMsg ); location: 189 cross_layer: 3 file: testCode/util.c
pParse -> nErr ++; location: 191 cross_layer: 3 file: testCode/util.c
sqlite3DbFree ( db , pParse -> zErrMsg ); location: 192 cross_layer: 3 file: testCode/util.c
pParse -> zErrMsg = zMsg; location: 193 cross_layer: 3 file: testCode/util.c
pParse -> rc = SQLITE_ERROR; location: 194 cross_layer: 3 file: testCode/util.c
pParse -> pWith = 0; location: 195 cross_layer: 3 file: testCode/util.c
if ( pRight -> pOn )  location: 508 cross_layer: 2 file: select.c
if ( isOuter )  location: 509 cross_layer: 2 file: select.c
sqlite3SetJoinExpr ( pRight -> pOn , pRight -> iCursor ); location: 509 cross_layer: 2 file: select.c
void sqlite3SetJoinExpr(Expr *p, int iTable) location: 405 cross_layer: 3 file: select.c
while ( p )  location: 406 cross_layer: 3 file: select.c
ExprSetProperty ( p , EP_FromJoin ); location: 407 cross_layer: 3 file: select.c
assert ( ! ExprHasProperty ( p , EP_TokenOnly | EP_Reduced ) ); location: 408 cross_layer: 3 file: select.c
ExprSetVVAProperty ( p , EP_NoReduce ); location: 409 cross_layer: 3 file: select.c
p -> iRightJoinTable = ( i16 ) iTable; location: 410 cross_layer: 3 file: select.c
if ( p -> op == TK_FUNCTION && p -> x . pList )  location: 411 cross_layer: 3 file: select.c
for(i=0; i<p->x.pList->nExpr; i++) location: 413 cross_layer: 3 file: select.c
sqlite3SetJoinExpr ( p -> x . pList -> a [ i ] . pExpr , iTable ); location: 414 cross_layer: 3 file: select.c
void sqlite3SetJoinExpr(Expr *p, int iTable) location: 405 cross_layer: 4 file: select.c
while ( p )  location: 406 cross_layer: 4 file: select.c
ExprSetProperty ( p , EP_FromJoin ); location: 407 cross_layer: 4 file: select.c
assert ( ! ExprHasProperty ( p , EP_TokenOnly | EP_Reduced ) ); location: 408 cross_layer: 4 file: select.c
ExprSetVVAProperty ( p , EP_NoReduce ); location: 409 cross_layer: 4 file: select.c
p -> iRightJoinTable = ( i16 ) iTable; location: 410 cross_layer: 4 file: select.c
if ( p -> op == TK_FUNCTION && p -> x . pList )  location: 411 cross_layer: 4 file: select.c
sqlite3SetJoinExpr ( p -> x . pList -> a [ i ] . pExpr , iTable ); location: 414 cross_layer: 4 file: select.c
sqlite3SetJoinExpr ( p -> pLeft , iTable ); location: 417 cross_layer: 4 file: select.c
void sqlite3SetJoinExpr(Expr *p, int iTable) location: 405 cross_layer: 4 file: select.c
while ( p )  location: 406 cross_layer: 4 file: select.c
ExprSetProperty ( p , EP_FromJoin ); location: 407 cross_layer: 4 file: select.c
assert ( ! ExprHasProperty ( p , EP_TokenOnly | EP_Reduced ) ); location: 408 cross_layer: 4 file: select.c
ExprSetVVAProperty ( p , EP_NoReduce ); location: 409 cross_layer: 4 file: select.c
p -> iRightJoinTable = ( i16 ) iTable; location: 410 cross_layer: 4 file: select.c
if ( p -> op == TK_FUNCTION && p -> x . pList )  location: 411 cross_layer: 4 file: select.c
sqlite3SetJoinExpr ( p -> x . pList -> a [ i ] . pExpr , iTable ); location: 414 cross_layer: 4 file: select.c
sqlite3SetJoinExpr ( p -> pLeft , iTable ); location: 417 cross_layer: 4 file: select.c
p = p -> pRight; location: 418 cross_layer: 4 file: select.c
p = p -> pRight; location: 418 cross_layer: 4 file: select.c
sqlite3SetJoinExpr ( p -> pLeft , iTable ); location: 417 cross_layer: 3 file: select.c
p = p -> pRight; location: 418 cross_layer: 3 file: select.c
p -> pWhere = sqlite3ExprAnd ( pParse , p -> pWhere , pRight -> pOn ); location: 510 cross_layer: 2 file: select.c
Expr *sqlite3ExprAnd(Parse *pParse, Expr *pLeft, Expr *pRight) location: 930 cross_layer: 3 file: testCode/expr.c
sqlite3 * db = pParse -> db ; location: 931 cross_layer: 3 file: testCode/expr.c
if ( pLeft == 0 )  location: 932 cross_layer: 3 file: testCode/expr.c
return pRight ; location: 933 cross_layer: 3 file: testCode/expr.c
if ( pRight == 0 )  location: 934 cross_layer: 3 file: testCode/expr.c
return pLeft ; location: 935 cross_layer: 3 file: testCode/expr.c
if ( ExprAlwaysFalse ( pLeft ) || ExprAlwaysFalse ( pRight ) )  location: 936 cross_layer: 3 file: testCode/expr.c
sqlite3ExprUnmapAndDelete ( pParse , pLeft ); location: 937 cross_layer: 3 file: testCode/expr.c
sqlite3ExprUnmapAndDelete ( pParse , pRight ); location: 938 cross_layer: 3 file: testCode/expr.c
return sqlite3Expr ( db , TK_INTEGER , "0" ) ; location: 939 cross_layer: 3 file: testCode/expr.c
return sqlite3PExpr ( pParse , TK_AND , pLeft , pRight ) ; location: 941 cross_layer: 3 file: testCode/expr.c
pRight -> pOn = 0; location: 511 cross_layer: 2 file: select.c
if ( pRight -> pUsing )  location: 521 cross_layer: 2 file: select.c
IdList * pList = pRight -> pUsing ; location: 522 cross_layer: 2 file: select.c
for(j=0; j<pList->nId; j++) location: 523 cross_layer: 2 file: select.c
zName = pList -> a [ j ] . zName; location: 529 cross_layer: 2 file: select.c
iRightCol = columnIndex ( pRightTab , zName ); location: 530 cross_layer: 2 file: select.c
static int columnIndex(Table *pTab, const char *zCol) location: 294 cross_layer: 3 file: select.c
if ( sqlite3StrICmp ( pTab -> aCol [ i ] . zName , zCol ) == 0 )  location: 297 cross_layer: 3 file: select.c
if ( iRightCol < 0 || ! tableAndColumnIndex ( pSrc , i + 1 , zName , & iLeft , & iLeftCol ) )  location: 531 cross_layer: 2 file: select.c
static int tableAndColumnIndex(
SrcList *pSrc,       /* Array of tables to search */
int N,               /* Number of tables in pSrc->a[] to search */
const char *zCol,    /* Name of the column we are looking for */
int *piTab,          /* Write index of pSrc->a[] here */
int *piCol           /* Write index of pSrc->a[*piTab].pTab->aCol[] here */
) location: 317 cross_layer: 3 file: select.c
assert ( ( piTab == 0 ) == ( piCol == 0 ) ); location: 321 cross_layer: 3 file: select.c
iCol = columnIndex ( pSrc -> a [ i ] . pTab , zCol ); location: 323 cross_layer: 3 file: select.c
if ( iCol >= 0 )  location: 324 cross_layer: 3 file: select.c
if ( piTab )  location: 325 cross_layer: 3 file: select.c
* piTab = i; location: 326 cross_layer: 3 file: select.c
* piCol = iCol; location: 327 cross_layer: 3 file: select.c
sqlite3ErrorMsg ( pParse , "cannot join using column %s - column "
"not present in both tables" , zName ) location: 535 cross_layer: 2 file: select.c
void sqlite3ErrorMsg(Parse *pParse, const char *zFormat, ...) location: 181 cross_layer: 3 file: testCode/util.c
sqlite3 * db = pParse -> db ; location: 184 cross_layer: 3 file: testCode/util.c
va_start ( ap , zFormat ); location: 185 cross_layer: 3 file: testCode/util.c
zMsg = sqlite3VMPrintf ( db , zFormat , ap ); location: 186 cross_layer: 3 file: testCode/util.c
if ( db -> suppressErr )  location: 188 cross_layer: 3 file: testCode/util.c
sqlite3DbFree ( db , zMsg ); location: 189 cross_layer: 3 file: testCode/util.c
pParse -> nErr ++; location: 191 cross_layer: 3 file: testCode/util.c
sqlite3DbFree ( db , pParse -> zErrMsg ); location: 192 cross_layer: 3 file: testCode/util.c
pParse -> zErrMsg = zMsg; location: 193 cross_layer: 3 file: testCode/util.c
pParse -> rc = SQLITE_ERROR; location: 194 cross_layer: 3 file: testCode/util.c
pParse -> pWith = 0; location: 195 cross_layer: 3 file: testCode/util.c
addWhereTerm ( pParse , pSrc , iLeft , iLeftCol , i + 1 , iRightCol , isOuter , & p -> pWhere ); location: 538 cross_layer: 2 file: select.c
static void addWhereTerm(
Parse *pParse,                  /* Parsing context */
SrcList *pSrc,                  /* List of tables in FROM clause */
int iLeft,                      /* Index of first table to join in pSrc */
int iColLeft,                   /* Index of column in first table */
int iRight,                     /* Index of second table in pSrc */
int iColRight,                  /* Index of column in second table */
int isOuterJoin,                /* True if this is an OUTER join */
Expr **ppWhere                  /* IN/OUT: The WHERE clause to add to */
) location: 355 cross_layer: 3 file: select.c
sqlite3 * db = pParse -> db ; location: 356 cross_layer: 3 file: select.c
assert ( iLeft < iRight ); location: 361 cross_layer: 3 file: select.c
assert ( pSrc -> nSrc > iRight ); location: 362 cross_layer: 3 file: select.c
assert ( pSrc -> a [ iLeft ] . pTab ); location: 363 cross_layer: 3 file: select.c
assert ( pSrc -> a [ iRight ] . pTab ); location: 364 cross_layer: 3 file: select.c
pE1 = sqlite3CreateColumnExpr ( db , pSrc , iLeft , iColLeft ); location: 366 cross_layer: 3 file: select.c
pE2 = sqlite3CreateColumnExpr ( db , pSrc , iRight , iColRight ); location: 367 cross_layer: 3 file: select.c
pEq = sqlite3PExpr ( pParse , TK_EQ , pE1 , pE2 ); location: 369 cross_layer: 3 file: select.c
if ( pEq && isOuterJoin )  location: 370 cross_layer: 3 file: select.c
ExprSetProperty ( pEq , EP_FromJoin ); location: 371 cross_layer: 3 file: select.c
assert ( ! ExprHasProperty ( pEq , EP_TokenOnly | EP_Reduced ) ); location: 372 cross_layer: 3 file: select.c
ExprSetVVAProperty ( pEq , EP_NoReduce ); location: 373 cross_layer: 3 file: select.c
pEq -> iRightJoinTable = ( i16 ) pE2 -> iTable; location: 374 cross_layer: 3 file: select.c
* ppWhere = sqlite3ExprAnd ( pParse , * ppWhere , pEq ); location: 376 cross_layer: 3 file: select.c
for(i=0, pFrom=pTabList->a; i<pTabList->nSrc; i++, pFrom++) location: 5044 cross_layer: 1 file: select.c
Table * pTab = pFrom -> pTab ; location: 5045 cross_layer: 1 file: select.c
Select * pSub = pFrom -> pSelect ; location: 5046 cross_layer: 1 file: select.c
char * zTabName = pFrom -> zAlias ; location: 5047 cross_layer: 1 file: select.c
if ( zTabName == 0 )  location: 5050 cross_layer: 1 file: select.c
zTabName = pTab -> zName; location: 5051 cross_layer: 1 file: select.c
if ( db -> mallocFailed )  location: 5053 cross_layer: 1 file: select.c
if ( pSub == 0 || ( pSub -> selFlags & SF_NestedFrom ) == 0 )  location: 5054 cross_layer: 1 file: select.c
if ( zTName && sqlite3StrICmp ( zTName , zTabName ) != 0 )  location: 5056 cross_layer: 1 file: select.c
int sqlite3StrICmp(const char *zLeft, const char *zRight) location: 286 cross_layer: 2 file: testCode/util.c
a = ( unsigned char * ) zLeft; location: 289 cross_layer: 2 file: testCode/util.c
b = ( unsigned char * ) zRight; location: 290 cross_layer: 2 file: testCode/util.c
c = * a; location: 292 cross_layer: 2 file: testCode/util.c
x = * b; location: 293 cross_layer: 2 file: testCode/util.c
if ( c == x )  location: 294 cross_layer: 2 file: testCode/util.c
if ( c == 0 )  location: 295 cross_layer: 2 file: testCode/util.c
c = ( int ) UpperToLower [ c ] - ( int ) UpperToLower [ x ]; location: 297 cross_layer: 2 file: testCode/util.c
if ( c )  location: 298 cross_layer: 2 file: testCode/util.c
a ++; location: 300 cross_layer: 2 file: testCode/util.c
b ++; location: 301 cross_layer: 2 file: testCode/util.c
return c ; location: 303 cross_layer: 2 file: testCode/util.c
iDb = sqlite3SchemaToIndex ( db , pTab -> pSchema ); location: 5059 cross_layer: 1 file: select.c
int sqlite3SchemaToIndex(sqlite3 *db, Schema *pSchema) location: 507 cross_layer: 2 file: testCode/prepare.c
assert ( sqlite3_mutex_held ( db -> mutex ) ); location: 520 cross_layer: 2 file: testCode/prepare.c
int sqlite3_mutex_held(sqlite3_mutex *p) location: 350 cross_layer: 3 file: testCode/mutex.c
assert ( p == 0 || sqlite3GlobalConfig . mutex . xMutexHeld ); location: 351 cross_layer: 3 file: testCode/mutex.c
return p == 0 || sqlite3GlobalConfig . mutex . xMutexHeld ( p ) ; location: 352 cross_layer: 3 file: testCode/mutex.c
if ( pSchema )  location: 521 cross_layer: 2 file: testCode/prepare.c
if ( db -> aDb [ i ] . pSchema == pSchema )  location: 524 cross_layer: 2 file: testCode/prepare.c
assert ( i >= 0 && i < db -> nDb ); location: 528 cross_layer: 2 file: testCode/prepare.c
zSchemaName = iDb >= 0 ? db -> aDb [ iDb ] . zDbSName : "*"; location: 5060 cross_layer: 1 file: select.c
for(j=0; j<pTab->nCol; j++) location: 5062 cross_layer: 1 file: select.c
char * zName = pTab -> aCol [ j ] . zName ; location: 5063 cross_layer: 1 file: select.c
assert ( zName ); location: 5068 cross_layer: 1 file: select.c
if ( zTName && pSub && sqlite3MatchSpanName ( pSub -> pEList -> a [ j ] . zSpan , 0 , zTName , 0 ) == 0 )  location: 5069 cross_layer: 1 file: select.c
int sqlite3MatchSpanName(
const char *zSpan,
const char *zCol,
const char *zTab,
const char *zDb
) location: 140 cross_layer: 2 file: testCode/resolve.c
for(n=0; ALWAYS(zSpan[n]) && zSpan[n]!='.'; n++) location: 142 cross_layer: 2 file: testCode/resolve.c
if ( zDb && ( sqlite3StrNICmp ( zSpan , zDb , n ) != 0 || zDb [ n ] != 0 ) )  location: 143 cross_layer: 2 file: testCode/resolve.c
zSpan += n + 1; location: 146 cross_layer: 2 file: testCode/resolve.c
for(n=0; ALWAYS(zSpan[n]) && zSpan[n]!='.'; n++) location: 147 cross_layer: 2 file: testCode/resolve.c
if ( zTab && ( sqlite3StrNICmp ( zSpan , zTab , n ) != 0 || zTab [ n ] != 0 ) )  location: 148 cross_layer: 2 file: testCode/resolve.c
zSpan += n + 1; location: 151 cross_layer: 2 file: testCode/resolve.c
if ( zCol && sqlite3StrICmp ( zSpan , zCol ) != 0 )  location: 152 cross_layer: 2 file: testCode/resolve.c
int sqlite3StrICmp(const char *zLeft, const char *zRight) location: 286 cross_layer: 3 file: testCode/util.c
a = ( unsigned char * ) zLeft; location: 289 cross_layer: 3 file: testCode/util.c
b = ( unsigned char * ) zRight; location: 290 cross_layer: 3 file: testCode/util.c
c = * a; location: 292 cross_layer: 3 file: testCode/util.c
x = * b; location: 293 cross_layer: 3 file: testCode/util.c
if ( c == x )  location: 294 cross_layer: 3 file: testCode/util.c
if ( c == 0 )  location: 295 cross_layer: 3 file: testCode/util.c
c = ( int ) UpperToLower [ c ] - ( int ) UpperToLower [ x ]; location: 297 cross_layer: 3 file: testCode/util.c
if ( c )  location: 298 cross_layer: 3 file: testCode/util.c
a ++; location: 300 cross_layer: 3 file: testCode/util.c
b ++; location: 301 cross_layer: 3 file: testCode/util.c
return c ; location: 303 cross_layer: 3 file: testCode/util.c
if ( ( p -> selFlags & SF_IncludeHidden ) == 0 && IsHiddenColumn ( & pTab -> aCol [ j ] ) )  location: 5079 cross_layer: 1 file: select.c
if ( i > 0 && zTName == 0 )  location: 5086 cross_layer: 1 file: select.c
if ( ( pFrom -> fg . jointype & JT_NATURAL ) != 0 && tableAndColumnIndex ( pTabList , i , zName , 0 , 0 ) )  location: 5087 cross_layer: 1 file: select.c
static int tableAndColumnIndex(
SrcList *pSrc,       /* Array of tables to search */
int N,               /* Number of tables in pSrc->a[] to search */
const char *zCol,    /* Name of the column we are looking for */
int *piTab,          /* Write index of pSrc->a[] here */
int *piCol           /* Write index of pSrc->a[*piTab].pTab->aCol[] here */
) location: 317 cross_layer: 2 file: select.c
assert ( ( piTab == 0 ) == ( piCol == 0 ) ); location: 321 cross_layer: 2 file: select.c
iCol = columnIndex ( pSrc -> a [ i ] . pTab , zCol ); location: 323 cross_layer: 2 file: select.c
if ( iCol >= 0 )  location: 324 cross_layer: 2 file: select.c
if ( piTab )  location: 325 cross_layer: 2 file: select.c
* piTab = i; location: 326 cross_layer: 2 file: select.c
* piCol = iCol; location: 327 cross_layer: 2 file: select.c
if ( sqlite3IdListIndex ( pFrom -> pUsing , zName ) >= 0 )  location: 5094 cross_layer: 1 file: select.c
int sqlite3IdListIndex(IdList *pList, const char *zName) location: 4169 cross_layer: 2 file: testCode/build.c
if ( pList == 0 )  location: 4171 cross_layer: 2 file: testCode/build.c
for(i=0; i<pList->nId; i++) location: 4172 cross_layer: 2 file: testCode/build.c
if ( sqlite3StrICmp ( pList -> a [ i ] . zName , zName ) == 0 )  location: 4173 cross_layer: 2 file: testCode/build.c
int sqlite3StrICmp(const char *zLeft, const char *zRight) location: 286 cross_layer: 3 file: testCode/util.c
a = ( unsigned char * ) zLeft; location: 289 cross_layer: 3 file: testCode/util.c
b = ( unsigned char * ) zRight; location: 290 cross_layer: 3 file: testCode/util.c
c = * a; location: 292 cross_layer: 3 file: testCode/util.c
x = * b; location: 293 cross_layer: 3 file: testCode/util.c
if ( c == x )  location: 294 cross_layer: 3 file: testCode/util.c
if ( c == 0 )  location: 295 cross_layer: 3 file: testCode/util.c
c = ( int ) UpperToLower [ c ] - ( int ) UpperToLower [ x ]; location: 297 cross_layer: 3 file: testCode/util.c
if ( c )  location: 298 cross_layer: 3 file: testCode/util.c
a ++; location: 300 cross_layer: 3 file: testCode/util.c
b ++; location: 301 cross_layer: 3 file: testCode/util.c
return c ; location: 303 cross_layer: 3 file: testCode/util.c
pRight = sqlite3Expr ( db , TK_ID , zName ); location: 5100 cross_layer: 1 file: select.c
Expr *sqlite3Expr(
sqlite3 *db,            /* Handle for sqlite3DbMallocZero() (may be null) */
int op,                 /* Expression opcode */
const char *zToken      /* Token argument.  Might be NULL */
) location: 842 cross_layer: 2 file: testCode/expr.c
x . z = zToken; location: 844 cross_layer: 2 file: testCode/expr.c
x . n = sqlite3Strlen30 ( zToken ); location: 845 cross_layer: 2 file: testCode/expr.c
return sqlite3ExprAlloc ( db , op , & x , 0 ) ; location: 846 cross_layer: 2 file: testCode/expr.c
zColname = zName; location: 5101 cross_layer: 1 file: select.c
pLeft = sqlite3Expr ( db , TK_ID , zTabName ); location: 5105 cross_layer: 1 file: select.c
Expr *sqlite3Expr(
sqlite3 *db,            /* Handle for sqlite3DbMallocZero() (may be null) */
int op,                 /* Expression opcode */
const char *zToken      /* Token argument.  Might be NULL */
) location: 842 cross_layer: 2 file: testCode/expr.c
x . z = zToken; location: 844 cross_layer: 2 file: testCode/expr.c
x . n = sqlite3Strlen30 ( zToken ); location: 845 cross_layer: 2 file: testCode/expr.c
return sqlite3ExprAlloc ( db , op , & x , 0 ) ; location: 846 cross_layer: 2 file: testCode/expr.c
pExpr = sqlite3PExpr ( pParse , TK_DOT , pLeft , pRight ); location: 5106 cross_layer: 1 file: select.c
Expr *sqlite3PExpr(
Parse *pParse,          /* Parsing context */
int op,                 /* Expression opcode */
Expr *pLeft,            /* Left operand */
Expr *pRight            /* Right operand */
) location: 890 cross_layer: 2 file: testCode/expr.c
p = sqlite3DbMallocRawNN ( pParse -> db , sizeof ( Expr ) ); location: 892 cross_layer: 2 file: testCode/expr.c
if ( p )  location: 893 cross_layer: 2 file: testCode/expr.c
memset ( p , 0 , sizeof ( Expr ) ); location: 894 cross_layer: 2 file: testCode/expr.c
p -> op = op & 0xff; location: 895 cross_layer: 2 file: testCode/expr.c
p -> iAgg = - 1; location: 896 cross_layer: 2 file: testCode/expr.c
sqlite3ExprAttachSubtrees ( pParse -> db , p , pLeft , pRight ); location: 897 cross_layer: 2 file: testCode/expr.c
sqlite3ExprCheckHeight ( pParse , p -> nHeight ); location: 898 cross_layer: 2 file: testCode/expr.c
sqlite3ExprDelete ( pParse -> db , pLeft ); location: 900 cross_layer: 2 file: testCode/expr.c
sqlite3ExprDelete ( pParse -> db , pRight ); location: 901 cross_layer: 2 file: testCode/expr.c
return p ; location: 903 cross_layer: 2 file: testCode/expr.c
if ( zSchemaName )  location: 5107 cross_layer: 1 file: select.c
pLeft = sqlite3Expr ( db , TK_ID , zSchemaName ); location: 5108 cross_layer: 1 file: select.c
Expr *sqlite3Expr(
sqlite3 *db,            /* Handle for sqlite3DbMallocZero() (may be null) */
int op,                 /* Expression opcode */
const char *zToken      /* Token argument.  Might be NULL */
) location: 842 cross_layer: 2 file: testCode/expr.c
x . z = zToken; location: 844 cross_layer: 2 file: testCode/expr.c
x . n = sqlite3Strlen30 ( zToken ); location: 845 cross_layer: 2 file: testCode/expr.c
return sqlite3ExprAlloc ( db , op , & x , 0 ) ; location: 846 cross_layer: 2 file: testCode/expr.c
pExpr = sqlite3PExpr ( pParse , TK_DOT , pLeft , pExpr ); location: 5109 cross_layer: 1 file: select.c
Expr *sqlite3PExpr(
Parse *pParse,          /* Parsing context */
int op,                 /* Expression opcode */
Expr *pLeft,            /* Left operand */
Expr *pRight            /* Right operand */
) location: 890 cross_layer: 2 file: testCode/expr.c
p = sqlite3DbMallocRawNN ( pParse -> db , sizeof ( Expr ) ); location: 892 cross_layer: 2 file: testCode/expr.c
if ( p )  location: 893 cross_layer: 2 file: testCode/expr.c
memset ( p , 0 , sizeof ( Expr ) ); location: 894 cross_layer: 2 file: testCode/expr.c
p -> op = op & 0xff; location: 895 cross_layer: 2 file: testCode/expr.c
p -> iAgg = - 1; location: 896 cross_layer: 2 file: testCode/expr.c
sqlite3ExprAttachSubtrees ( pParse -> db , p , pLeft , pRight ); location: 897 cross_layer: 2 file: testCode/expr.c
sqlite3ExprCheckHeight ( pParse , p -> nHeight ); location: 898 cross_layer: 2 file: testCode/expr.c
sqlite3ExprDelete ( pParse -> db , pLeft ); location: 900 cross_layer: 2 file: testCode/expr.c
sqlite3ExprDelete ( pParse -> db , pRight ); location: 901 cross_layer: 2 file: testCode/expr.c
return p ; location: 903 cross_layer: 2 file: testCode/expr.c
zColname = sqlite3MPrintf ( db , "%s.%s" , zTabName , zName ); location: 5112 cross_layer: 1 file: select.c
char *sqlite3MPrintf(sqlite3 *db, const char *zFormat, ...) location: 1138 cross_layer: 2 file: testCode/printf.c
va_start ( ap , zFormat ); location: 1141 cross_layer: 2 file: testCode/printf.c
z = sqlite3VMPrintf ( db , zFormat , ap ); location: 1142 cross_layer: 2 file: testCode/printf.c
char *sqlite3VMPrintf(sqlite3 *db, const char *zFormat, va_list ap) location: 1118 cross_layer: 3 file: testCode/printf.c
assert ( db != 0 ); location: 1122 cross_layer: 3 file: testCode/printf.c
sqlite3StrAccumInit ( & acc , db , zBase , sizeof ( zBase ) , db -> aLimit [ SQLITE_LIMIT_LENGTH ] ); location: 1123 cross_layer: 3 file: testCode/printf.c
sqlite3_str_vappendf ( & acc , zFormat , ap ); location: 1126 cross_layer: 3 file: testCode/printf.c
sqlite3OomFault ( db ); location: 1129 cross_layer: 3 file: testCode/printf.c
char *sqlite3VMPrintf(sqlite3 *db, const char *zFormat, va_list ap) location: 1118 cross_layer: 3 file: testCode/printf.c
assert ( db != 0 ); location: 1122 cross_layer: 3 file: testCode/printf.c
sqlite3StrAccumInit ( & acc , db , zBase , sizeof ( zBase ) , db -> aLimit [ SQLITE_LIMIT_LENGTH ] ); location: 1123 cross_layer: 3 file: testCode/printf.c
sqlite3_str_vappendf ( & acc , zFormat , ap ); location: 1126 cross_layer: 3 file: testCode/printf.c
sqlite3OomFault ( db ); location: 1129 cross_layer: 3 file: testCode/printf.c
return z ; location: 1144 cross_layer: 2 file: testCode/printf.c
zToFree = zColname; location: 5113 cross_layer: 1 file: select.c
pExpr = pRight; location: 5116 cross_layer: 1 file: select.c
pNew = sqlite3ExprListAppend ( pParse , pNew , pExpr ); location: 5118 cross_layer: 1 file: select.c
ExprList *sqlite3ExprListAppend(
Parse *pParse,          /* Parsing context */
ExprList *pList,        /* List to which to append. Might be NULL */
Expr *pExpr             /* Expression to be appended. Might be NULL */
) location: 1593 cross_layer: 2 file: testCode/expr.c
sqlite3 * db = pParse -> db ; location: 1595 cross_layer: 2 file: testCode/expr.c
assert ( db != 0 ); location: 1596 cross_layer: 2 file: testCode/expr.c
if ( pList == 0 )  location: 1597 cross_layer: 2 file: testCode/expr.c
pList = sqlite3DbMallocRawNN ( db , sizeof ( ExprList ) ); location: 1598 cross_layer: 2 file: testCode/expr.c
void *sqlite3DbMallocRawNN(sqlite3 *db, u64 n) location: 556 cross_layer: 3 file: testCode/malloc.c
assert ( db != 0 ); location: 559 cross_layer: 3 file: testCode/malloc.c
assert ( sqlite3_mutex_held ( db -> mutex ) ); location: 560 cross_layer: 3 file: testCode/malloc.c
assert ( db -> pnBytesFreed == 0 ); location: 561 cross_layer: 3 file: testCode/malloc.c
if ( n > db -> lookaside . sz )  location: 562 cross_layer: 3 file: testCode/malloc.c
if ( db -> lookaside . bDisable )  location: 563 cross_layer: 3 file: testCode/malloc.c
return db -> mallocFailed ? 0 : dbMallocRawFinish ( db , n ) ; location: 564 cross_layer: 3 file: testCode/malloc.c
db -> lookaside . anStat [ 1 ] ++; location: 566 cross_layer: 3 file: testCode/malloc.c
if ( ( pBuf = db -> lookaside . pFree ) != 0 )  location: 567 cross_layer: 3 file: testCode/malloc.c
db -> lookaside . pFree = pBuf -> pNext; location: 568 cross_layer: 3 file: testCode/malloc.c
db -> lookaside . anStat [ 0 ] ++; location: 569 cross_layer: 3 file: testCode/malloc.c
return ( void * ) pBuf ; location: 570 cross_layer: 3 file: testCode/malloc.c
if ( ( pBuf = db -> lookaside . pInit ) != 0 )  location: 571 cross_layer: 3 file: testCode/malloc.c
db -> lookaside . pInit = pBuf -> pNext; location: 572 cross_layer: 3 file: testCode/malloc.c
db -> lookaside . anStat [ 0 ] ++; location: 573 cross_layer: 3 file: testCode/malloc.c
return ( void * ) pBuf ; location: 574 cross_layer: 3 file: testCode/malloc.c
db -> lookaside . anStat [ 2 ] ++; location: 576 cross_layer: 3 file: testCode/malloc.c
return dbMallocRawFinish ( db , n ) ; location: 586 cross_layer: 3 file: testCode/malloc.c
if ( pList == 0 )  location: 1599 cross_layer: 2 file: testCode/expr.c
pList -> nExpr = 0; location: 1602 cross_layer: 2 file: testCode/expr.c
if ( ( pList -> nExpr & ( pList -> nExpr - 1 ) ) == 0 )  location: 1603 cross_layer: 2 file: testCode/expr.c
pNew = sqlite3DbRealloc ( db , pList , sizeof ( * pList ) + ( 2 * ( sqlite3_int64 ) pList -> nExpr - 1 ) * sizeof ( pList -> a [ 0 ] ) ); location: 1605 cross_layer: 2 file: testCode/expr.c
void *sqlite3DbRealloc(sqlite3 *db, void *p, u64 n) location: 596 cross_layer: 3 file: testCode/malloc.c
assert ( db != 0 ); location: 597 cross_layer: 3 file: testCode/malloc.c
if ( p == 0 )  location: 598 cross_layer: 3 file: testCode/malloc.c
return sqlite3DbMallocRawNN ( db , n ) ; location: 598 cross_layer: 3 file: testCode/malloc.c
void *sqlite3DbMallocRawNN(sqlite3 *db, u64 n) location: 556 cross_layer: 4 file: testCode/malloc.c
assert ( db != 0 ); location: 559 cross_layer: 4 file: testCode/malloc.c
assert ( sqlite3_mutex_held ( db -> mutex ) ); location: 560 cross_layer: 4 file: testCode/malloc.c
assert ( db -> pnBytesFreed == 0 ); location: 561 cross_layer: 4 file: testCode/malloc.c
if ( n > db -> lookaside . sz )  location: 562 cross_layer: 4 file: testCode/malloc.c
if ( db -> lookaside . bDisable )  location: 563 cross_layer: 4 file: testCode/malloc.c
return db -> mallocFailed ? 0 : dbMallocRawFinish ( db , n ) ; location: 564 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 1 ] ++; location: 566 cross_layer: 4 file: testCode/malloc.c
if ( ( pBuf = db -> lookaside . pFree ) != 0 )  location: 567 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . pFree = pBuf -> pNext; location: 568 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 0 ] ++; location: 569 cross_layer: 4 file: testCode/malloc.c
return ( void * ) pBuf ; location: 570 cross_layer: 4 file: testCode/malloc.c
if ( ( pBuf = db -> lookaside . pInit ) != 0 )  location: 571 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . pInit = pBuf -> pNext; location: 572 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 0 ] ++; location: 573 cross_layer: 4 file: testCode/malloc.c
return ( void * ) pBuf ; location: 574 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 2 ] ++; location: 576 cross_layer: 4 file: testCode/malloc.c
return dbMallocRawFinish ( db , n ) ; location: 586 cross_layer: 4 file: testCode/malloc.c
assert ( sqlite3_mutex_held ( db -> mutex ) ); location: 599 cross_layer: 3 file: testCode/malloc.c
int sqlite3_mutex_held(sqlite3_mutex *p) location: 350 cross_layer: 4 file: testCode/mutex.c
assert ( p == 0 || sqlite3GlobalConfig . mutex . xMutexHeld ); location: 351 cross_layer: 4 file: testCode/mutex.c
return p == 0 || sqlite3GlobalConfig . mutex . xMutexHeld ( p ) ; location: 352 cross_layer: 4 file: testCode/mutex.c
if ( isLookaside ( db , p ) && n <= db -> lookaside . szTrue )  location: 600 cross_layer: 3 file: testCode/malloc.c
static int isLookaside(sqlite3 *db, void *p) location: 320 cross_layer: 4 file: testCode/malloc.c
return SQLITE_WITHIN ( p , db -> lookaside . pStart , db -> lookaside . pEnd ) ; location: 321 cross_layer: 4 file: testCode/malloc.c
return p ; location: 600 cross_layer: 3 file: testCode/malloc.c
return dbReallocFinish ( db , p , n ) ; location: 601 cross_layer: 3 file: testCode/malloc.c
static SQLITE_NOINLINE void *dbReallocFinish(sqlite3 *db, void *p, u64 n) location: 603 cross_layer: 4 file: testCode/malloc.c
assert ( db != 0 ); location: 605 cross_layer: 4 file: testCode/malloc.c
assert ( p != 0 ); location: 606 cross_layer: 4 file: testCode/malloc.c
if ( db -> mallocFailed == 0 )  location: 607 cross_layer: 4 file: testCode/malloc.c
if ( isLookaside ( db , p ) )  location: 608 cross_layer: 4 file: testCode/malloc.c
pNew = sqlite3DbMallocRawNN ( db , n ); location: 609 cross_layer: 4 file: testCode/malloc.c
if ( pNew )  location: 610 cross_layer: 4 file: testCode/malloc.c
memcpy ( pNew , p , db -> lookaside . szTrue ); location: 611 cross_layer: 4 file: testCode/malloc.c
sqlite3DbFree ( db , p ); location: 612 cross_layer: 4 file: testCode/malloc.c
assert ( sqlite3MemdebugHasType ( p , ( MEMTYPE_LOOKASIDE | MEMTYPE_HEAP ) ) ); location: 615 cross_layer: 4 file: testCode/malloc.c
assert ( sqlite3MemdebugNoType ( p , ( u8 ) ~ ( MEMTYPE_LOOKASIDE | MEMTYPE_HEAP ) ) ); location: 616 cross_layer: 4 file: testCode/malloc.c
sqlite3MemdebugSetType ( p , MEMTYPE_HEAP ); location: 617 cross_layer: 4 file: testCode/malloc.c
pNew = sqlite3_realloc64 ( p , n ); location: 618 cross_layer: 4 file: testCode/malloc.c
if ( ! pNew )  location: 619 cross_layer: 4 file: testCode/malloc.c
sqlite3OomFault ( db ); location: 620 cross_layer: 4 file: testCode/malloc.c
sqlite3MemdebugSetType ( pNew , ( db -> lookaside . bDisable == 0 ? MEMTYPE_LOOKASIDE : MEMTYPE_HEAP ) ); location: 622 cross_layer: 4 file: testCode/malloc.c
return pNew ; location: 626 cross_layer: 4 file: testCode/malloc.c
if ( pNew == 0 )  location: 1607 cross_layer: 2 file: testCode/expr.c
pList = pNew; location: 1610 cross_layer: 2 file: testCode/expr.c
pItem = & pList -> a [ pList -> nExpr ++ ]; location: 1612 cross_layer: 2 file: testCode/expr.c
assert ( offsetof ( struct ExprList_item , zName ) == sizeof ( pItem -> pExpr ) )
assert ( offsetof ( struct ExprList_item , pExpr ) == 0 )
memset ( & pItem -> zName , 0 , sizeof ( * pItem ) - offsetof ( struct ExprList_item , zName ) ) location: 1615 cross_layer: 2 file: testCode/expr.c
pItem -> pExpr = pExpr; location: 1616 cross_layer: 2 file: testCode/expr.c
return pList ; location: 1617 cross_layer: 2 file: testCode/expr.c
sqlite3ExprDelete ( db , pExpr ); location: 1621 cross_layer: 2 file: testCode/expr.c
void sqlite3ExprDelete(sqlite3 *db, Expr *p) location: 1097 cross_layer: 3 file: testCode/expr.c
if ( p )  location: 1098 cross_layer: 3 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p ); location: 1098 cross_layer: 3 file: testCode/expr.c
sqlite3ExprListDelete ( db , pList ); location: 1622 cross_layer: 2 file: testCode/expr.c
void sqlite3ExprListDelete(sqlite3 *db, ExprList *pList) location: 1815 cross_layer: 3 file: testCode/expr.c
if ( pList )  location: 1816 cross_layer: 3 file: testCode/expr.c
exprListDeleteNN ( db , pList ); location: 1816 cross_layer: 3 file: testCode/expr.c
static SQLITE_NOINLINE void exprListDeleteNN(sqlite3 *db, ExprList *pList) location: 1803 cross_layer: 3 file: testCode/expr.c
int i = pList -> nExpr ; location: 1804 cross_layer: 3 file: testCode/expr.c
struct ExprList_item * pItem = pList -> a ; location: 1805 cross_layer: 3 file: testCode/expr.c
assert ( pList -> nExpr > 0 ); location: 1806 cross_layer: 3 file: testCode/expr.c
sqlite3ExprDelete ( db , pItem -> pExpr ); location: 1808 cross_layer: 3 file: testCode/expr.c
void sqlite3ExprDelete(sqlite3 *db, Expr *p) location: 1097 cross_layer: 4 file: testCode/expr.c
if ( p )  location: 1098 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDeleteNN ( db , p ); location: 1098 cross_layer: 4 file: testCode/expr.c
sqlite3DbFree ( db , pItem -> zName ); location: 1809 cross_layer: 3 file: testCode/expr.c
void sqlite3DbFree(sqlite3 *db, void *p) location: 415 cross_layer: 4 file: testCode/malloc.c
assert ( db == 0 || sqlite3_mutex_held ( db -> mutex ) ); location: 416 cross_layer: 4 file: testCode/malloc.c
if ( p )  location: 417 cross_layer: 4 file: testCode/malloc.c
sqlite3DbFreeNN ( db , p ); location: 417 cross_layer: 4 file: testCode/malloc.c
sqlite3DbFree ( db , pItem -> zSpan ); location: 1810 cross_layer: 3 file: testCode/expr.c
void sqlite3DbFree(sqlite3 *db, void *p) location: 415 cross_layer: 4 file: testCode/malloc.c
assert ( db == 0 || sqlite3_mutex_held ( db -> mutex ) ); location: 416 cross_layer: 4 file: testCode/malloc.c
if ( p )  location: 417 cross_layer: 4 file: testCode/malloc.c
sqlite3DbFreeNN ( db , p ); location: 417 cross_layer: 4 file: testCode/malloc.c
pItem ++; location: 1811 cross_layer: 3 file: testCode/expr.c
while ( -- i > 0 )  location: 1812 cross_layer: 3 file: testCode/expr.c
sqlite3DbFreeNN ( db , pList ); location: 1813 cross_layer: 3 file: testCode/expr.c
void sqlite3DbFreeNN(sqlite3 *db, void *p) location: 390 cross_layer: 4 file: testCode/malloc.c
assert ( db == 0 || sqlite3_mutex_held ( db -> mutex ) ); location: 391 cross_layer: 4 file: testCode/malloc.c
assert ( p != 0 ); location: 392 cross_layer: 4 file: testCode/malloc.c
if ( db )  location: 393 cross_layer: 4 file: testCode/malloc.c
if ( db -> pnBytesFreed )  location: 394 cross_layer: 4 file: testCode/malloc.c
measureAllocationSize ( db , p ); location: 395 cross_layer: 4 file: testCode/malloc.c
if ( isLookaside ( db , p ) )  location: 398 cross_layer: 4 file: testCode/malloc.c
LookasideSlot * pBuf = ( LookasideSlot * ) p ; location: 399 cross_layer: 4 file: testCode/malloc.c
memset ( p , 0xaa , db -> lookaside . szTrue ); location: 402 cross_layer: 4 file: testCode/malloc.c
pBuf -> pNext = db -> lookaside . pFree; location: 404 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . pFree = pBuf; location: 405 cross_layer: 4 file: testCode/malloc.c
assert ( sqlite3MemdebugHasType ( p , ( MEMTYPE_LOOKASIDE | MEMTYPE_HEAP ) ) ); location: 409 cross_layer: 4 file: testCode/malloc.c
assert ( sqlite3MemdebugNoType ( p , ( u8 ) ~ ( MEMTYPE_LOOKASIDE | MEMTYPE_HEAP ) ) ); location: 410 cross_layer: 4 file: testCode/malloc.c
assert ( db != 0 || sqlite3MemdebugNoType ( p , MEMTYPE_LOOKASIDE ) ); location: 411 cross_layer: 4 file: testCode/malloc.c
sqlite3MemdebugSetType ( p , MEMTYPE_HEAP ); location: 412 cross_layer: 4 file: testCode/malloc.c
static SQLITE_NOINLINE void exprListDeleteNN(sqlite3 *db, ExprList *pList) location: 1803 cross_layer: 4 file: testCode/expr.c
int i = pList -> nExpr ; location: 1804 cross_layer: 4 file: testCode/expr.c
struct ExprList_item * pItem = pList -> a ; location: 1805 cross_layer: 4 file: testCode/expr.c
assert ( pList -> nExpr > 0 ); location: 1806 cross_layer: 4 file: testCode/expr.c
sqlite3ExprDelete ( db , pItem -> pExpr ); location: 1808 cross_layer: 4 file: testCode/expr.c
sqlite3DbFree ( db , pItem -> zName ); location: 1809 cross_layer: 4 file: testCode/expr.c
sqlite3DbFree ( db , pItem -> zSpan ); location: 1810 cross_layer: 4 file: testCode/expr.c
pItem ++; location: 1811 cross_layer: 4 file: testCode/expr.c
while ( -- i > 0 )  location: 1812 cross_layer: 4 file: testCode/expr.c
sqlite3DbFreeNN ( db , pList ); location: 1813 cross_layer: 4 file: testCode/expr.c
sqlite3TokenInit ( & sColname , zColname ); location: 5119 cross_layer: 1 file: select.c
void sqlite3TokenInit(Token *p, char *z) location: 260 cross_layer: 2 file: testCode/util.c
p -> z = z; location: 261 cross_layer: 2 file: testCode/util.c
p -> n = sqlite3Strlen30 ( z ); location: 262 cross_layer: 2 file: testCode/util.c
int sqlite3Strlen30(const char *z) location: 77 cross_layer: 3 file: testCode/util.c
if ( z == 0 )  location: 78 cross_layer: 3 file: testCode/util.c
return 0x3fffffff & ( int ) strlen ( z ) ; location: 79 cross_layer: 3 file: testCode/util.c
sqlite3ExprListSetName ( pParse , pNew , & sColname , 0 ); location: 5120 cross_layer: 1 file: select.c
void sqlite3ExprListSetName(
Parse *pParse,          /* Parsing context */
ExprList *pList,        /* List to which to add the span. */
Token *pName,           /* Name to be added */
int dequote             /* True to cause the name to be dequoted */
) location: 1744 cross_layer: 2 file: testCode/expr.c
assert ( pList != 0 || pParse -> db -> mallocFailed != 0 ); location: 1745 cross_layer: 2 file: testCode/expr.c
if ( pList )  location: 1746 cross_layer: 2 file: testCode/expr.c
assert ( pList -> nExpr > 0 ); location: 1748 cross_layer: 2 file: testCode/expr.c
pItem = & pList -> a [ pList -> nExpr - 1 ]; location: 1749 cross_layer: 2 file: testCode/expr.c
assert ( pItem -> zName == 0 ); location: 1750 cross_layer: 2 file: testCode/expr.c
pItem -> zName = sqlite3DbStrNDup ( pParse -> db , pName -> z , pName -> n ); location: 1751 cross_layer: 2 file: testCode/expr.c
char *sqlite3DbStrNDup(sqlite3 *db, const char *z, u64 n) location: 662 cross_layer: 3 file: testCode/malloc.c
assert ( db != 0 ); location: 664 cross_layer: 3 file: testCode/malloc.c
if ( z == 0 )  location: 665 cross_layer: 3 file: testCode/malloc.c
assert ( ( n & 0x7fffffff ) == n ); location: 668 cross_layer: 3 file: testCode/malloc.c
zNew = sqlite3DbMallocRawNN ( db , n + 1 ); location: 669 cross_layer: 3 file: testCode/malloc.c
void *sqlite3DbMallocRawNN(sqlite3 *db, u64 n) location: 556 cross_layer: 4 file: testCode/malloc.c
assert ( db != 0 ); location: 559 cross_layer: 4 file: testCode/malloc.c
assert ( sqlite3_mutex_held ( db -> mutex ) ); location: 560 cross_layer: 4 file: testCode/malloc.c
assert ( db -> pnBytesFreed == 0 ); location: 561 cross_layer: 4 file: testCode/malloc.c
if ( n > db -> lookaside . sz )  location: 562 cross_layer: 4 file: testCode/malloc.c
if ( db -> lookaside . bDisable )  location: 563 cross_layer: 4 file: testCode/malloc.c
return db -> mallocFailed ? 0 : dbMallocRawFinish ( db , n ) ; location: 564 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 1 ] ++; location: 566 cross_layer: 4 file: testCode/malloc.c
if ( ( pBuf = db -> lookaside . pFree ) != 0 )  location: 567 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . pFree = pBuf -> pNext; location: 568 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 0 ] ++; location: 569 cross_layer: 4 file: testCode/malloc.c
return ( void * ) pBuf ; location: 570 cross_layer: 4 file: testCode/malloc.c
if ( ( pBuf = db -> lookaside . pInit ) != 0 )  location: 571 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . pInit = pBuf -> pNext; location: 572 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 0 ] ++; location: 573 cross_layer: 4 file: testCode/malloc.c
return ( void * ) pBuf ; location: 574 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 2 ] ++; location: 576 cross_layer: 4 file: testCode/malloc.c
return dbMallocRawFinish ( db , n ) ; location: 586 cross_layer: 4 file: testCode/malloc.c
if ( zNew )  location: 670 cross_layer: 3 file: testCode/malloc.c
memcpy ( zNew , z , ( size_t ) n ); location: 671 cross_layer: 3 file: testCode/malloc.c
zNew [ n ] = 0; location: 672 cross_layer: 3 file: testCode/malloc.c
return zNew ; location: 674 cross_layer: 3 file: testCode/malloc.c
if ( dequote )  location: 1752 cross_layer: 2 file: testCode/expr.c
sqlite3Dequote ( pItem -> zName ); location: 1752 cross_layer: 2 file: testCode/expr.c
void sqlite3Dequote(char *z) location: 229 cross_layer: 3 file: testCode/util.c
if ( z == 0 )  location: 232 cross_layer: 3 file: testCode/util.c
quote = z [ 0 ]; location: 233 cross_layer: 3 file: testCode/util.c
if ( ! sqlite3Isquote ( quote ) )  location: 234 cross_layer: 3 file: testCode/util.c
if ( quote == '[' )  location: 235 cross_layer: 3 file: testCode/util.c
assert ( z [ i ] ); location: 237 cross_layer: 3 file: testCode/util.c
if ( z [ i ] == quote )  location: 238 cross_layer: 3 file: testCode/util.c
if ( z [ i + 1 ] == quote )  location: 239 cross_layer: 3 file: testCode/util.c
z [ j ++ ] = quote; location: 240 cross_layer: 3 file: testCode/util.c
z [ j ++ ] = z [ i ]; location: 246 cross_layer: 3 file: testCode/util.c
z [ j ] = 0; location: 249 cross_layer: 3 file: testCode/util.c
sqlite3RenameTokenMap ( pParse , ( void * ) pItem -> zName , pName ); location: 1754 cross_layer: 2 file: testCode/expr.c
void *sqlite3RenameTokenMap(Parse *pParse, void *pPtr, Token *pToken) location: 696 cross_layer: 3 file: testCode/alter.c
assert ( pPtr || pParse -> db -> mallocFailed ); location: 698 cross_layer: 3 file: testCode/alter.c
renameTokenCheckAll ( pParse , pPtr ); location: 699 cross_layer: 3 file: testCode/alter.c
static void renameTokenCheckAll(Parse *pParse, void *pPtr) location: 668 cross_layer: 4 file: testCode/alter.c
if ( pParse -> nErr == 0 && pParse -> db -> mallocFailed == 0 )  location: 669 cross_layer: 4 file: testCode/alter.c
for(p=pParse->pRename; p; p=p->pNext) location: 672 cross_layer: 4 file: testCode/alter.c
if ( p -> p )  location: 673 cross_layer: 4 file: testCode/alter.c
assert ( p -> p != pPtr ); location: 674 cross_layer: 4 file: testCode/alter.c
i += * ( u8 * ) ( p -> p ); location: 675 cross_layer: 4 file: testCode/alter.c
if ( pParse -> eParseMode != PARSE_MODE_UNMAP )  location: 700 cross_layer: 3 file: testCode/alter.c
pNew = sqlite3DbMallocZero ( pParse -> db , sizeof ( RenameToken ) ); location: 701 cross_layer: 3 file: testCode/alter.c
void *sqlite3DbMallocZero(sqlite3 *db, u64 n) location: 505 cross_layer: 4 file: testCode/malloc.c
testcase ( db == 0 ); location: 507 cross_layer: 4 file: testCode/malloc.c
p = sqlite3DbMallocRaw ( db , n ); location: 508 cross_layer: 4 file: testCode/malloc.c
if ( p )  location: 509 cross_layer: 4 file: testCode/malloc.c
memset ( p , 0 , ( size_t ) n ); location: 509 cross_layer: 4 file: testCode/malloc.c
return p ; location: 510 cross_layer: 4 file: testCode/malloc.c
if ( pNew )  location: 702 cross_layer: 3 file: testCode/alter.c
pNew -> p = pPtr; location: 703 cross_layer: 3 file: testCode/alter.c
pNew -> t = * pToken; location: 704 cross_layer: 3 file: testCode/alter.c
pNew -> pNext = pParse -> pRename; location: 705 cross_layer: 3 file: testCode/alter.c
pParse -> pRename = pNew; location: 706 cross_layer: 3 file: testCode/alter.c
return pPtr ; location: 710 cross_layer: 3 file: testCode/alter.c
if ( pNew && ( p -> selFlags & SF_NestedFrom ) != 0 )  location: 5121 cross_layer: 1 file: select.c
struct ExprList_item * pX = & pNew -> a [ pNew -> nExpr - 1 ] ; location: 5122 cross_layer: 1 file: select.c
if ( pSub )  location: 5123 cross_layer: 1 file: select.c
pX -> zSpan = sqlite3DbStrDup ( db , pSub -> pEList -> a [ j ] . zSpan ); location: 5124 cross_layer: 1 file: select.c
char *sqlite3DbStrDup(sqlite3 *db, const char *z) location: 649 cross_layer: 2 file: testCode/malloc.c
if ( z == 0 )  location: 652 cross_layer: 2 file: testCode/malloc.c
n = strlen ( z ) + 1; location: 655 cross_layer: 2 file: testCode/malloc.c
zNew = sqlite3DbMallocRaw ( db , n ); location: 656 cross_layer: 2 file: testCode/malloc.c
void *sqlite3DbMallocRaw(sqlite3 *db, u64 n) location: 549 cross_layer: 3 file: testCode/malloc.c
if ( db )  location: 551 cross_layer: 3 file: testCode/malloc.c
return sqlite3DbMallocRawNN ( db , n ) ; location: 551 cross_layer: 3 file: testCode/malloc.c
void *sqlite3DbMallocRawNN(sqlite3 *db, u64 n) location: 556 cross_layer: 4 file: testCode/malloc.c
assert ( db != 0 ); location: 559 cross_layer: 4 file: testCode/malloc.c
assert ( sqlite3_mutex_held ( db -> mutex ) ); location: 560 cross_layer: 4 file: testCode/malloc.c
assert ( db -> pnBytesFreed == 0 ); location: 561 cross_layer: 4 file: testCode/malloc.c
if ( n > db -> lookaside . sz )  location: 562 cross_layer: 4 file: testCode/malloc.c
if ( db -> lookaside . bDisable )  location: 563 cross_layer: 4 file: testCode/malloc.c
return db -> mallocFailed ? 0 : dbMallocRawFinish ( db , n ) ; location: 564 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 1 ] ++; location: 566 cross_layer: 4 file: testCode/malloc.c
if ( ( pBuf = db -> lookaside . pFree ) != 0 )  location: 567 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . pFree = pBuf -> pNext; location: 568 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 0 ] ++; location: 569 cross_layer: 4 file: testCode/malloc.c
return ( void * ) pBuf ; location: 570 cross_layer: 4 file: testCode/malloc.c
if ( ( pBuf = db -> lookaside . pInit ) != 0 )  location: 571 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . pInit = pBuf -> pNext; location: 572 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 0 ] ++; location: 573 cross_layer: 4 file: testCode/malloc.c
return ( void * ) pBuf ; location: 574 cross_layer: 4 file: testCode/malloc.c
db -> lookaside . anStat [ 2 ] ++; location: 576 cross_layer: 4 file: testCode/malloc.c
return dbMallocRawFinish ( db , n ) ; location: 586 cross_layer: 4 file: testCode/malloc.c
p = sqlite3Malloc ( n ); location: 552 cross_layer: 3 file: testCode/malloc.c
void *sqlite3Malloc(u64 n) location: 278 cross_layer: 4 file: testCode/malloc.c
if ( n == 0 || n >= 0x7fffff00 )  location: 280 cross_layer: 4 file: testCode/malloc.c
mallocWithAlarm ( ( int ) n , & p ); location: 289 cross_layer: 4 file: testCode/malloc.c
p = sqlite3GlobalConfig . m . xMalloc ( ( int ) n ); location: 292 cross_layer: 4 file: testCode/malloc.c
assert ( EIGHT_BYTE_ALIGNMENT ( p ) ); location: 294 cross_layer: 4 file: testCode/malloc.c
return p ; location: 295 cross_layer: 4 file: testCode/malloc.c
sqlite3MemdebugSetType ( p , MEMTYPE_HEAP ); location: 553 cross_layer: 3 file: testCode/malloc.c
void sqlite3MemdebugSetType(void *p, u8 eType) location: 381 cross_layer: 4 file: testCode/mem2.c
if ( p && sqlite3GlobalConfig . m . xMalloc == sqlite3MemMalloc )  location: 382 cross_layer: 4 file: testCode/mem2.c
pHdr = sqlite3MemsysGetHeader ( p ); location: 384 cross_layer: 4 file: testCode/mem2.c
assert ( pHdr -> iForeGuard == FOREGUARD ); location: 385 cross_layer: 4 file: testCode/mem2.c
pHdr -> eType = eType; location: 386 cross_layer: 4 file: testCode/mem2.c
return p ; location: 554 cross_layer: 3 file: testCode/malloc.c
if ( zNew )  location: 657 cross_layer: 2 file: testCode/malloc.c
memcpy ( zNew , z , n ); location: 658 cross_layer: 2 file: testCode/malloc.c
return zNew ; location: 660 cross_layer: 2 file: testCode/malloc.c
testcase ( pX -> zSpan == 0 ); location: 5125 cross_layer: 1 file: select.c
pX -> zSpan = sqlite3MPrintf ( db , "%s.%s.%s" , zSchemaName , zTabName , zColname ); location: 5127 cross_layer: 1 file: select.c
char *sqlite3MPrintf(sqlite3 *db, const char *zFormat, ...) location: 1138 cross_layer: 2 file: testCode/printf.c
va_start ( ap , zFormat ); location: 1141 cross_layer: 2 file: testCode/printf.c
z = sqlite3VMPrintf ( db , zFormat , ap ); location: 1142 cross_layer: 2 file: testCode/printf.c
return z ; location: 1144 cross_layer: 2 file: testCode/printf.c
testcase ( pX -> zSpan == 0 ); location: 5129 cross_layer: 1 file: select.c
pX -> bSpanIsTab = 1; location: 5131 cross_layer: 1 file: select.c
sqlite3DbFree ( db , zToFree ); location: 5133 cross_layer: 1 file: select.c
void sqlite3DbFree(sqlite3 *db, void *p) location: 415 cross_layer: 2 file: testCode/malloc.c
assert ( db == 0 || sqlite3_mutex_held ( db -> mutex ) ); location: 416 cross_layer: 2 file: testCode/malloc.c
if ( p )  location: 417 cross_layer: 2 file: testCode/malloc.c
sqlite3DbFreeNN ( db , p ); location: 417 cross_layer: 2 file: testCode/malloc.c
sqlite3ExprListDelete ( db , pEList ); location: 5145 cross_layer: 1 file: select.c
void sqlite3ExprListDelete(sqlite3 *db, ExprList *pList) location: 1815 cross_layer: 2 file: testCode/expr.c
if ( pList )  location: 1816 cross_layer: 2 file: testCode/expr.c
exprListDeleteNN ( db , pList ); location: 1816 cross_layer: 2 file: testCode/expr.c
p -> pEList = pNew; location: 5146 cross_layer: 1 file: select.c
if ( p -> pEList )  location: 5148 cross_layer: 1 file: select.c
if ( p -> pEList -> nExpr > db -> aLimit [ SQLITE_LIMIT_COLUMN ] )  location: 5149 cross_layer: 1 file: select.c
p -> selFlags |= SF_ComplexResult; location: 5154 cross_layer: 1 file: select.c
------------------------------
