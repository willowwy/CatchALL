1 @@ testCode/CVE-2019-19959_NVD-CWE-Other_d8f2d46cbc9925e034a68aaaf60aad788d9373c1_zipfile.c_OLD.c @@ zipfileStep @@ 2036 @@ ['nName'] @@ {pCtx, apVal, p, pMode, pMethod}
void zipfileStep(sqlite3_context *pCtx, int nVal, sqlite3_value **apVal) location: 1921 cross_layer: 1 file: zipfile.c
ZipfileCtx * p ; location: 1922 cross_layer: 1 file: zipfile.c
sqlite3_value * pMode = 0 ; location: 1926 cross_layer: 1 file: zipfile.c
sqlite3_value * pMethod = 0 ; location: 1929 cross_layer: 1 file: zipfile.c
int bIsDir = 0 ; location: 1931 cross_layer: 1 file: zipfile.c
int iMethod = - 1 ; location: 1936 cross_layer: 1 file: zipfile.c
p = ( ZipfileCtx * ) sqlite3_aggregate_context ( pCtx , sizeof ( ZipfileCtx ) ); location: 1950 cross_layer: 1 file: zipfile.c
if ( p == 0 )  location: 1951 cross_layer: 1 file: zipfile.c
if ( nVal != 2 && nVal != 4 && nVal != 5 )  location: 1954 cross_layer: 1 file: zipfile.c
pName = apVal [ 0 ]; location: 1959 cross_layer: 1 file: zipfile.c
if ( nVal == 2 )  location: 1960 cross_layer: 1 file: zipfile.c
pData = apVal [ 1 ]; location: 1961 cross_layer: 1 file: zipfile.c
pMode = apVal [ 1 ]; location: 1963 cross_layer: 1 file: zipfile.c
pData = apVal [ 3 ]; location: 1965 cross_layer: 1 file: zipfile.c
if ( nVal == 5 )  location: 1966 cross_layer: 1 file: zipfile.c
pMethod = apVal [ 4 ]; location: 1967 cross_layer: 1 file: zipfile.c
zName = ( char * ) sqlite3_value_text ( pName ); location: 1972 cross_layer: 1 file: zipfile.c
nName = sqlite3_value_bytes ( pName ); location: 1973 cross_layer: 1 file: zipfile.c
if ( zName == 0 )  location: 1974 cross_layer: 1 file: zipfile.c
if ( pMethod && SQLITE_NULL != sqlite3_value_type ( pMethod ) )  location: 1982 cross_layer: 1 file: zipfile.c
iMethod = ( int ) sqlite3_value_int64 ( pMethod ); location: 1983 cross_layer: 1 file: zipfile.c
if ( iMethod != 0 && iMethod != 8 )  location: 1984 cross_layer: 1 file: zipfile.c
if ( sqlite3_value_type ( pData ) == SQLITE_NULL )  location: 1994 cross_layer: 1 file: zipfile.c
bIsDir = 1; location: 1995 cross_layer: 1 file: zipfile.c
aData = sqlite3_value_blob ( pData ); location: 1998 cross_layer: 1 file: zipfile.c
szUncompressed = nData = sqlite3_value_bytes ( pData ); location: 1999 cross_layer: 1 file: zipfile.c
if ( iMethod < 0 || iMethod == 8 )  location: 2001 cross_layer: 1 file: zipfile.c
rc = zipfileDeflate ( aData , nData , & aFree , & nOut , & zErr ); location: 2003 cross_layer: 1 file: zipfile.c
if ( rc != SQLITE_OK )  location: 2004 cross_layer: 1 file: zipfile.c
rc = zipfileGetMode ( pMode , bIsDir , & mode , & zErr ); location: 2018 cross_layer: 1 file: zipfile.c
if ( rc )  location: 2019 cross_layer: 1 file: zipfile.c
if ( bIsDir == 0 )  location: 2027 cross_layer: 1 file: zipfile.c
if ( zName [ nName - 1 ] != '/' )  location: 2034 cross_layer: 1 file: zipfile.c
nName ++; location: 2036 cross_layer: 1 file: zipfile.c
e . cds . nFile = ( u16 ) nName; location: 2057 cross_layer: 1 file: zipfile.c
e . cds . zFile = zName; location: 2058 cross_layer: 1 file: zipfile.c
nByte = ZIPFILE_LFH_FIXED_SZ + e . cds . nFile + 9; location: 2061 cross_layer: 1 file: zipfile.c
if ( rc = zipfileBufferGrow ( & p -> body , nByte ) )  location: 2062 cross_layer: 1 file: zipfile.c
static int zipfileBufferGrow(ZipfileBuffer *pBuf, int nByte) location: 1898 cross_layer: 2 file: zipfile.c
if ( pBuf -> n + nByte > pBuf -> nAlloc )  location: 1899 cross_layer: 2 file: zipfile.c
sqlite3_int64 nNew = pBuf -> n ? pBuf -> n * 2 : 512 ; location: 1901 cross_layer: 2 file: zipfile.c
int nReq = pBuf -> n + nByte ; location: 1902 cross_layer: 2 file: zipfile.c
while ( nNew < nReq )  location: 1904 cross_layer: 2 file: zipfile.c
nNew = nNew * 2; location: 1904 cross_layer: 2 file: zipfile.c
aNew = sqlite3_realloc64 ( pBuf -> a , nNew ); location: 1905 cross_layer: 2 file: zipfile.c
if ( aNew == 0 )  location: 1906 cross_layer: 2 file: zipfile.c
pBuf -> a = aNew; location: 1907 cross_layer: 2 file: zipfile.c
pBuf -> nAlloc = ( int ) nNew; location: 1908 cross_layer: 2 file: zipfile.c
p -> body . n += zipfileSerializeLFH ( & e , & p -> body . a [ p -> body . n ] ); location: 2063 cross_layer: 1 file: zipfile.c
static int zipfileSerializeLFH(ZipfileEntry *pEntry, u8 *aBuf) location: 1336 cross_layer: 2 file: zipfile.c
ZipfileCDS * pCds = & pEntry -> cds ; location: 1337 cross_layer: 2 file: zipfile.c
u8 * a = aBuf ; location: 1338 cross_layer: 2 file: zipfile.c
pCds -> nExtra = 9; location: 1340 cross_layer: 2 file: zipfile.c
zipfileWrite32 ( a , ZIPFILE_SIGNATURE_LFH ); location: 1343 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , pCds -> iVersionExtract ); location: 1344 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , pCds -> flags ); location: 1345 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , pCds -> iCompression ); location: 1346 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , pCds -> mTime ); location: 1347 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , pCds -> mDate ); location: 1348 cross_layer: 2 file: zipfile.c
zipfileWrite32 ( a , pCds -> crc32 ); location: 1349 cross_layer: 2 file: zipfile.c
zipfileWrite32 ( a , pCds -> szCompressed ); location: 1350 cross_layer: 2 file: zipfile.c
zipfileWrite32 ( a , pCds -> szUncompressed ); location: 1351 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , ( u16 ) pCds -> nFile ); location: 1352 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , pCds -> nExtra ); location: 1353 cross_layer: 2 file: zipfile.c
assert ( a == & aBuf [ ZIPFILE_LFH_FIXED_SZ ] ); location: 1354 cross_layer: 2 file: zipfile.c
memcpy ( a , pCds -> zFile , ( int ) pCds -> nFile ); location: 1357 cross_layer: 2 file: zipfile.c
a += ( int ) pCds -> nFile; location: 1358 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , ZIPFILE_EXTRA_TIMESTAMP ); location: 1361 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , 5 ); location: 1362 cross_layer: 2 file: zipfile.c
* a ++ = 0x01; location: 1363 cross_layer: 2 file: zipfile.c
zipfileWrite32 ( a , pEntry -> mUnixTime ); location: 1364 cross_layer: 2 file: zipfile.c
return a - aBuf ; location: 1366 cross_layer: 2 file: zipfile.c
if ( rc = zipfileBufferGrow ( & p -> body , nData ) )  location: 2067 cross_layer: 1 file: zipfile.c
static int zipfileBufferGrow(ZipfileBuffer *pBuf, int nByte) location: 1898 cross_layer: 2 file: zipfile.c
if ( pBuf -> n + nByte > pBuf -> nAlloc )  location: 1899 cross_layer: 2 file: zipfile.c
sqlite3_int64 nNew = pBuf -> n ? pBuf -> n * 2 : 512 ; location: 1901 cross_layer: 2 file: zipfile.c
int nReq = pBuf -> n + nByte ; location: 1902 cross_layer: 2 file: zipfile.c
while ( nNew < nReq )  location: 1904 cross_layer: 2 file: zipfile.c
nNew = nNew * 2; location: 1904 cross_layer: 2 file: zipfile.c
aNew = sqlite3_realloc64 ( pBuf -> a , nNew ); location: 1905 cross_layer: 2 file: zipfile.c
if ( aNew == 0 )  location: 1906 cross_layer: 2 file: zipfile.c
pBuf -> a = aNew; location: 1907 cross_layer: 2 file: zipfile.c
pBuf -> nAlloc = ( int ) nNew; location: 1908 cross_layer: 2 file: zipfile.c
memcpy ( & p -> body . a [ p -> body . n ] , aData , nData ); location: 2068 cross_layer: 1 file: zipfile.c
p -> body . n += nData; location: 2069 cross_layer: 1 file: zipfile.c
nByte = ZIPFILE_CDS_FIXED_SZ + e . cds . nFile + 9; location: 2073 cross_layer: 1 file: zipfile.c
if ( rc = zipfileBufferGrow ( & p -> cds , nByte ) )  location: 2074 cross_layer: 1 file: zipfile.c
static int zipfileBufferGrow(ZipfileBuffer *pBuf, int nByte) location: 1898 cross_layer: 2 file: zipfile.c
if ( pBuf -> n + nByte > pBuf -> nAlloc )  location: 1899 cross_layer: 2 file: zipfile.c
sqlite3_int64 nNew = pBuf -> n ? pBuf -> n * 2 : 512 ; location: 1901 cross_layer: 2 file: zipfile.c
int nReq = pBuf -> n + nByte ; location: 1902 cross_layer: 2 file: zipfile.c
while ( nNew < nReq )  location: 1904 cross_layer: 2 file: zipfile.c
nNew = nNew * 2; location: 1904 cross_layer: 2 file: zipfile.c
aNew = sqlite3_realloc64 ( pBuf -> a , nNew ); location: 1905 cross_layer: 2 file: zipfile.c
if ( aNew == 0 )  location: 1906 cross_layer: 2 file: zipfile.c
pBuf -> a = aNew; location: 1907 cross_layer: 2 file: zipfile.c
pBuf -> nAlloc = ( int ) nNew; location: 1908 cross_layer: 2 file: zipfile.c
p -> cds . n += zipfileSerializeCDS ( & e , & p -> cds . a [ p -> cds . n ] ); location: 2075 cross_layer: 1 file: zipfile.c
static int zipfileSerializeCDS(ZipfileEntry *pEntry, u8 *aBuf) location: 1731 cross_layer: 2 file: zipfile.c
u8 * a = aBuf ; location: 1732 cross_layer: 2 file: zipfile.c
ZipfileCDS * pCDS = & pEntry -> cds ; location: 1733 cross_layer: 2 file: zipfile.c
if ( pEntry -> aExtra == 0 )  location: 1735 cross_layer: 2 file: zipfile.c
pCDS -> nExtra = 9; location: 1736 cross_layer: 2 file: zipfile.c
zipfileWrite32 ( a , ZIPFILE_SIGNATURE_CDS ); location: 1739 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , pCDS -> iVersionMadeBy ); location: 1740 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , pCDS -> iVersionExtract ); location: 1741 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , pCDS -> flags ); location: 1742 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , pCDS -> iCompression ); location: 1743 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , pCDS -> mTime ); location: 1744 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , pCDS -> mDate ); location: 1745 cross_layer: 2 file: zipfile.c
zipfileWrite32 ( a , pCDS -> crc32 ); location: 1746 cross_layer: 2 file: zipfile.c
zipfileWrite32 ( a , pCDS -> szCompressed ); location: 1747 cross_layer: 2 file: zipfile.c
zipfileWrite32 ( a , pCDS -> szUncompressed ); location: 1748 cross_layer: 2 file: zipfile.c
assert ( a == & aBuf [ ZIPFILE_CDS_NFILE_OFF ] ); location: 1749 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , pCDS -> nFile ); location: 1750 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , pCDS -> nExtra ); location: 1751 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , pCDS -> nComment ); location: 1752 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , pCDS -> iDiskStart ); location: 1753 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , pCDS -> iInternalAttr ); location: 1754 cross_layer: 2 file: zipfile.c
zipfileWrite32 ( a , pCDS -> iExternalAttr ); location: 1755 cross_layer: 2 file: zipfile.c
zipfileWrite32 ( a , pCDS -> iOffset ); location: 1756 cross_layer: 2 file: zipfile.c
memcpy ( a , pCDS -> zFile , pCDS -> nFile ); location: 1758 cross_layer: 2 file: zipfile.c
a += pCDS -> nFile; location: 1759 cross_layer: 2 file: zipfile.c
if ( pEntry -> aExtra )  location: 1761 cross_layer: 2 file: zipfile.c
int n = ( int ) pCDS -> nExtra + ( int ) pCDS -> nComment ; location: 1762 cross_layer: 2 file: zipfile.c
memcpy ( a , pEntry -> aExtra , n ); location: 1763 cross_layer: 2 file: zipfile.c
a += n; location: 1764 cross_layer: 2 file: zipfile.c
assert ( pCDS -> nExtra == 9 ); location: 1766 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , ZIPFILE_EXTRA_TIMESTAMP ); location: 1767 cross_layer: 2 file: zipfile.c
zipfileWrite16 ( a , 5 ); location: 1768 cross_layer: 2 file: zipfile.c
* a ++ = 0x01; location: 1769 cross_layer: 2 file: zipfile.c
zipfileWrite32 ( a , pEntry -> mUnixTime ); location: 1770 cross_layer: 2 file: zipfile.c
return a - aBuf ; location: 1773 cross_layer: 2 file: zipfile.c
p -> nEntry ++; location: 2078 cross_layer: 1 file: zipfile.c
if ( rc )  location: 2083 cross_layer: 1 file: zipfile.c
sqlite3_result_error_code ( pCtx , rc ); location: 2087 cross_layer: 1 file: zipfile.c
------------------------------
2 @@ testCode/CVE-2019-19959_NVD-CWE-Other_d8f2d46cbc9925e034a68aaaf60aad788d9373c1_zipfile.c_OLD.c @@ zipfileUpdate @@ 1635 @@ ['nPath'] @@ {pVtab, apVal, pTab, zPath, aIn}
static int zipfileUpdate(
sqlite3_vtab *pVtab,
int nVal,
sqlite3_value **apVal,
sqlite_int64 *pRowid
) location: 1525 cross_layer: 1 file: zipfile.c
ZipfileTab * pTab = ( ZipfileTab * ) pVtab ; location: 1526 cross_layer: 1 file: zipfile.c
int rc = SQLITE_OK ; location: 1527 cross_layer: 1 file: zipfile.c
const char * zPath = 0 ; location: 1533 cross_layer: 1 file: zipfile.c
int nPath = 0 ; location: 1534 cross_layer: 1 file: zipfile.c
int bIsDir = 0 ; location: 1543 cross_layer: 1 file: zipfile.c
if ( pTab -> pWriteFd == 0 )  location: 1546 cross_layer: 1 file: zipfile.c
rc = zipfileBegin ( pVtab ); location: 1547 cross_layer: 1 file: zipfile.c
if ( rc != SQLITE_OK )  location: 1548 cross_layer: 1 file: zipfile.c
if ( nVal > 1 )  location: 1569 cross_layer: 1 file: zipfile.c
if ( sqlite3_value_type ( apVal [ 5 ] ) != SQLITE_NULL )  location: 1571 cross_layer: 1 file: zipfile.c
rc = SQLITE_CONSTRAINT; location: 1573 cross_layer: 1 file: zipfile.c
if ( sqlite3_value_type ( apVal [ 6 ] ) != SQLITE_NULL )  location: 1575 cross_layer: 1 file: zipfile.c
rc = SQLITE_CONSTRAINT; location: 1577 cross_layer: 1 file: zipfile.c
if ( rc == SQLITE_OK )  location: 1580 cross_layer: 1 file: zipfile.c
if ( sqlite3_value_type ( apVal [ 7 ] ) == SQLITE_NULL )  location: 1581 cross_layer: 1 file: zipfile.c
bIsDir = 1; location: 1583 cross_layer: 1 file: zipfile.c
const u8 * aIn = sqlite3_value_blob ( apVal [ 7 ] ) ; location: 1587 cross_layer: 1 file: zipfile.c
int nIn = sqlite3_value_bytes ( apVal [ 7 ] ) ; location: 1588 cross_layer: 1 file: zipfile.c
int bAuto = sqlite3_value_type ( apVal [ 8 ] ) == SQLITE_NULL ; location: 1589 cross_layer: 1 file: zipfile.c
iMethod = sqlite3_value_int ( apVal [ 8 ] ); location: 1591 cross_layer: 1 file: zipfile.c
if ( iMethod != 0 && iMethod != 8 )  location: 1595 cross_layer: 1 file: zipfile.c
rc = SQLITE_CONSTRAINT; location: 1597 cross_layer: 1 file: zipfile.c
if ( bAuto || iMethod )  location: 1599 cross_layer: 1 file: zipfile.c
rc = zipfileDeflate ( aIn , nIn , & pFree , & nCmp , & pTab -> base . zErrMsg ); location: 1601 cross_layer: 1 file: zipfile.c
if ( rc == SQLITE_OK )  location: 1615 cross_layer: 1 file: zipfile.c
rc = zipfileGetMode ( apVal [ 3 ] , bIsDir , & mode , & pTab -> base . zErrMsg ); location: 1616 cross_layer: 1 file: zipfile.c
if ( rc == SQLITE_OK )  location: 1619 cross_layer: 1 file: zipfile.c
zPath = ( const char * ) sqlite3_value_text ( apVal [ 2 ] ); location: 1620 cross_layer: 1 file: zipfile.c
if ( zPath == 0 )  location: 1621 cross_layer: 1 file: zipfile.c
zPath = ""; location: 1621 cross_layer: 1 file: zipfile.c
nPath = ( int ) strlen ( zPath ); location: 1622 cross_layer: 1 file: zipfile.c
if ( rc == SQLITE_OK && bIsDir )  location: 1626 cross_layer: 1 file: zipfile.c
if ( zPath [ nPath - 1 ] != '/' )  location: 1631 cross_layer: 1 file: zipfile.c
nPath ++; location: 1635 cross_layer: 1 file: zipfile.c
if ( zipfileComparePath ( p -> cds . zFile , zPath , nPath ) == 0 )  location: 1644 cross_layer: 1 file: zipfile.c
static int zipfileComparePath(const char *zA, const char *zB, int nB) location: 1434 cross_layer: 2 file: zipfile.c
int nA = ( int ) strlen ( zA ) ; location: 1435 cross_layer: 2 file: zipfile.c
if ( zA [ nA - 1 ] == '/' )  location: 1436 cross_layer: 2 file: zipfile.c
nA --; location: 1436 cross_layer: 2 file: zipfile.c
if ( zB [ nB - 1 ] == '/' )  location: 1437 cross_layer: 2 file: zipfile.c
nB --; location: 1437 cross_layer: 2 file: zipfile.c
if ( nA == nB && memcmp ( zA , zB , nA ) == 0 )  location: 1438 cross_layer: 2 file: zipfile.c
pNew -> cds . nFile = ( u16 ) nPath; location: 1680 cross_layer: 1 file: zipfile.c
pNew -> mUnixTime = ( u32 ) mTime; location: 1681 cross_layer: 1 file: zipfile.c
rc = zipfileAppendEntry ( pTab , pNew , pData , nData ); location: 1682 cross_layer: 1 file: zipfile.c
static int zipfileAppendEntry(
ZipfileTab *pTab,
ZipfileEntry *pEntry,
const u8 *pData,
int nData
) location: 1374 cross_layer: 2 file: zipfile.c
u8 * aBuf = pTab -> aBuffer ; location: 1375 cross_layer: 2 file: zipfile.c
nBuf = zipfileSerializeLFH ( pEntry , aBuf ); location: 1379 cross_layer: 2 file: zipfile.c
static int zipfileSerializeLFH(ZipfileEntry *pEntry, u8 *aBuf) location: 1336 cross_layer: 3 file: zipfile.c
ZipfileCDS * pCds = & pEntry -> cds ; location: 1337 cross_layer: 3 file: zipfile.c
u8 * a = aBuf ; location: 1338 cross_layer: 3 file: zipfile.c
pCds -> nExtra = 9; location: 1340 cross_layer: 3 file: zipfile.c
zipfileWrite32 ( a , ZIPFILE_SIGNATURE_LFH ); location: 1343 cross_layer: 3 file: zipfile.c
zipfileWrite16 ( a , pCds -> iVersionExtract ); location: 1344 cross_layer: 3 file: zipfile.c
zipfileWrite16 ( a , pCds -> flags ); location: 1345 cross_layer: 3 file: zipfile.c
zipfileWrite16 ( a , pCds -> iCompression ); location: 1346 cross_layer: 3 file: zipfile.c
zipfileWrite16 ( a , pCds -> mTime ); location: 1347 cross_layer: 3 file: zipfile.c
zipfileWrite16 ( a , pCds -> mDate ); location: 1348 cross_layer: 3 file: zipfile.c
zipfileWrite32 ( a , pCds -> crc32 ); location: 1349 cross_layer: 3 file: zipfile.c
zipfileWrite32 ( a , pCds -> szCompressed ); location: 1350 cross_layer: 3 file: zipfile.c
zipfileWrite32 ( a , pCds -> szUncompressed ); location: 1351 cross_layer: 3 file: zipfile.c
zipfileWrite16 ( a , ( u16 ) pCds -> nFile ); location: 1352 cross_layer: 3 file: zipfile.c
zipfileWrite16 ( a , pCds -> nExtra ); location: 1353 cross_layer: 3 file: zipfile.c
assert ( a == & aBuf [ ZIPFILE_LFH_FIXED_SZ ] ); location: 1354 cross_layer: 3 file: zipfile.c
memcpy ( a , pCds -> zFile , ( int ) pCds -> nFile ); location: 1357 cross_layer: 3 file: zipfile.c
a += ( int ) pCds -> nFile; location: 1358 cross_layer: 3 file: zipfile.c
zipfileWrite16 ( a , ZIPFILE_EXTRA_TIMESTAMP ); location: 1361 cross_layer: 3 file: zipfile.c
zipfileWrite16 ( a , 5 ); location: 1362 cross_layer: 3 file: zipfile.c
* a ++ = 0x01; location: 1363 cross_layer: 3 file: zipfile.c
zipfileWrite32 ( a , pEntry -> mUnixTime ); location: 1364 cross_layer: 3 file: zipfile.c
return a - aBuf ; location: 1366 cross_layer: 3 file: zipfile.c
rc = zipfileAppendData ( pTab , aBuf , nBuf ); location: 1380 cross_layer: 2 file: zipfile.c
static int zipfileAppendData(
ZipfileTab *pTab,
const u8 *aWrite,
int nWrite
) location: 524 cross_layer: 3 file: zipfile.c
fseek ( pTab -> pWriteFd , ( long ) pTab -> szCurrent , SEEK_SET ); location: 526 cross_layer: 3 file: zipfile.c
n = fwrite ( aWrite , 1 , nWrite , pTab -> pWriteFd ); location: 527 cross_layer: 3 file: zipfile.c
if ( ( int ) n != nWrite )  location: 528 cross_layer: 3 file: zipfile.c
pTab -> base . zErrMsg = sqlite3_mprintf ( "error in fwrite()" ); location: 529 cross_layer: 3 file: zipfile.c
pTab -> szCurrent += nWrite; location: 532 cross_layer: 3 file: zipfile.c
if ( rc == SQLITE_OK )  location: 1381 cross_layer: 2 file: zipfile.c
pEntry -> iDataOff = pTab -> szCurrent; location: 1382 cross_layer: 2 file: zipfile.c
rc = zipfileAppendData ( pTab , pData , nData ); location: 1383 cross_layer: 2 file: zipfile.c
static int zipfileAppendData(
ZipfileTab *pTab,
const u8 *aWrite,
int nWrite
) location: 524 cross_layer: 3 file: zipfile.c
fseek ( pTab -> pWriteFd , ( long ) pTab -> szCurrent , SEEK_SET ); location: 526 cross_layer: 3 file: zipfile.c
n = fwrite ( aWrite , 1 , nWrite , pTab -> pWriteFd ); location: 527 cross_layer: 3 file: zipfile.c
if ( ( int ) n != nWrite )  location: 528 cross_layer: 3 file: zipfile.c
pTab -> base . zErrMsg = sqlite3_mprintf ( "error in fwrite()" ); location: 529 cross_layer: 3 file: zipfile.c
pTab -> szCurrent += nWrite; location: 532 cross_layer: 3 file: zipfile.c
return rc ; location: 1386 cross_layer: 2 file: zipfile.c
zipfileAddEntry ( pTab , pOld , pNew ); location: 1683 cross_layer: 1 file: zipfile.c
static void zipfileAddEntry(
ZipfileTab *pTab,
ZipfileEntry *pBefore,
ZipfileEntry *pNew
) location: 1192 cross_layer: 2 file: zipfile.c
assert ( ( pTab -> pFirstEntry == 0 ) == ( pTab -> pLastEntry == 0 ) ); location: 1193 cross_layer: 2 file: zipfile.c
assert ( pNew -> pNext == 0 ); location: 1194 cross_layer: 2 file: zipfile.c
if ( pBefore == 0 )  location: 1195 cross_layer: 2 file: zipfile.c
if ( pTab -> pFirstEntry == 0 )  location: 1196 cross_layer: 2 file: zipfile.c
pTab -> pFirstEntry = pTab -> pLastEntry = pNew; location: 1197 cross_layer: 2 file: zipfile.c
assert ( pTab -> pLastEntry -> pNext == 0 ); location: 1199 cross_layer: 2 file: zipfile.c
pTab -> pLastEntry -> pNext = pNew; location: 1200 cross_layer: 2 file: zipfile.c
pTab -> pLastEntry = pNew; location: 1201 cross_layer: 2 file: zipfile.c
for(pp=&pTab->pFirstEntry; *pp!=pBefore; pp=&((*pp)->pNext)); location: 1205 cross_layer: 2 file: zipfile.c
pNew -> pNext = pBefore; location: 1206 cross_layer: 2 file: zipfile.c
* pp = pNew; location: 1207 cross_layer: 2 file: zipfile.c
if ( rc == SQLITE_OK && ( pOld || pOld2 ) )  location: 1688 cross_layer: 1 file: zipfile.c
return rc ; location: 1704 cross_layer: 1 file: zipfile.c
------------------------------
