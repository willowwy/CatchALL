1 @@ testCode/CVE-2020-24370_CWE-191_a585eae6e7ada1ca9271607a4f48dfb17868ab7b_ldebug.c_OLD.c @@ *upvalname @@ 191 @@ ['n'] @@ {ci}
static const char *findvararg (CallInfo *ci, int n, StkId *pos) location: 188 cross_layer: 1 file: ldebug.c
if ( clLvalue ( s2v ( ci -> func ) ) -> p -> is_vararg )  location: 189 cross_layer: 1 file: ldebug.c
int nextra = ci -> u . l . nextraargs ; location: 190 cross_layer: 1 file: ldebug.c
if ( n <= nextra )  location: 191 cross_layer: 1 file: ldebug.c
* pos = ci -> func - nextra + ( n - 1 ); location: 192 cross_layer: 1 file: ldebug.c
return findvararg ( ci , - n , pos ) ; location: 205 cross_layer: 2 file: ldebug.c
const char * vname = luaG_findlocal ( L , L -> ci , idx , NULL ) ; location: 132 cross_layer: 3 file: testCode/lfunc.c
if ( vname == NULL )  location: 133 cross_layer: 3 file: testCode/lfunc.c
luaG_runerror ( L , msg , vname ); location: 134 cross_layer: 3 file: testCode/lfunc.c
l_noret luaG_runerror (lua_State *L, const char *fmt, ...) location: 767 cross_layer: 4 file: ldebug.c
CallInfo * ci = L -> ci ; location: 768 cross_layer: 4 file: ldebug.c
luaC_checkGC ( L ); location: 771 cross_layer: 4 file: ldebug.c
va_start ( argp , fmt ); location: 772 cross_layer: 4 file: ldebug.c
msg = luaO_pushvfstring ( L , fmt , argp ); location: 773 cross_layer: 4 file: ldebug.c
if ( isLua ( ci ) )  location: 775 cross_layer: 4 file: ldebug.c
luaG_addinfo ( L , msg , ci_func ( ci ) -> p -> source , getcurrentline ( ci ) ); location: 776 cross_layer: 4 file: ldebug.c
luaG_errormsg ( L ); location: 777 cross_layer: 4 file: ldebug.c
varerror ( L , level , "attempt to close non-closable variable '%s'" ); location: 156 cross_layer: 4 file: testCode/lfunc.c
------------------------------
2 @@ testCode/CVE-2020-24370_CWE-191_a585eae6e7ada1ca9271607a4f48dfb17868ab7b_ldebug.c_OLD.c @@ *upvalname @@ 191 @@ ['n'] @@ {ci}
static const char *findvararg (CallInfo *ci, int n, StkId *pos) location: 188 cross_layer: 1 file: ldebug.c
if ( clLvalue ( s2v ( ci -> func ) ) -> p -> is_vararg )  location: 189 cross_layer: 1 file: ldebug.c
int nextra = ci -> u . l . nextraargs ; location: 190 cross_layer: 1 file: ldebug.c
if ( n <= nextra )  location: 191 cross_layer: 1 file: ldebug.c
* pos = ci -> func - nextra + ( n - 1 ); location: 192 cross_layer: 1 file: ldebug.c
return findvararg ( ci , - n , pos ) ; location: 205 cross_layer: 2 file: ldebug.c
const char * vname = luaG_findlocal ( L , L -> ci , idx , NULL ) ; location: 132 cross_layer: 3 file: testCode/lfunc.c
if ( vname == NULL )  location: 133 cross_layer: 3 file: testCode/lfunc.c
luaG_runerror ( L , msg , vname ); location: 134 cross_layer: 3 file: testCode/lfunc.c
l_noret luaG_runerror (lua_State *L, const char *fmt, ...) location: 767 cross_layer: 4 file: ldebug.c
CallInfo * ci = L -> ci ; location: 768 cross_layer: 4 file: ldebug.c
luaC_checkGC ( L ); location: 771 cross_layer: 4 file: ldebug.c
va_start ( argp , fmt ); location: 772 cross_layer: 4 file: ldebug.c
msg = luaO_pushvfstring ( L , fmt , argp ); location: 773 cross_layer: 4 file: ldebug.c
if ( isLua ( ci ) )  location: 775 cross_layer: 4 file: ldebug.c
luaG_addinfo ( L , msg , ci_func ( ci ) -> p -> source , getcurrentline ( ci ) ); location: 776 cross_layer: 4 file: ldebug.c
luaG_errormsg ( L ); location: 777 cross_layer: 4 file: ldebug.c
varerror ( L , level , "variable '%s' got a non-closable value" ); location: 201 cross_layer: 4 file: testCode/lfunc.c
------------------------------
3 @@ testCode/CVE-2020-24370_CWE-191_a585eae6e7ada1ca9271607a4f48dfb17868ab7b_ldebug.c_OLD.c @@ *upvalname @@ 191 @@ ['n'] @@ {ci}
static const char *findvararg (CallInfo *ci, int n, StkId *pos) location: 188 cross_layer: 1 file: ldebug.c
if ( clLvalue ( s2v ( ci -> func ) ) -> p -> is_vararg )  location: 189 cross_layer: 1 file: ldebug.c
int nextra = ci -> u . l . nextraargs ; location: 190 cross_layer: 1 file: ldebug.c
if ( n <= nextra )  location: 191 cross_layer: 1 file: ldebug.c
* pos = ci -> func - nextra + ( n - 1 ); location: 192 cross_layer: 1 file: ldebug.c
return findvararg ( ci , - n , pos ) ; location: 205 cross_layer: 2 file: ldebug.c
name = luaG_findlocal ( L , ar -> i_ci , n , & pos ); location: 235 cross_layer: 3 file: ldebug.c
if ( name )  location: 236 cross_layer: 3 file: ldebug.c
return name ; location: 242 cross_layer: 3 file: ldebug.c
lua_pushstring ( L , lua_getlocal ( L , NULL , nvar ) ); location: 208 cross_layer: 4 file: testCode/ldblib.c
LUA_API const char *lua_getlocal (lua_State *L, const lua_Debug *ar, int n) location: 224 cross_layer: 5 file: ldebug.c
lua_lock ( L ); location: 226 cross_layer: 5 file: ldebug.c
if ( ar == NULL )  location: 227 cross_layer: 5 file: ldebug.c
if ( ! isLfunction ( s2v ( L -> top - 1 ) ) )  location: 228 cross_layer: 5 file: ldebug.c
name = luaF_getlocalname ( clLvalue ( s2v ( L -> top - 1 ) ) -> p , n , 0 ); location: 231 cross_layer: 5 file: ldebug.c
name = luaG_findlocal ( L , ar -> i_ci , n , & pos ); location: 235 cross_layer: 5 file: ldebug.c
if ( name )  location: 236 cross_layer: 5 file: ldebug.c
setobjs2s ( L , L -> top , pos ); location: 237 cross_layer: 5 file: ldebug.c
api_incr_top ( L ); location: 238 cross_layer: 5 file: ldebug.c
lua_unlock ( L ); location: 241 cross_layer: 5 file: ldebug.c
return name ; location: 242 cross_layer: 5 file: ldebug.c
------------------------------
4 @@ testCode/CVE-2020-24370_CWE-191_a585eae6e7ada1ca9271607a4f48dfb17868ab7b_ldebug.c_OLD.c @@ *upvalname @@ 191 @@ ['n'] @@ {ci}
static const char *findvararg (CallInfo *ci, int n, StkId *pos) location: 188 cross_layer: 1 file: ldebug.c
if ( clLvalue ( s2v ( ci -> func ) ) -> p -> is_vararg )  location: 189 cross_layer: 1 file: ldebug.c
int nextra = ci -> u . l . nextraargs ; location: 190 cross_layer: 1 file: ldebug.c
if ( n <= nextra )  location: 191 cross_layer: 1 file: ldebug.c
* pos = ci -> func - nextra + ( n - 1 ); location: 192 cross_layer: 1 file: ldebug.c
return findvararg ( ci , - n , pos ) ; location: 205 cross_layer: 2 file: ldebug.c
name = luaG_findlocal ( L , ar -> i_ci , n , & pos ); location: 235 cross_layer: 3 file: ldebug.c
if ( name )  location: 236 cross_layer: 3 file: ldebug.c
return name ; location: 242 cross_layer: 3 file: ldebug.c
name = lua_getlocal ( L1 , & ar , nvar ); location: 218 cross_layer: 4 file: testCode/ldblib.c
if ( name )  location: 219 cross_layer: 4 file: testCode/ldblib.c
lua_pushstring ( L , name ); location: 221 cross_layer: 4 file: testCode/ldblib.c
------------------------------
5 @@ testCode/CVE-2020-24370_CWE-191_a585eae6e7ada1ca9271607a4f48dfb17868ab7b_ldebug.c_OLD.c @@ *upvalname @@ 191 @@ ['n'] @@ {ci}
static const char *findvararg (CallInfo *ci, int n, StkId *pos) location: 188 cross_layer: 1 file: ldebug.c
if ( clLvalue ( s2v ( ci -> func ) ) -> p -> is_vararg )  location: 189 cross_layer: 1 file: ldebug.c
int nextra = ci -> u . l . nextraargs ; location: 190 cross_layer: 1 file: ldebug.c
if ( n <= nextra )  location: 191 cross_layer: 1 file: ldebug.c
* pos = ci -> func - nextra + ( n - 1 ); location: 192 cross_layer: 1 file: ldebug.c
return findvararg ( ci , - n , pos ) ; location: 205 cross_layer: 2 file: ldebug.c
name = luaG_findlocal ( L , ar -> i_ci , n , & pos ); location: 250 cross_layer: 3 file: ldebug.c
if ( name )  location: 251 cross_layer: 3 file: ldebug.c
return name ; location: 256 cross_layer: 3 file: ldebug.c
name = lua_setlocal ( L1 , & ar , nvar ); location: 246 cross_layer: 4 file: testCode/ldblib.c
if ( name == NULL )  location: 247 cross_layer: 4 file: testCode/ldblib.c
lua_pushstring ( L , name ); location: 249 cross_layer: 4 file: testCode/ldblib.c
------------------------------
6 @@ testCode/CVE-2020-24370_CWE-191_a585eae6e7ada1ca9271607a4f48dfb17868ab7b_ldebug.c_OLD.c @@ *upvalname @@ 192 @@ ['*pos'] @@ {ci, pos}
static const char *findvararg (CallInfo *ci, int n, StkId *pos) location: 188 cross_layer: 1 file: ldebug.c
if ( clLvalue ( s2v ( ci -> func ) ) -> p -> is_vararg )  location: 189 cross_layer: 1 file: ldebug.c
int nextra = ci -> u . l . nextraargs ; location: 190 cross_layer: 1 file: ldebug.c
if ( n <= nextra )  location: 191 cross_layer: 1 file: ldebug.c
* pos = ci -> func - nextra + ( n - 1 ); location: 192 cross_layer: 1 file: ldebug.c
return findvararg ( ci , - n , pos ) ; location: 205 cross_layer: 2 file: ldebug.c
const char * vname = luaG_findlocal ( L , L -> ci , idx , NULL ) ; location: 132 cross_layer: 3 file: testCode/lfunc.c
if ( vname == NULL )  location: 133 cross_layer: 3 file: testCode/lfunc.c
luaG_runerror ( L , msg , vname ); location: 134 cross_layer: 3 file: testCode/lfunc.c
l_noret luaG_runerror (lua_State *L, const char *fmt, ...) location: 767 cross_layer: 4 file: ldebug.c
CallInfo * ci = L -> ci ; location: 768 cross_layer: 4 file: ldebug.c
luaC_checkGC ( L ); location: 771 cross_layer: 4 file: ldebug.c
va_start ( argp , fmt ); location: 772 cross_layer: 4 file: ldebug.c
msg = luaO_pushvfstring ( L , fmt , argp ); location: 773 cross_layer: 4 file: ldebug.c
if ( isLua ( ci ) )  location: 775 cross_layer: 4 file: ldebug.c
luaG_addinfo ( L , msg , ci_func ( ci ) -> p -> source , getcurrentline ( ci ) ); location: 776 cross_layer: 4 file: ldebug.c
luaG_errormsg ( L ); location: 777 cross_layer: 4 file: ldebug.c
varerror ( L , level , "attempt to close non-closable variable '%s'" ); location: 156 cross_layer: 4 file: testCode/lfunc.c
------------------------------
7 @@ testCode/CVE-2020-24370_CWE-191_a585eae6e7ada1ca9271607a4f48dfb17868ab7b_ldebug.c_OLD.c @@ *upvalname @@ 192 @@ ['*pos'] @@ {ci, pos}
static const char *findvararg (CallInfo *ci, int n, StkId *pos) location: 188 cross_layer: 1 file: ldebug.c
if ( clLvalue ( s2v ( ci -> func ) ) -> p -> is_vararg )  location: 189 cross_layer: 1 file: ldebug.c
int nextra = ci -> u . l . nextraargs ; location: 190 cross_layer: 1 file: ldebug.c
if ( n <= nextra )  location: 191 cross_layer: 1 file: ldebug.c
* pos = ci -> func - nextra + ( n - 1 ); location: 192 cross_layer: 1 file: ldebug.c
return findvararg ( ci , - n , pos ) ; location: 205 cross_layer: 2 file: ldebug.c
const char * vname = luaG_findlocal ( L , L -> ci , idx , NULL ) ; location: 132 cross_layer: 3 file: testCode/lfunc.c
if ( vname == NULL )  location: 133 cross_layer: 3 file: testCode/lfunc.c
luaG_runerror ( L , msg , vname ); location: 134 cross_layer: 3 file: testCode/lfunc.c
l_noret luaG_runerror (lua_State *L, const char *fmt, ...) location: 767 cross_layer: 4 file: ldebug.c
CallInfo * ci = L -> ci ; location: 768 cross_layer: 4 file: ldebug.c
luaC_checkGC ( L ); location: 771 cross_layer: 4 file: ldebug.c
va_start ( argp , fmt ); location: 772 cross_layer: 4 file: ldebug.c
msg = luaO_pushvfstring ( L , fmt , argp ); location: 773 cross_layer: 4 file: ldebug.c
if ( isLua ( ci ) )  location: 775 cross_layer: 4 file: ldebug.c
luaG_addinfo ( L , msg , ci_func ( ci ) -> p -> source , getcurrentline ( ci ) ); location: 776 cross_layer: 4 file: ldebug.c
luaG_errormsg ( L ); location: 777 cross_layer: 4 file: ldebug.c
varerror ( L , level , "variable '%s' got a non-closable value" ); location: 201 cross_layer: 4 file: testCode/lfunc.c
------------------------------
8 @@ testCode/CVE-2020-24370_CWE-191_a585eae6e7ada1ca9271607a4f48dfb17868ab7b_ldebug.c_OLD.c @@ *upvalname @@ 192 @@ ['*pos'] @@ {ci, pos}
static const char *findvararg (CallInfo *ci, int n, StkId *pos) location: 188 cross_layer: 1 file: ldebug.c
if ( clLvalue ( s2v ( ci -> func ) ) -> p -> is_vararg )  location: 189 cross_layer: 1 file: ldebug.c
int nextra = ci -> u . l . nextraargs ; location: 190 cross_layer: 1 file: ldebug.c
if ( n <= nextra )  location: 191 cross_layer: 1 file: ldebug.c
* pos = ci -> func - nextra + ( n - 1 ); location: 192 cross_layer: 1 file: ldebug.c
return findvararg ( ci , - n , pos ) ; location: 205 cross_layer: 2 file: ldebug.c
name = luaG_findlocal ( L , ar -> i_ci , n , & pos ); location: 235 cross_layer: 3 file: ldebug.c
if ( name )  location: 236 cross_layer: 3 file: ldebug.c
return name ; location: 242 cross_layer: 3 file: ldebug.c
lua_pushstring ( L , lua_getlocal ( L , NULL , nvar ) ); location: 208 cross_layer: 4 file: testCode/ldblib.c
LUA_API const char *lua_getlocal (lua_State *L, const lua_Debug *ar, int n) location: 224 cross_layer: 5 file: ldebug.c
lua_lock ( L ); location: 226 cross_layer: 5 file: ldebug.c
if ( ar == NULL )  location: 227 cross_layer: 5 file: ldebug.c
if ( ! isLfunction ( s2v ( L -> top - 1 ) ) )  location: 228 cross_layer: 5 file: ldebug.c
name = luaF_getlocalname ( clLvalue ( s2v ( L -> top - 1 ) ) -> p , n , 0 ); location: 231 cross_layer: 5 file: ldebug.c
name = luaG_findlocal ( L , ar -> i_ci , n , & pos ); location: 235 cross_layer: 5 file: ldebug.c
if ( name )  location: 236 cross_layer: 5 file: ldebug.c
setobjs2s ( L , L -> top , pos ); location: 237 cross_layer: 5 file: ldebug.c
api_incr_top ( L ); location: 238 cross_layer: 5 file: ldebug.c
lua_unlock ( L ); location: 241 cross_layer: 5 file: ldebug.c
return name ; location: 242 cross_layer: 5 file: ldebug.c
------------------------------
9 @@ testCode/CVE-2020-24370_CWE-191_a585eae6e7ada1ca9271607a4f48dfb17868ab7b_ldebug.c_OLD.c @@ *upvalname @@ 192 @@ ['*pos'] @@ {ci, pos}
static const char *findvararg (CallInfo *ci, int n, StkId *pos) location: 188 cross_layer: 1 file: ldebug.c
if ( clLvalue ( s2v ( ci -> func ) ) -> p -> is_vararg )  location: 189 cross_layer: 1 file: ldebug.c
int nextra = ci -> u . l . nextraargs ; location: 190 cross_layer: 1 file: ldebug.c
if ( n <= nextra )  location: 191 cross_layer: 1 file: ldebug.c
* pos = ci -> func - nextra + ( n - 1 ); location: 192 cross_layer: 1 file: ldebug.c
return findvararg ( ci , - n , pos ) ; location: 205 cross_layer: 2 file: ldebug.c
name = luaG_findlocal ( L , ar -> i_ci , n , & pos ); location: 235 cross_layer: 3 file: ldebug.c
if ( name )  location: 236 cross_layer: 3 file: ldebug.c
return name ; location: 242 cross_layer: 3 file: ldebug.c
name = lua_getlocal ( L1 , & ar , nvar ); location: 218 cross_layer: 4 file: testCode/ldblib.c
if ( name )  location: 219 cross_layer: 4 file: testCode/ldblib.c
lua_pushstring ( L , name ); location: 221 cross_layer: 4 file: testCode/ldblib.c
------------------------------
10 @@ testCode/CVE-2020-24370_CWE-191_a585eae6e7ada1ca9271607a4f48dfb17868ab7b_ldebug.c_OLD.c @@ *upvalname @@ 192 @@ ['*pos'] @@ {ci, pos}
static const char *findvararg (CallInfo *ci, int n, StkId *pos) location: 188 cross_layer: 1 file: ldebug.c
if ( clLvalue ( s2v ( ci -> func ) ) -> p -> is_vararg )  location: 189 cross_layer: 1 file: ldebug.c
int nextra = ci -> u . l . nextraargs ; location: 190 cross_layer: 1 file: ldebug.c
if ( n <= nextra )  location: 191 cross_layer: 1 file: ldebug.c
* pos = ci -> func - nextra + ( n - 1 ); location: 192 cross_layer: 1 file: ldebug.c
return findvararg ( ci , - n , pos ) ; location: 205 cross_layer: 2 file: ldebug.c
name = luaG_findlocal ( L , ar -> i_ci , n , & pos ); location: 250 cross_layer: 3 file: ldebug.c
if ( name )  location: 251 cross_layer: 3 file: ldebug.c
return name ; location: 256 cross_layer: 3 file: ldebug.c
name = lua_setlocal ( L1 , & ar , nvar ); location: 246 cross_layer: 4 file: testCode/ldblib.c
if ( name == NULL )  location: 247 cross_layer: 4 file: testCode/ldblib.c
lua_pushstring ( L , name ); location: 249 cross_layer: 4 file: testCode/ldblib.c
------------------------------
