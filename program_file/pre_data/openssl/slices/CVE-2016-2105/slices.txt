1 @@ testCode/CVE-2016-2105_CWE-189_172c6e1e14defe7d49d62f5fc9ea6a79b225424f_encode.c_1.1_OLD.c @@ EVP_EncodeUpdate @@ 160 @@ ['ctx->num', 'inl'] @@ {ctx}
void EVP_EncodeUpdate(EVP_ENCODE_CTX *ctx, unsigned char *out, int *outl,
const unsigned char *in, int inl) location: 151 cross_layer: 1 file: encode.c
if ( inl <= 0 )  location: 157 cross_layer: 1 file: encode.c
if ( ( ctx -> num + inl ) < ctx -> length )  location: 160 cross_layer: 1 file: encode.c
memcpy ( & ( ctx -> enc_data [ ctx -> num ] ) , in , inl ); location: 161 cross_layer: 1 file: encode.c
ctx -> num += inl; location: 162 cross_layer: 1 file: encode.c
if ( ctx -> num != 0 )  location: 165 cross_layer: 1 file: encode.c
i = ctx -> length - ctx -> num; location: 166 cross_layer: 1 file: encode.c
memcpy ( & ( ctx -> enc_data [ ctx -> num ] ) , in , i ); location: 167 cross_layer: 1 file: encode.c
in += i; location: 168 cross_layer: 1 file: encode.c
inl -= i; location: 169 cross_layer: 1 file: encode.c
j = EVP_EncodeBlock ( out , ctx -> enc_data , ctx -> length ); location: 170 cross_layer: 1 file: encode.c
int EVP_EncodeBlock(unsigned char *t, const unsigned char *f, int dlen) location: 205 cross_layer: 2 file: encode.c
for (i = dlen; i > 0; i -= 3) location: 210 cross_layer: 2 file: encode.c
if ( i >= 3 )  location: 211 cross_layer: 2 file: encode.c
l = ( ( ( unsigned long ) f [ 0 ] ) << 16L ) | ( ( ( unsigned long ) f [ 1 ] ) << 8L ) | f [ 2 ]; location: 212 cross_layer: 2 file: encode.c
* ( t ++ ) = conv_bin2ascii ( l >> 18L ); location: 214 cross_layer: 2 file: encode.c
* ( t ++ ) = conv_bin2ascii ( l >> 12L ); location: 215 cross_layer: 2 file: encode.c
* ( t ++ ) = conv_bin2ascii ( l >> 6L ); location: 216 cross_layer: 2 file: encode.c
* ( t ++ ) = conv_bin2ascii ( l ); location: 217 cross_layer: 2 file: encode.c
l = ( ( unsigned long ) f [ 0 ] ) << 16L; location: 219 cross_layer: 2 file: encode.c
if ( i == 2 )  location: 220 cross_layer: 2 file: encode.c
l |= ( ( unsigned long ) f [ 1 ] << 8L ); location: 221 cross_layer: 2 file: encode.c
* ( t ++ ) = conv_bin2ascii ( l >> 18L ); location: 223 cross_layer: 2 file: encode.c
* ( t ++ ) = conv_bin2ascii ( l >> 12L ); location: 224 cross_layer: 2 file: encode.c
* ( t ++ ) = ( i == 1 ) ? '=' : conv_bin2ascii ( l >> 6L ); location: 225 cross_layer: 2 file: encode.c
* ( t ++ ) = '='; location: 226 cross_layer: 2 file: encode.c
f += 3; location: 229 cross_layer: 2 file: encode.c
* t = '\0'; location: 232 cross_layer: 2 file: encode.c
ctx -> num = 0; location: 171 cross_layer: 1 file: encode.c
out += j; location: 172 cross_layer: 1 file: encode.c
* ( out ++ ) = '\n'; location: 173 cross_layer: 1 file: encode.c
* out = '\0'; location: 174 cross_layer: 1 file: encode.c
total = j + 1; location: 175 cross_layer: 1 file: encode.c
while ( inl >= ctx -> length )  location: 177 cross_layer: 1 file: encode.c
j = EVP_EncodeBlock ( out , in , ctx -> length ); location: 178 cross_layer: 1 file: encode.c
int EVP_EncodeBlock(unsigned char *t, const unsigned char *f, int dlen) location: 205 cross_layer: 2 file: encode.c
if ( i >= 3 )  location: 211 cross_layer: 2 file: encode.c
l = ( ( ( unsigned long ) f [ 0 ] ) << 16L ) | ( ( ( unsigned long ) f [ 1 ] ) << 8L ) | f [ 2 ]; location: 212 cross_layer: 2 file: encode.c
* ( t ++ ) = conv_bin2ascii ( l >> 18L ); location: 214 cross_layer: 2 file: encode.c
* ( t ++ ) = conv_bin2ascii ( l >> 12L ); location: 215 cross_layer: 2 file: encode.c
* ( t ++ ) = conv_bin2ascii ( l >> 6L ); location: 216 cross_layer: 2 file: encode.c
* ( t ++ ) = conv_bin2ascii ( l ); location: 217 cross_layer: 2 file: encode.c
l = ( ( unsigned long ) f [ 0 ] ) << 16L; location: 219 cross_layer: 2 file: encode.c
if ( i == 2 )  location: 220 cross_layer: 2 file: encode.c
l |= ( ( unsigned long ) f [ 1 ] << 8L ); location: 221 cross_layer: 2 file: encode.c
* ( t ++ ) = conv_bin2ascii ( l >> 18L ); location: 223 cross_layer: 2 file: encode.c
* ( t ++ ) = conv_bin2ascii ( l >> 12L ); location: 224 cross_layer: 2 file: encode.c
* ( t ++ ) = ( i == 1 ) ? '=' : conv_bin2ascii ( l >> 6L ); location: 225 cross_layer: 2 file: encode.c
* ( t ++ ) = '='; location: 226 cross_layer: 2 file: encode.c
f += 3; location: 229 cross_layer: 2 file: encode.c
* t = '\0'; location: 232 cross_layer: 2 file: encode.c
in += ctx -> length; location: 179 cross_layer: 1 file: encode.c
inl -= ctx -> length; location: 180 cross_layer: 1 file: encode.c
out += j; location: 181 cross_layer: 1 file: encode.c
* ( out ++ ) = '\n'; location: 182 cross_layer: 1 file: encode.c
* out = '\0'; location: 183 cross_layer: 1 file: encode.c
total += j + 1; location: 184 cross_layer: 1 file: encode.c
if ( inl != 0 )  location: 186 cross_layer: 1 file: encode.c
memcpy ( & ( ctx -> enc_data [ 0 ] ) , in , inl ); location: 187 cross_layer: 1 file: encode.c
ctx -> num = inl; location: 188 cross_layer: 1 file: encode.c
* outl = total; location: 189 cross_layer: 1 file: encode.c
------------------------------
