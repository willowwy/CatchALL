1 @@ testCode/CVE-2016-1840_CWE-119_cbb271655cadeb8dbb258a64701d9a3a0c4835b4_xmlregexp.c_OLD.c @@ xmlFAParseCharRange @@ 5060 @@ ['len'] @@ {}
static void
xmlFAParseCharRange(xmlRegParserCtxtPtr ctxt) location: 4987 cross_layer: 1 file: xmlregexp.c
int cur , len ; location: 4988 cross_layer: 1 file: xmlregexp.c
if ( CUR == '\0' )  location: 4992 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 4997 cross_layer: 1 file: xmlregexp.c
if ( cur == '\\' )  location: 4998 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 5000 cross_layer: 1 file: xmlregexp.c
switch ( cur )  location: 5001 cross_layer: 1 file: xmlregexp.c
start = 0xA; location: 5002 cross_layer: 1 file: xmlregexp.c
start = 0xD; location: 5003 cross_layer: 1 file: xmlregexp.c
start = 0x9; location: 5004 cross_layer: 1 file: xmlregexp.c
start = cur; location: 5008 cross_layer: 1 file: xmlregexp.c
len = 1; location: 5014 cross_layer: 1 file: xmlregexp.c
if ( ( cur != 0x5B ) && ( cur != 0x5D ) )  location: 5015 cross_layer: 1 file: xmlregexp.c
end = start = CUR_SCHAR ( ctxt -> cur , len ); location: 5016 cross_layer: 1 file: xmlregexp.c
if ( ( start == '-' ) && ( NXT ( 1 ) != ']' ) && ( PREV != '[' ) && ( PREV != '^' ) )  location: 5025 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 5030 cross_layer: 1 file: xmlregexp.c
if ( ( cur != '-' ) || ( NXT ( 1 ) == ']' ) )  location: 5031 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 5037 cross_layer: 1 file: xmlregexp.c
if ( cur == '\\' )  location: 5038 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 5040 cross_layer: 1 file: xmlregexp.c
switch ( cur )  location: 5041 cross_layer: 1 file: xmlregexp.c
len = 1; location: 5053 cross_layer: 1 file: xmlregexp.c
if ( ( cur != 0x5B ) && ( cur != 0x5D ) )  location: 5054 cross_layer: 1 file: xmlregexp.c
NEXTL ( len ); location: 5060 cross_layer: 1 file: xmlregexp.c
if ( end < start )  location: 5062 cross_layer: 1 file: xmlregexp.c
xmlRegAtomAddRange ( ctxt , ctxt -> atom , ctxt -> neg , XML_REGEXP_CHARVAL , start , end , NULL ); location: 5065 cross_layer: 1 file: xmlregexp.c
static void
xmlRegAtomAddRange(xmlRegParserCtxtPtr ctxt, xmlRegAtomPtr atom,
int neg, xmlRegAtomType type, int start, int end,
xmlChar *blockName) location: 1219 cross_layer: 2 file: xmlregexp.c
if ( atom == NULL )  location: 1222 cross_layer: 2 file: xmlregexp.c
if ( atom -> type != XML_REGEXP_RANGES )  location: 1226 cross_layer: 2 file: xmlregexp.c
if ( atom -> maxRanges == 0 )  location: 1230 cross_layer: 2 file: xmlregexp.c
atom -> maxRanges = 4; location: 1231 cross_layer: 2 file: xmlregexp.c
atom -> ranges = ( xmlRegRangePtr * ) xmlMalloc ( atom -> maxRanges * sizeof ( xmlRegRangePtr ) ); location: 1232 cross_layer: 2 file: xmlregexp.c
if ( atom -> ranges == NULL )  location: 1234 cross_layer: 2 file: xmlregexp.c
xmlRegexpErrMemory ( ctxt , "adding ranges" ); location: 1235 cross_layer: 2 file: xmlregexp.c
static void
xmlRegexpErrMemory(xmlRegParserCtxtPtr ctxt, const char *extra) location: 378 cross_layer: 3 file: xmlregexp.c
if ( ctxt != NULL )  location: 381 cross_layer: 3 file: xmlregexp.c
regexp = ( const char * ) ctxt -> string; location: 382 cross_layer: 3 file: xmlregexp.c
ctxt -> error = XML_ERR_NO_MEMORY; location: 383 cross_layer: 3 file: xmlregexp.c
__xmlRaiseError ( NULL , NULL , NULL , NULL , NULL , XML_FROM_REGEXP , XML_ERR_NO_MEMORY , XML_ERR_FATAL , NULL , 0 , extra , regexp , NULL , 0 , 0 , "Memory allocation failed : %s\n" , extra ); location: 385 cross_layer: 3 file: xmlregexp.c
atom -> maxRanges = 0; location: 1236 cross_layer: 2 file: xmlregexp.c
if ( atom -> nbRanges >= atom -> maxRanges )  location: 1239 cross_layer: 2 file: xmlregexp.c
atom -> maxRanges *= 2; location: 1241 cross_layer: 2 file: xmlregexp.c
tmp = ( xmlRegRangePtr * ) xmlRealloc ( atom -> ranges , atom -> maxRanges * sizeof ( xmlRegRangePtr ) ); location: 1242 cross_layer: 2 file: xmlregexp.c
if ( tmp == NULL )  location: 1244 cross_layer: 2 file: xmlregexp.c
xmlRegexpErrMemory ( ctxt , "adding ranges" ); location: 1245 cross_layer: 2 file: xmlregexp.c
static void
xmlRegexpErrMemory(xmlRegParserCtxtPtr ctxt, const char *extra) location: 378 cross_layer: 3 file: xmlregexp.c
if ( ctxt != NULL )  location: 381 cross_layer: 3 file: xmlregexp.c
regexp = ( const char * ) ctxt -> string; location: 382 cross_layer: 3 file: xmlregexp.c
ctxt -> error = XML_ERR_NO_MEMORY; location: 383 cross_layer: 3 file: xmlregexp.c
__xmlRaiseError ( NULL , NULL , NULL , NULL , NULL , XML_FROM_REGEXP , XML_ERR_NO_MEMORY , XML_ERR_FATAL , NULL , 0 , extra , regexp , NULL , 0 , 0 , "Memory allocation failed : %s\n" , extra ); location: 385 cross_layer: 3 file: xmlregexp.c
atom -> maxRanges /= 2; location: 1246 cross_layer: 2 file: xmlregexp.c
atom -> ranges = tmp; location: 1249 cross_layer: 2 file: xmlregexp.c
range = xmlRegNewRange ( ctxt , neg , type , start , end ); location: 1251 cross_layer: 2 file: xmlregexp.c
static xmlRegRangePtr
xmlRegNewRange(xmlRegParserCtxtPtr ctxt,
int neg, xmlRegAtomType type, int start, int end) location: 716 cross_layer: 3 file: xmlregexp.c
xmlRegexpErrMemory ( ctxt , "allocating range" ); location: 721 cross_layer: 3 file: xmlregexp.c
static void
xmlRegexpErrMemory(xmlRegParserCtxtPtr ctxt, const char *extra) location: 378 cross_layer: 4 file: xmlregexp.c
if ( ctxt != NULL )  location: 381 cross_layer: 4 file: xmlregexp.c
regexp = ( const char * ) ctxt -> string; location: 382 cross_layer: 4 file: xmlregexp.c
ctxt -> error = XML_ERR_NO_MEMORY; location: 383 cross_layer: 4 file: xmlregexp.c
__xmlRaiseError ( NULL , NULL , NULL , NULL , NULL , XML_FROM_REGEXP , XML_ERR_NO_MEMORY , XML_ERR_FATAL , NULL , 0 , extra , regexp , NULL , 0 , 0 , "Memory allocation failed : %s\n" , extra ); location: 385 cross_layer: 4 file: xmlregexp.c
ret -> neg = neg; location: 724 cross_layer: 3 file: xmlregexp.c
ret -> type = type; location: 725 cross_layer: 3 file: xmlregexp.c
ret -> start = start; location: 726 cross_layer: 3 file: xmlregexp.c
ret -> end = end; location: 727 cross_layer: 3 file: xmlregexp.c
return ( ret ) ; location: 728 cross_layer: 3 file: xmlregexp.c
if ( range == NULL )  location: 1252 cross_layer: 2 file: xmlregexp.c
range -> blockName = blockName; location: 1254 cross_layer: 2 file: xmlregexp.c
atom -> ranges [ atom -> nbRanges ++ ] = range; location: 1255 cross_layer: 2 file: xmlregexp.c
xmlFAParseCharRange ( ctxt ); location: 5083 cross_layer: 2 file: xmlregexp.c
xmlFAParsePosCharGroup ( ctxt ); location: 5124 cross_layer: 3 file: xmlregexp.c
xmlFAParseCharGroup ( ctxt ); location: 5114 cross_layer: 4 file: xmlregexp.c
------------------------------
2 @@ testCode/CVE-2016-1840_CWE-119_cbb271655cadeb8dbb258a64701d9a3a0c4835b4_xmlregexp.c_OLD.c @@ xmlFAParseCharRange @@ 5060 @@ ['len'] @@ {}
static void
xmlFAParseCharRange(xmlRegParserCtxtPtr ctxt) location: 4987 cross_layer: 1 file: xmlregexp.c
int cur , len ; location: 4988 cross_layer: 1 file: xmlregexp.c
if ( CUR == '\0' )  location: 4992 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 4997 cross_layer: 1 file: xmlregexp.c
if ( cur == '\\' )  location: 4998 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 5000 cross_layer: 1 file: xmlregexp.c
switch ( cur )  location: 5001 cross_layer: 1 file: xmlregexp.c
start = 0xA; location: 5002 cross_layer: 1 file: xmlregexp.c
start = 0xD; location: 5003 cross_layer: 1 file: xmlregexp.c
start = 0x9; location: 5004 cross_layer: 1 file: xmlregexp.c
start = cur; location: 5008 cross_layer: 1 file: xmlregexp.c
len = 1; location: 5014 cross_layer: 1 file: xmlregexp.c
if ( ( cur != 0x5B ) && ( cur != 0x5D ) )  location: 5015 cross_layer: 1 file: xmlregexp.c
end = start = CUR_SCHAR ( ctxt -> cur , len ); location: 5016 cross_layer: 1 file: xmlregexp.c
if ( ( start == '-' ) && ( NXT ( 1 ) != ']' ) && ( PREV != '[' ) && ( PREV != '^' ) )  location: 5025 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 5030 cross_layer: 1 file: xmlregexp.c
if ( ( cur != '-' ) || ( NXT ( 1 ) == ']' ) )  location: 5031 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 5037 cross_layer: 1 file: xmlregexp.c
if ( cur == '\\' )  location: 5038 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 5040 cross_layer: 1 file: xmlregexp.c
switch ( cur )  location: 5041 cross_layer: 1 file: xmlregexp.c
len = 1; location: 5053 cross_layer: 1 file: xmlregexp.c
if ( ( cur != 0x5B ) && ( cur != 0x5D ) )  location: 5054 cross_layer: 1 file: xmlregexp.c
NEXTL ( len ); location: 5060 cross_layer: 1 file: xmlregexp.c
if ( end < start )  location: 5062 cross_layer: 1 file: xmlregexp.c
xmlRegAtomAddRange ( ctxt , ctxt -> atom , ctxt -> neg , XML_REGEXP_CHARVAL , start , end , NULL ); location: 5065 cross_layer: 1 file: xmlregexp.c
static void
xmlRegAtomAddRange(xmlRegParserCtxtPtr ctxt, xmlRegAtomPtr atom,
int neg, xmlRegAtomType type, int start, int end,
xmlChar *blockName) location: 1219 cross_layer: 2 file: xmlregexp.c
if ( atom == NULL )  location: 1222 cross_layer: 2 file: xmlregexp.c
if ( atom -> type != XML_REGEXP_RANGES )  location: 1226 cross_layer: 2 file: xmlregexp.c
if ( atom -> maxRanges == 0 )  location: 1230 cross_layer: 2 file: xmlregexp.c
atom -> maxRanges = 4; location: 1231 cross_layer: 2 file: xmlregexp.c
atom -> ranges = ( xmlRegRangePtr * ) xmlMalloc ( atom -> maxRanges * sizeof ( xmlRegRangePtr ) ); location: 1232 cross_layer: 2 file: xmlregexp.c
if ( atom -> ranges == NULL )  location: 1234 cross_layer: 2 file: xmlregexp.c
xmlRegexpErrMemory ( ctxt , "adding ranges" ); location: 1235 cross_layer: 2 file: xmlregexp.c
static void
xmlRegexpErrMemory(xmlRegParserCtxtPtr ctxt, const char *extra) location: 378 cross_layer: 3 file: xmlregexp.c
if ( ctxt != NULL )  location: 381 cross_layer: 3 file: xmlregexp.c
regexp = ( const char * ) ctxt -> string; location: 382 cross_layer: 3 file: xmlregexp.c
ctxt -> error = XML_ERR_NO_MEMORY; location: 383 cross_layer: 3 file: xmlregexp.c
__xmlRaiseError ( NULL , NULL , NULL , NULL , NULL , XML_FROM_REGEXP , XML_ERR_NO_MEMORY , XML_ERR_FATAL , NULL , 0 , extra , regexp , NULL , 0 , 0 , "Memory allocation failed : %s\n" , extra ); location: 385 cross_layer: 3 file: xmlregexp.c
atom -> maxRanges = 0; location: 1236 cross_layer: 2 file: xmlregexp.c
if ( atom -> nbRanges >= atom -> maxRanges )  location: 1239 cross_layer: 2 file: xmlregexp.c
atom -> maxRanges *= 2; location: 1241 cross_layer: 2 file: xmlregexp.c
tmp = ( xmlRegRangePtr * ) xmlRealloc ( atom -> ranges , atom -> maxRanges * sizeof ( xmlRegRangePtr ) ); location: 1242 cross_layer: 2 file: xmlregexp.c
if ( tmp == NULL )  location: 1244 cross_layer: 2 file: xmlregexp.c
xmlRegexpErrMemory ( ctxt , "adding ranges" ); location: 1245 cross_layer: 2 file: xmlregexp.c
static void
xmlRegexpErrMemory(xmlRegParserCtxtPtr ctxt, const char *extra) location: 378 cross_layer: 3 file: xmlregexp.c
if ( ctxt != NULL )  location: 381 cross_layer: 3 file: xmlregexp.c
regexp = ( const char * ) ctxt -> string; location: 382 cross_layer: 3 file: xmlregexp.c
ctxt -> error = XML_ERR_NO_MEMORY; location: 383 cross_layer: 3 file: xmlregexp.c
__xmlRaiseError ( NULL , NULL , NULL , NULL , NULL , XML_FROM_REGEXP , XML_ERR_NO_MEMORY , XML_ERR_FATAL , NULL , 0 , extra , regexp , NULL , 0 , 0 , "Memory allocation failed : %s\n" , extra ); location: 385 cross_layer: 3 file: xmlregexp.c
atom -> maxRanges /= 2; location: 1246 cross_layer: 2 file: xmlregexp.c
atom -> ranges = tmp; location: 1249 cross_layer: 2 file: xmlregexp.c
range = xmlRegNewRange ( ctxt , neg , type , start , end ); location: 1251 cross_layer: 2 file: xmlregexp.c
static xmlRegRangePtr
xmlRegNewRange(xmlRegParserCtxtPtr ctxt,
int neg, xmlRegAtomType type, int start, int end) location: 716 cross_layer: 3 file: xmlregexp.c
xmlRegexpErrMemory ( ctxt , "allocating range" ); location: 721 cross_layer: 3 file: xmlregexp.c
static void
xmlRegexpErrMemory(xmlRegParserCtxtPtr ctxt, const char *extra) location: 378 cross_layer: 4 file: xmlregexp.c
if ( ctxt != NULL )  location: 381 cross_layer: 4 file: xmlregexp.c
regexp = ( const char * ) ctxt -> string; location: 382 cross_layer: 4 file: xmlregexp.c
ctxt -> error = XML_ERR_NO_MEMORY; location: 383 cross_layer: 4 file: xmlregexp.c
__xmlRaiseError ( NULL , NULL , NULL , NULL , NULL , XML_FROM_REGEXP , XML_ERR_NO_MEMORY , XML_ERR_FATAL , NULL , 0 , extra , regexp , NULL , 0 , 0 , "Memory allocation failed : %s\n" , extra ); location: 385 cross_layer: 4 file: xmlregexp.c
ret -> neg = neg; location: 724 cross_layer: 3 file: xmlregexp.c
ret -> type = type; location: 725 cross_layer: 3 file: xmlregexp.c
ret -> start = start; location: 726 cross_layer: 3 file: xmlregexp.c
ret -> end = end; location: 727 cross_layer: 3 file: xmlregexp.c
return ( ret ) ; location: 728 cross_layer: 3 file: xmlregexp.c
if ( range == NULL )  location: 1252 cross_layer: 2 file: xmlregexp.c
range -> blockName = blockName; location: 1254 cross_layer: 2 file: xmlregexp.c
atom -> ranges [ atom -> nbRanges ++ ] = range; location: 1255 cross_layer: 2 file: xmlregexp.c
xmlFAParseCharRange ( ctxt ); location: 5083 cross_layer: 2 file: xmlregexp.c
xmlFAParsePosCharGroup ( ctxt ); location: 5124 cross_layer: 3 file: xmlregexp.c
xmlFAParseCharGroup ( ctxt ); location: 5144 cross_layer: 4 file: xmlregexp.c
------------------------------
3 @@ testCode/CVE-2016-1840_CWE-119_cbb271655cadeb8dbb258a64701d9a3a0c4835b4_xmlregexp.c_OLD.c @@ xmlFAParseCharRange @@ 5060 @@ ['len'] @@ {}
static void
xmlFAParseCharRange(xmlRegParserCtxtPtr ctxt) location: 4987 cross_layer: 1 file: xmlregexp.c
int cur , len ; location: 4988 cross_layer: 1 file: xmlregexp.c
if ( CUR == '\0' )  location: 4992 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 4997 cross_layer: 1 file: xmlregexp.c
if ( cur == '\\' )  location: 4998 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 5000 cross_layer: 1 file: xmlregexp.c
switch ( cur )  location: 5001 cross_layer: 1 file: xmlregexp.c
start = 0xA; location: 5002 cross_layer: 1 file: xmlregexp.c
start = 0xD; location: 5003 cross_layer: 1 file: xmlregexp.c
start = 0x9; location: 5004 cross_layer: 1 file: xmlregexp.c
start = cur; location: 5008 cross_layer: 1 file: xmlregexp.c
len = 1; location: 5014 cross_layer: 1 file: xmlregexp.c
if ( ( cur != 0x5B ) && ( cur != 0x5D ) )  location: 5015 cross_layer: 1 file: xmlregexp.c
end = start = CUR_SCHAR ( ctxt -> cur , len ); location: 5016 cross_layer: 1 file: xmlregexp.c
if ( ( start == '-' ) && ( NXT ( 1 ) != ']' ) && ( PREV != '[' ) && ( PREV != '^' ) )  location: 5025 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 5030 cross_layer: 1 file: xmlregexp.c
if ( ( cur != '-' ) || ( NXT ( 1 ) == ']' ) )  location: 5031 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 5037 cross_layer: 1 file: xmlregexp.c
if ( cur == '\\' )  location: 5038 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 5040 cross_layer: 1 file: xmlregexp.c
switch ( cur )  location: 5041 cross_layer: 1 file: xmlregexp.c
len = 1; location: 5053 cross_layer: 1 file: xmlregexp.c
if ( ( cur != 0x5B ) && ( cur != 0x5D ) )  location: 5054 cross_layer: 1 file: xmlregexp.c
NEXTL ( len ); location: 5060 cross_layer: 1 file: xmlregexp.c
if ( end < start )  location: 5062 cross_layer: 1 file: xmlregexp.c
xmlRegAtomAddRange ( ctxt , ctxt -> atom , ctxt -> neg , XML_REGEXP_CHARVAL , start , end , NULL ); location: 5065 cross_layer: 1 file: xmlregexp.c
static void
xmlRegAtomAddRange(xmlRegParserCtxtPtr ctxt, xmlRegAtomPtr atom,
int neg, xmlRegAtomType type, int start, int end,
xmlChar *blockName) location: 1219 cross_layer: 2 file: xmlregexp.c
if ( atom == NULL )  location: 1222 cross_layer: 2 file: xmlregexp.c
if ( atom -> type != XML_REGEXP_RANGES )  location: 1226 cross_layer: 2 file: xmlregexp.c
if ( atom -> maxRanges == 0 )  location: 1230 cross_layer: 2 file: xmlregexp.c
atom -> maxRanges = 4; location: 1231 cross_layer: 2 file: xmlregexp.c
atom -> ranges = ( xmlRegRangePtr * ) xmlMalloc ( atom -> maxRanges * sizeof ( xmlRegRangePtr ) ); location: 1232 cross_layer: 2 file: xmlregexp.c
if ( atom -> ranges == NULL )  location: 1234 cross_layer: 2 file: xmlregexp.c
xmlRegexpErrMemory ( ctxt , "adding ranges" ); location: 1235 cross_layer: 2 file: xmlregexp.c
static void
xmlRegexpErrMemory(xmlRegParserCtxtPtr ctxt, const char *extra) location: 378 cross_layer: 3 file: xmlregexp.c
if ( ctxt != NULL )  location: 381 cross_layer: 3 file: xmlregexp.c
regexp = ( const char * ) ctxt -> string; location: 382 cross_layer: 3 file: xmlregexp.c
ctxt -> error = XML_ERR_NO_MEMORY; location: 383 cross_layer: 3 file: xmlregexp.c
__xmlRaiseError ( NULL , NULL , NULL , NULL , NULL , XML_FROM_REGEXP , XML_ERR_NO_MEMORY , XML_ERR_FATAL , NULL , 0 , extra , regexp , NULL , 0 , 0 , "Memory allocation failed : %s\n" , extra ); location: 385 cross_layer: 3 file: xmlregexp.c
atom -> maxRanges = 0; location: 1236 cross_layer: 2 file: xmlregexp.c
if ( atom -> nbRanges >= atom -> maxRanges )  location: 1239 cross_layer: 2 file: xmlregexp.c
atom -> maxRanges *= 2; location: 1241 cross_layer: 2 file: xmlregexp.c
tmp = ( xmlRegRangePtr * ) xmlRealloc ( atom -> ranges , atom -> maxRanges * sizeof ( xmlRegRangePtr ) ); location: 1242 cross_layer: 2 file: xmlregexp.c
if ( tmp == NULL )  location: 1244 cross_layer: 2 file: xmlregexp.c
xmlRegexpErrMemory ( ctxt , "adding ranges" ); location: 1245 cross_layer: 2 file: xmlregexp.c
static void
xmlRegexpErrMemory(xmlRegParserCtxtPtr ctxt, const char *extra) location: 378 cross_layer: 3 file: xmlregexp.c
if ( ctxt != NULL )  location: 381 cross_layer: 3 file: xmlregexp.c
regexp = ( const char * ) ctxt -> string; location: 382 cross_layer: 3 file: xmlregexp.c
ctxt -> error = XML_ERR_NO_MEMORY; location: 383 cross_layer: 3 file: xmlregexp.c
__xmlRaiseError ( NULL , NULL , NULL , NULL , NULL , XML_FROM_REGEXP , XML_ERR_NO_MEMORY , XML_ERR_FATAL , NULL , 0 , extra , regexp , NULL , 0 , 0 , "Memory allocation failed : %s\n" , extra ); location: 385 cross_layer: 3 file: xmlregexp.c
atom -> maxRanges /= 2; location: 1246 cross_layer: 2 file: xmlregexp.c
atom -> ranges = tmp; location: 1249 cross_layer: 2 file: xmlregexp.c
range = xmlRegNewRange ( ctxt , neg , type , start , end ); location: 1251 cross_layer: 2 file: xmlregexp.c
static xmlRegRangePtr
xmlRegNewRange(xmlRegParserCtxtPtr ctxt,
int neg, xmlRegAtomType type, int start, int end) location: 716 cross_layer: 3 file: xmlregexp.c
xmlRegexpErrMemory ( ctxt , "allocating range" ); location: 721 cross_layer: 3 file: xmlregexp.c
static void
xmlRegexpErrMemory(xmlRegParserCtxtPtr ctxt, const char *extra) location: 378 cross_layer: 4 file: xmlregexp.c
if ( ctxt != NULL )  location: 381 cross_layer: 4 file: xmlregexp.c
regexp = ( const char * ) ctxt -> string; location: 382 cross_layer: 4 file: xmlregexp.c
ctxt -> error = XML_ERR_NO_MEMORY; location: 383 cross_layer: 4 file: xmlregexp.c
__xmlRaiseError ( NULL , NULL , NULL , NULL , NULL , XML_FROM_REGEXP , XML_ERR_NO_MEMORY , XML_ERR_FATAL , NULL , 0 , extra , regexp , NULL , 0 , 0 , "Memory allocation failed : %s\n" , extra ); location: 385 cross_layer: 4 file: xmlregexp.c
ret -> neg = neg; location: 724 cross_layer: 3 file: xmlregexp.c
ret -> type = type; location: 725 cross_layer: 3 file: xmlregexp.c
ret -> start = start; location: 726 cross_layer: 3 file: xmlregexp.c
ret -> end = end; location: 727 cross_layer: 3 file: xmlregexp.c
return ( ret ) ; location: 728 cross_layer: 3 file: xmlregexp.c
if ( range == NULL )  location: 1252 cross_layer: 2 file: xmlregexp.c
range -> blockName = blockName; location: 1254 cross_layer: 2 file: xmlregexp.c
atom -> ranges [ atom -> nbRanges ++ ] = range; location: 1255 cross_layer: 2 file: xmlregexp.c
xmlFAParseCharRange ( ctxt ); location: 5083 cross_layer: 2 file: xmlregexp.c
xmlFAParsePosCharGroup ( ctxt ); location: 5107 cross_layer: 3 file: xmlregexp.c
xmlFAParseCharGroup ( ctxt ); location: 5114 cross_layer: 4 file: xmlregexp.c
------------------------------
4 @@ testCode/CVE-2016-1840_CWE-119_cbb271655cadeb8dbb258a64701d9a3a0c4835b4_xmlregexp.c_OLD.c @@ xmlFAParseCharRange @@ 5060 @@ ['len'] @@ {}
static void
xmlFAParseCharRange(xmlRegParserCtxtPtr ctxt) location: 4987 cross_layer: 1 file: xmlregexp.c
int cur , len ; location: 4988 cross_layer: 1 file: xmlregexp.c
if ( CUR == '\0' )  location: 4992 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 4997 cross_layer: 1 file: xmlregexp.c
if ( cur == '\\' )  location: 4998 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 5000 cross_layer: 1 file: xmlregexp.c
switch ( cur )  location: 5001 cross_layer: 1 file: xmlregexp.c
start = 0xA; location: 5002 cross_layer: 1 file: xmlregexp.c
start = 0xD; location: 5003 cross_layer: 1 file: xmlregexp.c
start = 0x9; location: 5004 cross_layer: 1 file: xmlregexp.c
start = cur; location: 5008 cross_layer: 1 file: xmlregexp.c
len = 1; location: 5014 cross_layer: 1 file: xmlregexp.c
if ( ( cur != 0x5B ) && ( cur != 0x5D ) )  location: 5015 cross_layer: 1 file: xmlregexp.c
end = start = CUR_SCHAR ( ctxt -> cur , len ); location: 5016 cross_layer: 1 file: xmlregexp.c
if ( ( start == '-' ) && ( NXT ( 1 ) != ']' ) && ( PREV != '[' ) && ( PREV != '^' ) )  location: 5025 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 5030 cross_layer: 1 file: xmlregexp.c
if ( ( cur != '-' ) || ( NXT ( 1 ) == ']' ) )  location: 5031 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 5037 cross_layer: 1 file: xmlregexp.c
if ( cur == '\\' )  location: 5038 cross_layer: 1 file: xmlregexp.c
cur = CUR; location: 5040 cross_layer: 1 file: xmlregexp.c
switch ( cur )  location: 5041 cross_layer: 1 file: xmlregexp.c
len = 1; location: 5053 cross_layer: 1 file: xmlregexp.c
if ( ( cur != 0x5B ) && ( cur != 0x5D ) )  location: 5054 cross_layer: 1 file: xmlregexp.c
NEXTL ( len ); location: 5060 cross_layer: 1 file: xmlregexp.c
if ( end < start )  location: 5062 cross_layer: 1 file: xmlregexp.c
xmlRegAtomAddRange ( ctxt , ctxt -> atom , ctxt -> neg , XML_REGEXP_CHARVAL , start , end , NULL ); location: 5065 cross_layer: 1 file: xmlregexp.c
static void
xmlRegAtomAddRange(xmlRegParserCtxtPtr ctxt, xmlRegAtomPtr atom,
int neg, xmlRegAtomType type, int start, int end,
xmlChar *blockName) location: 1219 cross_layer: 2 file: xmlregexp.c
if ( atom == NULL )  location: 1222 cross_layer: 2 file: xmlregexp.c
if ( atom -> type != XML_REGEXP_RANGES )  location: 1226 cross_layer: 2 file: xmlregexp.c
if ( atom -> maxRanges == 0 )  location: 1230 cross_layer: 2 file: xmlregexp.c
atom -> maxRanges = 4; location: 1231 cross_layer: 2 file: xmlregexp.c
atom -> ranges = ( xmlRegRangePtr * ) xmlMalloc ( atom -> maxRanges * sizeof ( xmlRegRangePtr ) ); location: 1232 cross_layer: 2 file: xmlregexp.c
if ( atom -> ranges == NULL )  location: 1234 cross_layer: 2 file: xmlregexp.c
xmlRegexpErrMemory ( ctxt , "adding ranges" ); location: 1235 cross_layer: 2 file: xmlregexp.c
static void
xmlRegexpErrMemory(xmlRegParserCtxtPtr ctxt, const char *extra) location: 378 cross_layer: 3 file: xmlregexp.c
if ( ctxt != NULL )  location: 381 cross_layer: 3 file: xmlregexp.c
regexp = ( const char * ) ctxt -> string; location: 382 cross_layer: 3 file: xmlregexp.c
ctxt -> error = XML_ERR_NO_MEMORY; location: 383 cross_layer: 3 file: xmlregexp.c
__xmlRaiseError ( NULL , NULL , NULL , NULL , NULL , XML_FROM_REGEXP , XML_ERR_NO_MEMORY , XML_ERR_FATAL , NULL , 0 , extra , regexp , NULL , 0 , 0 , "Memory allocation failed : %s\n" , extra ); location: 385 cross_layer: 3 file: xmlregexp.c
atom -> maxRanges = 0; location: 1236 cross_layer: 2 file: xmlregexp.c
if ( atom -> nbRanges >= atom -> maxRanges )  location: 1239 cross_layer: 2 file: xmlregexp.c
atom -> maxRanges *= 2; location: 1241 cross_layer: 2 file: xmlregexp.c
tmp = ( xmlRegRangePtr * ) xmlRealloc ( atom -> ranges , atom -> maxRanges * sizeof ( xmlRegRangePtr ) ); location: 1242 cross_layer: 2 file: xmlregexp.c
if ( tmp == NULL )  location: 1244 cross_layer: 2 file: xmlregexp.c
xmlRegexpErrMemory ( ctxt , "adding ranges" ); location: 1245 cross_layer: 2 file: xmlregexp.c
static void
xmlRegexpErrMemory(xmlRegParserCtxtPtr ctxt, const char *extra) location: 378 cross_layer: 3 file: xmlregexp.c
if ( ctxt != NULL )  location: 381 cross_layer: 3 file: xmlregexp.c
regexp = ( const char * ) ctxt -> string; location: 382 cross_layer: 3 file: xmlregexp.c
ctxt -> error = XML_ERR_NO_MEMORY; location: 383 cross_layer: 3 file: xmlregexp.c
__xmlRaiseError ( NULL , NULL , NULL , NULL , NULL , XML_FROM_REGEXP , XML_ERR_NO_MEMORY , XML_ERR_FATAL , NULL , 0 , extra , regexp , NULL , 0 , 0 , "Memory allocation failed : %s\n" , extra ); location: 385 cross_layer: 3 file: xmlregexp.c
atom -> maxRanges /= 2; location: 1246 cross_layer: 2 file: xmlregexp.c
atom -> ranges = tmp; location: 1249 cross_layer: 2 file: xmlregexp.c
range = xmlRegNewRange ( ctxt , neg , type , start , end ); location: 1251 cross_layer: 2 file: xmlregexp.c
static xmlRegRangePtr
xmlRegNewRange(xmlRegParserCtxtPtr ctxt,
int neg, xmlRegAtomType type, int start, int end) location: 716 cross_layer: 3 file: xmlregexp.c
xmlRegexpErrMemory ( ctxt , "allocating range" ); location: 721 cross_layer: 3 file: xmlregexp.c
static void
xmlRegexpErrMemory(xmlRegParserCtxtPtr ctxt, const char *extra) location: 378 cross_layer: 4 file: xmlregexp.c
if ( ctxt != NULL )  location: 381 cross_layer: 4 file: xmlregexp.c
regexp = ( const char * ) ctxt -> string; location: 382 cross_layer: 4 file: xmlregexp.c
ctxt -> error = XML_ERR_NO_MEMORY; location: 383 cross_layer: 4 file: xmlregexp.c
__xmlRaiseError ( NULL , NULL , NULL , NULL , NULL , XML_FROM_REGEXP , XML_ERR_NO_MEMORY , XML_ERR_FATAL , NULL , 0 , extra , regexp , NULL , 0 , 0 , "Memory allocation failed : %s\n" , extra ); location: 385 cross_layer: 4 file: xmlregexp.c
ret -> neg = neg; location: 724 cross_layer: 3 file: xmlregexp.c
ret -> type = type; location: 725 cross_layer: 3 file: xmlregexp.c
ret -> start = start; location: 726 cross_layer: 3 file: xmlregexp.c
ret -> end = end; location: 727 cross_layer: 3 file: xmlregexp.c
return ( ret ) ; location: 728 cross_layer: 3 file: xmlregexp.c
if ( range == NULL )  location: 1252 cross_layer: 2 file: xmlregexp.c
range -> blockName = blockName; location: 1254 cross_layer: 2 file: xmlregexp.c
atom -> ranges [ atom -> nbRanges ++ ] = range; location: 1255 cross_layer: 2 file: xmlregexp.c
xmlFAParseCharRange ( ctxt ); location: 5083 cross_layer: 2 file: xmlregexp.c
xmlFAParsePosCharGroup ( ctxt ); location: 5107 cross_layer: 3 file: xmlregexp.c
xmlFAParseCharGroup ( ctxt ); location: 5144 cross_layer: 4 file: xmlregexp.c
------------------------------
