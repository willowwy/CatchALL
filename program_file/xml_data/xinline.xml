<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="program_file/pre_data\FFmpeg\2\libavcodec\cinepakenc.c" pos:tabs="8"><comment type="block" pos:start="1:1" pos:end="71:3">/*
 * Cinepak encoder (c) 2011 Tomas Härdin
 * http://titan.codemill.se/~tomhar/cinepakenc.patch
 *
 * Fixes and improvements, vintage decoders compatibility
 *  (c) 2013, 2014 Rl, Aetey Global Technologies AB

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

 * TODO:
 * - optimize: color space conversion, ...
 * - implement options to set the min/max number of strips?
 * MAYBE:
 * - "optimally" split the frame into several non-regular areas
 *   using a separate codebook pair for each area and approximating
 *   the area by several rectangular strips (generally not full width ones)
 *   (use quadtree splitting? a simple fixed-granularity grid?)
 *
 *
 * version 2014-01-23 Rl
 * - added option handling for flexibility
 *
 * version 2014-01-21 Rl
 * - believe it or not, now we get even smaller files, with better quality
 *   (which means I missed an optimization earlier :)
 *
 * version 2014-01-20 Rl
 * - made the encoder compatible with vintage decoders
 *   and added some yet unused code for possible future
 *   incremental codebook updates
 * - fixed a small memory leak
 *
 * version 2013-04-28 Rl
 * - bugfixed codebook optimization logic
 *
 * version 2013-02-14 Rl
 * "Valentine's Day" version:
 * - made strip division more robust
 * - minimized bruteforcing the number of strips,
 *   (costs some R/D but speeds up compession a lot), the heuristic
 *   assumption is that score as a function of the number of strips has
 *   one wide minimum which moves slowly, of course not fully true
 * - simplified codebook generation,
 *   the old code was meant for other optimizations than we actually do
 * - optimized the codebook generation / error estimation for MODE_MC
 *
 * version 2013-02-12 Rl
 * - separated codebook training sets, avoided the transfer of wasted bytes,
 *   which yields both better quality and smaller files
 * - now using the correct colorspace (TODO: move conversion to libswscale)
 *
 * version 2013-02-08 Rl
 * - fixes/optimization in multistrip encoding and codebook size choice,
 *   quality/bitrate is now better than that of the binary proprietary encoder
 */</comment>

<cpp:include pos:start="73:1" pos:end="73:35">#<cpp:directive pos:start="73:2" pos:end="73:8">include</cpp:directive> <cpp:file pos:start="73:10" pos:end="73:35">"libavutil/intreadwrite.h"</cpp:file></cpp:include>
<cpp:include pos:start="74:1" pos:end="74:20">#<cpp:directive pos:start="74:2" pos:end="74:8">include</cpp:directive> <cpp:file pos:start="74:10" pos:end="74:20">"avcodec.h"</cpp:file></cpp:include>
<cpp:include pos:start="75:1" pos:end="75:26">#<cpp:directive pos:start="75:2" pos:end="75:8">include</cpp:directive> <cpp:file pos:start="75:10" pos:end="75:26">"libavutil/lfg.h"</cpp:file></cpp:include>
<cpp:include pos:start="76:1" pos:end="76:17">#<cpp:directive pos:start="76:2" pos:end="76:8">include</cpp:directive> <cpp:file pos:start="76:10" pos:end="76:17">"elbg.h"</cpp:file></cpp:include>
<cpp:include pos:start="77:1" pos:end="77:21">#<cpp:directive pos:start="77:2" pos:end="77:8">include</cpp:directive> <cpp:file pos:start="77:10" pos:end="77:21">"internal.h"</cpp:file></cpp:include>

<cpp:include pos:start="79:1" pos:end="79:31">#<cpp:directive pos:start="79:2" pos:end="79:8">include</cpp:directive> <cpp:file pos:start="79:10" pos:end="79:31">"libavutil/avassert.h"</cpp:file></cpp:include>
<cpp:include pos:start="80:1" pos:end="80:26">#<cpp:directive pos:start="80:2" pos:end="80:8">include</cpp:directive> <cpp:file pos:start="80:10" pos:end="80:26">"libavutil/opt.h"</cpp:file></cpp:include>

<cpp:define pos:start="82:1" pos:end="82:27">#<cpp:directive pos:start="82:2" pos:end="82:7">define</cpp:directive> <cpp:macro pos:start="82:9" pos:end="82:24"><name pos:start="82:9" pos:end="82:24">CVID_HEADER_SIZE</name></cpp:macro> <cpp:value pos:start="82:26" pos:end="82:27">10</cpp:value></cpp:define>
<cpp:define pos:start="83:1" pos:end="83:28">#<cpp:directive pos:start="83:2" pos:end="83:7">define</cpp:directive> <cpp:macro pos:start="83:9" pos:end="83:25"><name pos:start="83:9" pos:end="83:25">STRIP_HEADER_SIZE</name></cpp:macro> <cpp:value pos:start="83:27" pos:end="83:28">12</cpp:value></cpp:define>
<cpp:define pos:start="84:1" pos:end="84:27">#<cpp:directive pos:start="84:2" pos:end="84:7">define</cpp:directive> <cpp:macro pos:start="84:9" pos:end="84:25"><name pos:start="84:9" pos:end="84:25">CHUNK_HEADER_SIZE</name></cpp:macro> <cpp:value pos:start="84:27" pos:end="84:27">4</cpp:value></cpp:define>

<cpp:define pos:start="86:1" pos:end="86:17">#<cpp:directive pos:start="86:2" pos:end="86:7">define</cpp:directive> <cpp:macro pos:start="86:9" pos:end="86:15"><name pos:start="86:9" pos:end="86:15">MB_SIZE</name></cpp:macro> <cpp:value pos:start="86:17" pos:end="86:17">4</cpp:value></cpp:define>           <comment type="line" pos:start="86:29" pos:end="86:37">//4x4 MBs</comment>
<cpp:define pos:start="87:1" pos:end="87:33">#<cpp:directive pos:start="87:2" pos:end="87:7">define</cpp:directive> <cpp:macro pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:15">MB_AREA</name></cpp:macro> <cpp:value pos:start="87:17" pos:end="87:33">(MB_SIZE*MB_SIZE)</cpp:value></cpp:define>

<cpp:define pos:start="89:1" pos:end="89:20">#<cpp:directive pos:start="89:2" pos:end="89:7">define</cpp:directive> <cpp:macro pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:18">VECTOR_MAX</name></cpp:macro> <cpp:value pos:start="89:20" pos:end="89:20">6</cpp:value></cpp:define>        <comment type="line" pos:start="89:29" pos:end="89:80">//six or four entries per vector depending on format</comment>
<cpp:define pos:start="90:1" pos:end="90:24">#<cpp:directive pos:start="90:2" pos:end="90:7">define</cpp:directive> <cpp:macro pos:start="90:9" pos:end="90:20"><name pos:start="90:9" pos:end="90:20">CODEBOOK_MAX</name></cpp:macro> <cpp:value pos:start="90:22" pos:end="90:24">256</cpp:value></cpp:define>    <comment type="line" pos:start="90:29" pos:end="90:48">//size of a codebook</comment>

<cpp:define pos:start="92:1" pos:end="92:22">#<cpp:directive pos:start="92:2" pos:end="92:7">define</cpp:directive> <cpp:macro pos:start="92:9" pos:end="92:18"><name pos:start="92:9" pos:end="92:18">MAX_STRIPS</name></cpp:macro>  <cpp:value pos:start="92:21" pos:end="92:22">32</cpp:value></cpp:define>      <comment type="line" pos:start="92:29" pos:end="92:118">//Note: having fewer choices regarding the number of strips speeds up encoding (obviously)</comment>
<cpp:define pos:start="93:1" pos:end="93:21">#<cpp:directive pos:start="93:2" pos:end="93:7">define</cpp:directive> <cpp:macro pos:start="93:9" pos:end="93:18"><name pos:start="93:9" pos:end="93:18">MIN_STRIPS</name></cpp:macro>  <cpp:value pos:start="93:21" pos:end="93:21">1</cpp:value></cpp:define>       <comment type="line" pos:start="93:29" pos:end="93:106">//Note: having more strips speeds up encoding the frame (this is less obvious)</comment>
<comment type="line" pos:start="94:1" pos:end="94:54">// MAX_STRIPS limits the maximum quality you can reach</comment>
<comment type="line" pos:start="95:1" pos:end="95:62">//            when you want hight quality on high resolutions,</comment>
<comment type="line" pos:start="96:1" pos:end="96:63">// MIN_STRIPS limits the minimum efficiently encodable bit rate</comment>
<comment type="line" pos:start="97:1" pos:end="97:32">//            on low resolutions</comment>
<comment type="line" pos:start="98:1" pos:end="98:78">// the numbers are only used for brute force optimization for the first frame,</comment>
<comment type="line" pos:start="99:1" pos:end="99:58">// for the following frames they are adaptively readjusted</comment>
<comment type="line" pos:start="100:1" pos:end="100:76">// NOTE the decoder in ffmpeg has its own arbitrary limitation on the number</comment>
<comment type="line" pos:start="101:1" pos:end="101:26">// of strips, currently 32</comment>

<typedef pos:start="103:1" pos:end="109:14">typedef <type pos:start="103:9" pos:end="109:1"><enum pos:start="103:9" pos:end="109:1">enum <block pos:start="103:14" pos:end="109:1">{
    <decl pos:start="104:5" pos:end="104:20"><name pos:start="104:5" pos:end="104:16">MODE_V1_ONLY</name> <init pos:start="104:18" pos:end="104:20">= <expr pos:start="104:20" pos:end="104:20"><literal type="number" pos:start="104:20" pos:end="104:20">0</literal></expr></init></decl>,
    <decl pos:start="105:5" pos:end="105:14"><name pos:start="105:5" pos:end="105:14">MODE_V1_V4</name></decl>,
    <decl pos:start="106:5" pos:end="106:11"><name pos:start="106:5" pos:end="106:11">MODE_MC</name></decl>,

    <decl pos:start="108:5" pos:end="108:14"><name pos:start="108:5" pos:end="108:14">MODE_COUNT</name></decl>,
}</block></enum></type> <name pos:start="109:3" pos:end="109:13">CinepakMode</name>;</typedef>

<typedef pos:start="111:1" pos:end="117:14">typedef <type pos:start="111:9" pos:end="117:1"><enum pos:start="111:9" pos:end="117:1">enum <block pos:start="111:14" pos:end="117:1">{
    <decl pos:start="112:5" pos:end="112:10"><name pos:start="112:5" pos:end="112:10">ENC_V1</name></decl>,
    <decl pos:start="113:5" pos:end="113:10"><name pos:start="113:5" pos:end="113:10">ENC_V4</name></decl>,
    <decl pos:start="114:5" pos:end="114:12"><name pos:start="114:5" pos:end="114:12">ENC_SKIP</name></decl>,

    <decl pos:start="116:5" pos:end="116:17"><name pos:start="116:5" pos:end="116:17">ENC_UNCERTAIN</name></decl>
}</block></enum></type> <name pos:start="117:3" pos:end="117:13">mb_encoding</name>;</typedef>

<typedef pos:start="119:1" pos:end="126:10">typedef <type pos:start="119:9" pos:end="126:1"><struct pos:start="119:9" pos:end="126:1">struct <block pos:start="119:16" pos:end="126:1">{
    <decl_stmt pos:start="120:5" pos:end="120:18"><decl pos:start="120:5" pos:end="120:17"><type pos:start="120:5" pos:end="120:7"><name pos:start="120:5" pos:end="120:7">int</name></type> <name pos:start="120:9" pos:end="120:17">v1_vector</name></decl>;</decl_stmt>                  <comment type="line" pos:start="120:37" pos:end="120:60">//index into v1 codebook</comment>
    <decl_stmt pos:start="121:5" pos:end="121:17"><decl pos:start="121:5" pos:end="121:16"><type pos:start="121:5" pos:end="121:7"><name pos:start="121:5" pos:end="121:7">int</name></type> <name pos:start="121:9" pos:end="121:16">v1_error</name></decl>;</decl_stmt>                   <comment type="line" pos:start="121:37" pos:end="121:66">//error when using V1 encoding</comment>
    <decl_stmt pos:start="122:5" pos:end="122:21"><decl pos:start="122:5" pos:end="122:20"><type pos:start="122:5" pos:end="122:7"><name pos:start="122:5" pos:end="122:7">int</name></type> <name pos:start="122:9" pos:end="122:20"><name pos:start="122:9" pos:end="122:17">v4_vector</name><index pos:start="122:18" pos:end="122:20">[<expr pos:start="122:19" pos:end="122:19"><literal type="number" pos:start="122:19" pos:end="122:19">4</literal></expr>]</index></name></decl>;</decl_stmt>               <comment type="line" pos:start="122:37" pos:end="122:63">//indices into v4 codebooks</comment>
    <decl_stmt pos:start="123:5" pos:end="123:17"><decl pos:start="123:5" pos:end="123:16"><type pos:start="123:5" pos:end="123:7"><name pos:start="123:5" pos:end="123:7">int</name></type> <name pos:start="123:9" pos:end="123:16">v4_error</name></decl>;</decl_stmt>                   <comment type="line" pos:start="123:37" pos:end="123:66">//error when using V4 encoding</comment>
    <decl_stmt pos:start="124:5" pos:end="124:19"><decl pos:start="124:5" pos:end="124:18"><type pos:start="124:5" pos:end="124:7"><name pos:start="124:5" pos:end="124:7">int</name></type> <name pos:start="124:9" pos:end="124:18">skip_error</name></decl>;</decl_stmt>                 <comment type="line" pos:start="124:37" pos:end="124:94">//error when block is skipped (aka copied from last frame)</comment>
    <decl_stmt pos:start="125:5" pos:end="125:30"><decl pos:start="125:5" pos:end="125:29"><type pos:start="125:5" pos:end="125:15"><name pos:start="125:5" pos:end="125:15">mb_encoding</name></type> <name pos:start="125:17" pos:end="125:29">best_encoding</name></decl>;</decl_stmt>      <comment type="line" pos:start="125:37" pos:end="125:77">//last result from calculate_mode_score()</comment>
}</block></struct></type> <name pos:start="126:3" pos:end="126:9">mb_info</name>;</typedef>

<typedef pos:start="128:1" pos:end="134:13">typedef <type pos:start="128:9" pos:end="134:1"><struct pos:start="128:9" pos:end="134:1">struct <block pos:start="128:16" pos:end="134:1">{
    <decl_stmt pos:start="129:5" pos:end="129:45"><decl pos:start="129:5" pos:end="129:44"><type pos:start="129:5" pos:end="129:7"><name pos:start="129:5" pos:end="129:7">int</name></type> <name pos:start="129:9" pos:end="129:44"><name pos:start="129:9" pos:end="129:19">v1_codebook</name><index pos:start="129:20" pos:end="129:44">[<expr pos:start="129:21" pos:end="129:43"><name pos:start="129:21" pos:end="129:32">CODEBOOK_MAX</name><operator pos:start="129:33" pos:end="129:33">*</operator><name pos:start="129:34" pos:end="129:43">VECTOR_MAX</name></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="130:5" pos:end="130:45"><decl pos:start="130:5" pos:end="130:44"><type pos:start="130:5" pos:end="130:7"><name pos:start="130:5" pos:end="130:7">int</name></type> <name pos:start="130:9" pos:end="130:44"><name pos:start="130:9" pos:end="130:19">v4_codebook</name><index pos:start="130:20" pos:end="130:44">[<expr pos:start="130:21" pos:end="130:43"><name pos:start="130:21" pos:end="130:32">CODEBOOK_MAX</name><operator pos:start="130:33" pos:end="130:33">*</operator><name pos:start="130:34" pos:end="130:43">VECTOR_MAX</name></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="131:5" pos:end="131:16"><decl pos:start="131:5" pos:end="131:15"><type pos:start="131:5" pos:end="131:7"><name pos:start="131:5" pos:end="131:7">int</name></type> <name pos:start="131:9" pos:end="131:15">v1_size</name></decl>;</decl_stmt>
    <decl_stmt pos:start="132:5" pos:end="132:16"><decl pos:start="132:5" pos:end="132:15"><type pos:start="132:5" pos:end="132:7"><name pos:start="132:5" pos:end="132:7">int</name></type> <name pos:start="132:9" pos:end="132:15">v4_size</name></decl>;</decl_stmt>
    <decl_stmt pos:start="133:5" pos:end="133:21"><decl pos:start="133:5" pos:end="133:20"><type pos:start="133:5" pos:end="133:15"><name pos:start="133:5" pos:end="133:15">CinepakMode</name></type> <name pos:start="133:17" pos:end="133:20">mode</name></decl>;</decl_stmt>
}</block></struct></type> <name pos:start="134:3" pos:end="134:12">strip_info</name>;</typedef>

<typedef pos:start="136:1" pos:end="170:0">typedef <type pos:start="136:9" pos:end="166:1"><struct pos:start="136:9" pos:end="166:1">struct <block pos:start="136:16" pos:end="166:1">{
    <decl_stmt pos:start="137:5" pos:end="137:25"><decl pos:start="137:5" pos:end="137:24"><type pos:start="137:5" pos:end="137:19"><specifier pos:start="137:5" pos:end="137:9">const</specifier> <name pos:start="137:11" pos:end="137:17">AVClass</name> <modifier pos:start="137:19" pos:end="137:19">*</modifier></type><name pos:start="137:20" pos:end="137:24">class</name></decl>;</decl_stmt>
    <decl_stmt pos:start="138:5" pos:end="138:26"><decl pos:start="138:5" pos:end="138:25"><type pos:start="138:5" pos:end="138:20"><name pos:start="138:5" pos:end="138:18">AVCodecContext</name> <modifier pos:start="138:20" pos:end="138:20">*</modifier></type><name pos:start="138:21" pos:end="138:25">avctx</name></decl>;</decl_stmt>
    <decl_stmt pos:start="139:5" pos:end="139:56"><decl pos:start="139:5" pos:end="139:31"><type pos:start="139:5" pos:end="139:19"><name pos:start="139:5" pos:end="139:12">unsigned</name> <name pos:start="139:14" pos:end="139:17">char</name> <modifier pos:start="139:19" pos:end="139:19">*</modifier></type><name pos:start="139:20" pos:end="139:31"><name pos:start="139:20" pos:end="139:28">pict_bufs</name><index pos:start="139:29" pos:end="139:31">[<expr pos:start="139:30" pos:end="139:30"><literal type="number" pos:start="139:30" pos:end="139:30">4</literal></expr>]</index></name></decl>, <modifier pos:start="139:34" pos:end="139:34">*</modifier><name pos:start="139:35" pos:end="139:43">strip_buf</name>, <modifier pos:start="139:46" pos:end="139:46">*</modifier><name pos:start="139:47" pos:end="139:55">frame_buf</name>;</decl_stmt>
    <decl_stmt pos:start="140:5" pos:end="140:24"><decl pos:start="140:5" pos:end="140:23"><type pos:start="140:5" pos:end="140:13"><name pos:start="140:5" pos:end="140:11">AVFrame</name> <modifier pos:start="140:13" pos:end="140:13">*</modifier></type><name pos:start="140:14" pos:end="140:23">last_frame</name></decl>;</decl_stmt>
    <decl_stmt pos:start="141:5" pos:end="141:24"><decl pos:start="141:5" pos:end="141:23"><type pos:start="141:5" pos:end="141:13"><name pos:start="141:5" pos:end="141:11">AVFrame</name> <modifier pos:start="141:13" pos:end="141:13">*</modifier></type><name pos:start="141:14" pos:end="141:23">best_frame</name></decl>;</decl_stmt>
    <decl_stmt pos:start="142:5" pos:end="142:27"><decl pos:start="142:5" pos:end="142:26"><type pos:start="142:5" pos:end="142:13"><name pos:start="142:5" pos:end="142:11">AVFrame</name> <modifier pos:start="142:13" pos:end="142:13">*</modifier></type><name pos:start="142:14" pos:end="142:26">scratch_frame</name></decl>;</decl_stmt>
    <decl_stmt pos:start="143:5" pos:end="143:25"><decl pos:start="143:5" pos:end="143:24"><type pos:start="143:5" pos:end="143:13"><name pos:start="143:5" pos:end="143:11">AVFrame</name> <modifier pos:start="143:13" pos:end="143:13">*</modifier></type><name pos:start="143:14" pos:end="143:24">input_frame</name></decl>;</decl_stmt>
    <decl_stmt pos:start="144:5" pos:end="144:31"><decl pos:start="144:5" pos:end="144:30"><type pos:start="144:5" pos:end="144:22"><name pos:start="144:5" pos:end="144:22"><name pos:start="144:5" pos:end="144:8">enum</name> <name pos:start="144:10" pos:end="144:22">AVPixelFormat</name></name></type> <name pos:start="144:24" pos:end="144:30">pix_fmt</name></decl>;</decl_stmt>
    <decl_stmt pos:start="145:5" pos:end="145:13"><decl pos:start="145:5" pos:end="145:9"><type pos:start="145:5" pos:end="145:7"><name pos:start="145:5" pos:end="145:7">int</name></type> <name pos:start="145:9" pos:end="145:9">w</name></decl>, <name pos:start="145:12" pos:end="145:12">h</name>;</decl_stmt>
    <decl_stmt pos:start="146:5" pos:end="146:23"><decl pos:start="146:5" pos:end="146:22"><type pos:start="146:5" pos:end="146:7"><name pos:start="146:5" pos:end="146:7">int</name></type> <name pos:start="146:9" pos:end="146:22">frame_buf_size</name></decl>;</decl_stmt>
    <decl_stmt pos:start="147:5" pos:end="147:25"><decl pos:start="147:5" pos:end="147:16"><type pos:start="147:5" pos:end="147:7"><name pos:start="147:5" pos:end="147:7">int</name></type> <name pos:start="147:9" pos:end="147:16">curframe</name></decl>, <name pos:start="147:19" pos:end="147:24">keyint</name>;</decl_stmt>
    <decl_stmt pos:start="148:5" pos:end="148:18"><decl pos:start="148:5" pos:end="148:17"><type pos:start="148:5" pos:end="148:9"><name pos:start="148:5" pos:end="148:9">AVLFG</name></type> <name pos:start="148:11" pos:end="148:17">randctx</name></decl>;</decl_stmt>
    <decl_stmt pos:start="149:5" pos:end="149:20"><decl pos:start="149:5" pos:end="149:19"><type pos:start="149:5" pos:end="149:12"><name pos:start="149:5" pos:end="149:12">uint64_t</name></type> <name pos:start="149:14" pos:end="149:19">lambda</name></decl>;</decl_stmt>
    <decl_stmt pos:start="150:5" pos:end="150:24"><decl pos:start="150:5" pos:end="150:23"><type pos:start="150:5" pos:end="150:9"><name pos:start="150:5" pos:end="150:7">int</name> <modifier pos:start="150:9" pos:end="150:9">*</modifier></type><name pos:start="150:10" pos:end="150:23">codebook_input</name></decl>;</decl_stmt>
    <decl_stmt pos:start="151:5" pos:end="151:26"><decl pos:start="151:5" pos:end="151:25"><type pos:start="151:5" pos:end="151:9"><name pos:start="151:5" pos:end="151:7">int</name> <modifier pos:start="151:9" pos:end="151:9">*</modifier></type><name pos:start="151:10" pos:end="151:25">codebook_closest</name></decl>;</decl_stmt>
    <decl_stmt pos:start="152:5" pos:end="152:16"><decl pos:start="152:5" pos:end="152:15"><type pos:start="152:5" pos:end="152:13"><name pos:start="152:5" pos:end="152:11">mb_info</name> <modifier pos:start="152:13" pos:end="152:13">*</modifier></type><name pos:start="152:14" pos:end="152:15">mb</name></decl>;</decl_stmt>                                <comment type="line" pos:start="152:49" pos:end="152:61">//MB RD state</comment>
    <decl_stmt pos:start="153:5" pos:end="153:19"><decl pos:start="153:5" pos:end="153:18"><type pos:start="153:5" pos:end="153:7"><name pos:start="153:5" pos:end="153:7">int</name></type> <name pos:start="153:9" pos:end="153:18">min_strips</name></decl>;</decl_stmt>          <comment type="line" pos:start="153:30" pos:end="153:48">//the current limit</comment>
    <decl_stmt pos:start="154:5" pos:end="156:0"><decl pos:start="154:5" pos:end="154:18"><type pos:start="154:5" pos:end="154:7"><name pos:start="154:5" pos:end="154:7">int</name></type> <name pos:start="154:9" pos:end="154:18">max_strips</name></decl>;</decl_stmt>          <comment type="line" pos:start="154:30" pos:end="154:48">//the current limit</comment>
<cpp:ifdef pos:start="155:1" pos:end="155:23">#<cpp:directive pos:start="155:2" pos:end="155:6">ifdef</cpp:directive> <name pos:start="155:8" pos:end="155:23">CINEPAKENC_DEBUG</name></cpp:ifdef>
    <decl_stmt pos:start="156:5" pos:end="156:21"><decl pos:start="156:5" pos:end="156:20"><type pos:start="156:5" pos:end="156:13"><name pos:start="156:5" pos:end="156:11">mb_info</name> <modifier pos:start="156:13" pos:end="156:13">*</modifier></type><name pos:start="156:14" pos:end="156:20">best_mb</name></decl>;</decl_stmt>                           <comment type="line" pos:start="156:49" pos:end="156:92">//TODO: remove. only used for printing stats</comment>
    <decl_stmt pos:start="157:5" pos:end="157:46"><decl pos:start="157:5" pos:end="157:19"><type pos:start="157:5" pos:end="157:7"><name pos:start="157:5" pos:end="157:7">int</name></type> <name pos:start="157:9" pos:end="157:19">num_v1_mode</name></decl>, <name pos:start="157:22" pos:end="157:32">num_v4_mode</name>, <name pos:start="157:35" pos:end="157:45">num_mc_mode</name>;</decl_stmt>
    <decl_stmt pos:start="158:5" pos:end="160:0"><decl pos:start="158:5" pos:end="158:19"><type pos:start="158:5" pos:end="158:7"><name pos:start="158:5" pos:end="158:7">int</name></type> <name pos:start="158:9" pos:end="158:19">num_v1_encs</name></decl>, <name pos:start="158:22" pos:end="158:32">num_v4_encs</name>, <name pos:start="158:35" pos:end="158:43">num_skips</name>;</decl_stmt>
<cpp:endif pos:start="159:1" pos:end="159:6">#<cpp:directive pos:start="159:2" pos:end="159:6">endif</cpp:directive></cpp:endif>
<comment type="line" pos:start="160:1" pos:end="160:10">// options</comment>
    <decl_stmt pos:start="161:5" pos:end="161:32"><decl pos:start="161:5" pos:end="161:31"><type pos:start="161:5" pos:end="161:7"><name pos:start="161:5" pos:end="161:7">int</name></type> <name pos:start="161:9" pos:end="161:31">max_extra_cb_iterations</name></decl>;</decl_stmt>
    <decl_stmt pos:start="162:5" pos:end="162:22"><decl pos:start="162:5" pos:end="162:21"><type pos:start="162:5" pos:end="162:7"><name pos:start="162:5" pos:end="162:7">int</name></type> <name pos:start="162:9" pos:end="162:21">skip_empty_cb</name></decl>;</decl_stmt>
    <decl_stmt pos:start="163:5" pos:end="163:23"><decl pos:start="163:5" pos:end="163:22"><type pos:start="163:5" pos:end="163:7"><name pos:start="163:5" pos:end="163:7">int</name></type> <name pos:start="163:9" pos:end="163:22">min_min_strips</name></decl>;</decl_stmt>
    <decl_stmt pos:start="164:5" pos:end="164:23"><decl pos:start="164:5" pos:end="164:22"><type pos:start="164:5" pos:end="164:7"><name pos:start="164:5" pos:end="164:7">int</name></type> <name pos:start="164:9" pos:end="164:22">max_max_strips</name></decl>;</decl_stmt>
    <decl_stmt pos:start="165:5" pos:end="165:33"><decl pos:start="165:5" pos:end="165:32"><type pos:start="165:5" pos:end="165:7"><name pos:start="165:5" pos:end="165:7">int</name></type> <name pos:start="165:9" pos:end="165:32">strip_number_delta_range</name></decl>;</decl_stmt>
}</block></struct></type> <name pos:start="166:3" pos:end="166:19">CinepakEncContext</name>;</typedef>

<cpp:define pos:start="168:1" pos:end="168:48">#<cpp:directive pos:start="168:2" pos:end="168:7">define</cpp:directive> <cpp:macro pos:start="168:9" pos:end="168:17"><name pos:start="168:9" pos:end="168:14">OFFSET</name><parameter_list pos:start="168:15" pos:end="168:17">(<parameter pos:start="168:16" pos:end="168:16"><type pos:start="168:16" pos:end="168:16"><name pos:start="168:16" pos:end="168:16">x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="168:19" pos:end="168:48">offsetof(CinepakEncContext, x)</cpp:value></cpp:define>
<cpp:define pos:start="169:1" pos:end="169:63">#<cpp:directive pos:start="169:2" pos:end="169:7">define</cpp:directive> <cpp:macro pos:start="169:9" pos:end="169:10"><name pos:start="169:9" pos:end="169:10">VE</name></cpp:macro> <cpp:value pos:start="169:12" pos:end="169:63">AV_OPT_FLAG_VIDEO_PARAM | AV_OPT_FLAG_ENCODING_PARAM</cpp:value></cpp:define>
<decl_stmt pos:start="170:1" pos:end="177:2"><decl pos:start="170:1" pos:end="177:1"><type pos:start="170:1" pos:end="170:21"><specifier pos:start="170:1" pos:end="170:6">static</specifier> <specifier pos:start="170:8" pos:end="170:12">const</specifier> <name pos:start="170:14" pos:end="170:21">AVOption</name></type> <name pos:start="170:23" pos:end="170:31"><name pos:start="170:23" pos:end="170:29">options</name><index pos:start="170:30" pos:end="170:31">[]</index></name> <init pos:start="170:33" pos:end="177:1">= <expr pos:start="170:35" pos:end="177:1"><block pos:start="170:35" pos:end="177:1">{
    <expr pos:start="171:5" pos:end="171:183"><block pos:start="171:5" pos:end="171:183">{ <expr pos:start="171:7" pos:end="171:31"><literal type="string" pos:start="171:7" pos:end="171:31">"max_extra_cb_iterations"</literal></expr>, <expr pos:start="171:34" pos:end="171:101"><literal type="string" pos:start="171:34" pos:end="171:101">"Max extra codebook recalculation passes, more is better and slower"</literal></expr>, <expr pos:start="171:104" pos:end="171:134"><call pos:start="171:104" pos:end="171:134"><name pos:start="171:104" pos:end="171:109">OFFSET</name><argument_list pos:start="171:110" pos:end="171:134">(<argument pos:start="171:111" pos:end="171:133"><expr pos:start="171:111" pos:end="171:133"><name pos:start="171:111" pos:end="171:133">max_extra_cb_iterations</name></expr></argument>)</argument_list></call></expr>, <expr pos:start="171:137" pos:end="171:151"><name pos:start="171:137" pos:end="171:151">AV_OPT_TYPE_INT</name></expr>, <expr pos:start="171:154" pos:end="171:165"><block pos:start="171:154" pos:end="171:165">{ <expr pos:start="171:156" pos:end="171:163"><operator pos:start="171:156" pos:end="171:156">.</operator><name pos:start="171:157" pos:end="171:159">i64</name> <operator pos:start="171:161" pos:end="171:161">=</operator> <literal type="number" pos:start="171:163" pos:end="171:163">2</literal></expr> }</block></expr>, <expr pos:start="171:168" pos:end="171:168"><literal type="number" pos:start="171:168" pos:end="171:168">0</literal></expr>, <expr pos:start="171:171" pos:end="171:177"><name pos:start="171:171" pos:end="171:177">INT_MAX</name></expr>, <expr pos:start="171:180" pos:end="171:181"><name pos:start="171:180" pos:end="171:181">VE</name></expr> }</block></expr>,
    <expr pos:start="172:5" pos:end="172:141"><block pos:start="172:5" pos:end="172:141">{ <expr pos:start="172:7" pos:end="172:21"><literal type="string" pos:start="172:7" pos:end="172:21">"skip_empty_cb"</literal></expr>, <expr pos:start="172:24" pos:end="172:74"><literal type="string" pos:start="172:24" pos:end="172:74">"Avoid wasting bytes, ignore vintage MacOS decoder"</literal></expr>, <expr pos:start="172:77" pos:end="172:97"><call pos:start="172:77" pos:end="172:97"><name pos:start="172:77" pos:end="172:82">OFFSET</name><argument_list pos:start="172:83" pos:end="172:97">(<argument pos:start="172:84" pos:end="172:96"><expr pos:start="172:84" pos:end="172:96"><name pos:start="172:84" pos:end="172:96">skip_empty_cb</name></expr></argument>)</argument_list></call></expr>, <expr pos:start="172:100" pos:end="172:115"><name pos:start="172:100" pos:end="172:115">AV_OPT_TYPE_BOOL</name></expr>, <expr pos:start="172:118" pos:end="172:129"><block pos:start="172:118" pos:end="172:129">{ <expr pos:start="172:120" pos:end="172:127"><operator pos:start="172:120" pos:end="172:120">.</operator><name pos:start="172:121" pos:end="172:123">i64</name> <operator pos:start="172:125" pos:end="172:125">=</operator> <literal type="number" pos:start="172:127" pos:end="172:127">0</literal></expr> }</block></expr>, <expr pos:start="172:132" pos:end="172:132"><literal type="number" pos:start="172:132" pos:end="172:132">0</literal></expr>, <expr pos:start="172:135" pos:end="172:135"><literal type="number" pos:start="172:135" pos:end="172:135">1</literal></expr>, <expr pos:start="172:138" pos:end="172:139"><name pos:start="172:138" pos:end="172:139">VE</name></expr> }</block></expr>,
    <expr pos:start="173:5" pos:end="173:184"><block pos:start="173:5" pos:end="173:184">{ <expr pos:start="173:7" pos:end="173:18"><literal type="string" pos:start="173:7" pos:end="173:18">"max_strips"</literal></expr>, <expr pos:start="173:21" pos:end="173:99"><literal type="string" pos:start="173:21" pos:end="173:99">"Limit strips/frame, vintage compatible is 1..3, otherwise the more the better"</literal></expr>, <expr pos:start="173:102" pos:end="173:123"><call pos:start="173:102" pos:end="173:123"><name pos:start="173:102" pos:end="173:107">OFFSET</name><argument_list pos:start="173:108" pos:end="173:123">(<argument pos:start="173:109" pos:end="173:122"><expr pos:start="173:109" pos:end="173:122"><name pos:start="173:109" pos:end="173:122">max_max_strips</name></expr></argument>)</argument_list></call></expr>, <expr pos:start="173:126" pos:end="173:140"><name pos:start="173:126" pos:end="173:140">AV_OPT_TYPE_INT</name></expr>, <expr pos:start="173:143" pos:end="173:154"><block pos:start="173:143" pos:end="173:154">{ <expr pos:start="173:145" pos:end="173:152"><operator pos:start="173:145" pos:end="173:145">.</operator><name pos:start="173:146" pos:end="173:148">i64</name> <operator pos:start="173:150" pos:end="173:150">=</operator> <literal type="number" pos:start="173:152" pos:end="173:152">3</literal></expr> }</block></expr>, <expr pos:start="173:157" pos:end="173:166"><name pos:start="173:157" pos:end="173:166">MIN_STRIPS</name></expr>, <expr pos:start="173:169" pos:end="173:178"><name pos:start="173:169" pos:end="173:178">MAX_STRIPS</name></expr>, <expr pos:start="173:181" pos:end="173:182"><name pos:start="173:181" pos:end="173:182">VE</name></expr> }</block></expr>,
    <expr pos:start="174:5" pos:end="174:189"><block pos:start="174:5" pos:end="174:189">{ <expr pos:start="174:7" pos:end="174:18"><literal type="string" pos:start="174:7" pos:end="174:18">"min_strips"</literal></expr>, <expr pos:start="174:21" pos:end="174:95"><literal type="string" pos:start="174:21" pos:end="174:95">"Enforce min strips/frame, more is worse and faster, must be &lt;= max_strips"</literal></expr>, <expr pos:start="174:98" pos:end="174:119"><call pos:start="174:98" pos:end="174:119"><name pos:start="174:98" pos:end="174:103">OFFSET</name><argument_list pos:start="174:104" pos:end="174:119">(<argument pos:start="174:105" pos:end="174:118"><expr pos:start="174:105" pos:end="174:118"><name pos:start="174:105" pos:end="174:118">min_min_strips</name></expr></argument>)</argument_list></call></expr>, <expr pos:start="174:122" pos:end="174:136"><name pos:start="174:122" pos:end="174:136">AV_OPT_TYPE_INT</name></expr>, <expr pos:start="174:139" pos:end="174:159"><block pos:start="174:139" pos:end="174:159">{ <expr pos:start="174:141" pos:end="174:157"><operator pos:start="174:141" pos:end="174:141">.</operator><name pos:start="174:142" pos:end="174:144">i64</name> <operator pos:start="174:146" pos:end="174:146">=</operator> <name pos:start="174:148" pos:end="174:157">MIN_STRIPS</name></expr> }</block></expr>, <expr pos:start="174:162" pos:end="174:171"><name pos:start="174:162" pos:end="174:171">MIN_STRIPS</name></expr>, <expr pos:start="174:174" pos:end="174:183"><name pos:start="174:174" pos:end="174:183">MAX_STRIPS</name></expr>, <expr pos:start="174:186" pos:end="174:187"><name pos:start="174:186" pos:end="174:187">VE</name></expr> }</block></expr>,
    <expr pos:start="175:5" pos:end="175:202"><block pos:start="175:5" pos:end="175:202">{ <expr pos:start="175:7" pos:end="175:31"><literal type="string" pos:start="175:7" pos:end="175:31">"strip_number_adaptivity"</literal></expr>, <expr pos:start="175:34" pos:end="175:105"><literal type="string" pos:start="175:34" pos:end="175:105">"How fast the strip number adapts, more is slightly better, much slower"</literal></expr>, <expr pos:start="175:108" pos:end="175:139"><call pos:start="175:108" pos:end="175:139"><name pos:start="175:108" pos:end="175:113">OFFSET</name><argument_list pos:start="175:114" pos:end="175:139">(<argument pos:start="175:115" pos:end="175:138"><expr pos:start="175:115" pos:end="175:138"><name pos:start="175:115" pos:end="175:138">strip_number_delta_range</name></expr></argument>)</argument_list></call></expr>, <expr pos:start="175:142" pos:end="175:156"><name pos:start="175:142" pos:end="175:156">AV_OPT_TYPE_INT</name></expr>, <expr pos:start="175:159" pos:end="175:170"><block pos:start="175:159" pos:end="175:170">{ <expr pos:start="175:161" pos:end="175:168"><operator pos:start="175:161" pos:end="175:161">.</operator><name pos:start="175:162" pos:end="175:164">i64</name> <operator pos:start="175:166" pos:end="175:166">=</operator> <literal type="number" pos:start="175:168" pos:end="175:168">0</literal></expr> }</block></expr>, <expr pos:start="175:173" pos:end="175:173"><literal type="number" pos:start="175:173" pos:end="175:173">0</literal></expr>, <expr pos:start="175:176" pos:end="175:196"><name pos:start="175:176" pos:end="175:185">MAX_STRIPS</name><operator pos:start="175:186" pos:end="175:186">-</operator><name pos:start="175:187" pos:end="175:196">MIN_STRIPS</name></expr>, <expr pos:start="175:199" pos:end="175:200"><name pos:start="175:199" pos:end="175:200">VE</name></expr> }</block></expr>,
    <expr pos:start="176:5" pos:end="176:12"><block pos:start="176:5" pos:end="176:12">{ <expr pos:start="176:7" pos:end="176:10"><name pos:start="176:7" pos:end="176:10">NULL</name></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt pos:start="179:1" pos:end="184:2"><decl pos:start="179:1" pos:end="184:1"><type pos:start="179:1" pos:end="179:20"><specifier pos:start="179:1" pos:end="179:6">static</specifier> <specifier pos:start="179:8" pos:end="179:12">const</specifier> <name pos:start="179:14" pos:end="179:20">AVClass</name></type> <name pos:start="179:22" pos:end="179:34">cinepak_class</name> <init pos:start="179:36" pos:end="184:1">= <expr pos:start="179:38" pos:end="184:1"><block pos:start="179:38" pos:end="184:1">{
    <expr pos:start="180:5" pos:end="180:27"><operator pos:start="180:5" pos:end="180:5">.</operator><name pos:start="180:6" pos:end="180:15">class_name</name> <operator pos:start="180:17" pos:end="180:17">=</operator> <literal type="string" pos:start="180:19" pos:end="180:27">"cinepak"</literal></expr>,
    <expr pos:start="181:5" pos:end="181:38"><operator pos:start="181:5" pos:end="181:5">.</operator><name pos:start="181:6" pos:end="181:14">item_name</name>  <operator pos:start="181:17" pos:end="181:17">=</operator> <name pos:start="181:19" pos:end="181:38">av_default_item_name</name></expr>,
    <expr pos:start="182:5" pos:end="182:25"><operator pos:start="182:5" pos:end="182:5">.</operator><name pos:start="182:6" pos:end="182:11">option</name>     <operator pos:start="182:17" pos:end="182:17">=</operator> <name pos:start="182:19" pos:end="182:25">options</name></expr>,
    <expr pos:start="183:5" pos:end="183:39"><operator pos:start="183:5" pos:end="183:5">.</operator><name pos:start="183:6" pos:end="183:12">version</name>    <operator pos:start="183:17" pos:end="183:17">=</operator> <name pos:start="183:19" pos:end="183:39">LIBAVUTIL_VERSION_INT</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<function pos:start="186:1" pos:end="312:1"><type pos:start="186:1" pos:end="186:18"><specifier pos:start="186:1" pos:end="186:6">static</specifier> <name pos:start="186:8" pos:end="186:14">av_cold</name> <name pos:start="186:16" pos:end="186:18">int</name></type> <name pos:start="186:20" pos:end="186:38">cinepak_encode_init</name><parameter_list pos:start="186:39" pos:end="186:61">(<parameter pos:start="186:40" pos:end="186:60"><decl pos:start="186:40" pos:end="186:60"><type pos:start="186:40" pos:end="186:55"><name pos:start="186:40" pos:end="186:53">AVCodecContext</name> <modifier pos:start="186:55" pos:end="186:55">*</modifier></type><name pos:start="186:56" pos:end="186:60">avctx</name></decl></parameter>)</parameter_list>
<block pos:start="187:1" pos:end="312:1">{<block_content pos:start="188:5" pos:end="311:27">
    <decl_stmt pos:start="188:5" pos:end="188:44"><decl pos:start="188:5" pos:end="188:43"><type pos:start="188:5" pos:end="188:23"><name pos:start="188:5" pos:end="188:21">CinepakEncContext</name> <modifier pos:start="188:23" pos:end="188:23">*</modifier></type><name pos:start="188:24" pos:end="188:24">s</name> <init pos:start="188:26" pos:end="188:43">= <expr pos:start="188:28" pos:end="188:43"><name pos:start="188:28" pos:end="188:43"><name pos:start="188:28" pos:end="188:32">avctx</name><operator pos:start="188:33" pos:end="188:34">-&gt;</operator><name pos:start="188:35" pos:end="188:43">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="189:5" pos:end="189:52"><decl pos:start="189:5" pos:end="189:9"><type pos:start="189:5" pos:end="189:7"><name pos:start="189:5" pos:end="189:7">int</name></type> <name pos:start="189:9" pos:end="189:9">x</name></decl>, <decl pos:start="189:12" pos:end="189:19"><type ref="prev" pos:start="189:5" pos:end="189:7"/><name pos:start="189:12" pos:end="189:19">mb_count</name></decl>, <decl pos:start="189:22" pos:end="189:35"><type ref="prev" pos:start="189:5" pos:end="189:7"/><name pos:start="189:22" pos:end="189:35">strip_buf_size</name></decl>, <decl pos:start="189:38" pos:end="189:51"><type ref="prev" pos:start="189:5" pos:end="189:7"/><name pos:start="189:38" pos:end="189:51">frame_buf_size</name></decl>;</decl_stmt>

    <if_stmt pos:start="191:5" pos:end="195:5"><if pos:start="191:5" pos:end="195:5">if <condition pos:start="191:8" pos:end="191:46">(<expr pos:start="191:9" pos:end="191:45"><name pos:start="191:9" pos:end="191:20"><name pos:start="191:9" pos:end="191:13">avctx</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:20">width</name></name> <operator pos:start="191:22" pos:end="191:22">&amp;</operator> <literal type="number" pos:start="191:24" pos:end="191:24">3</literal> <operator pos:start="191:26" pos:end="191:27">||</operator> <name pos:start="191:29" pos:end="191:41"><name pos:start="191:29" pos:end="191:33">avctx</name><operator pos:start="191:34" pos:end="191:35">-&gt;</operator><name pos:start="191:36" pos:end="191:41">height</name></name> <operator pos:start="191:43" pos:end="191:43">&amp;</operator> <literal type="number" pos:start="191:45" pos:end="191:45">3</literal></expr>)</condition> <block pos:start="191:48" pos:end="195:5">{<block_content pos:start="192:9" pos:end="194:31">
        <expr_stmt pos:start="192:9" pos:end="193:45"><expr pos:start="192:9" pos:end="193:44"><call pos:start="192:9" pos:end="193:44"><name pos:start="192:9" pos:end="192:14">av_log</name><argument_list pos:start="192:15" pos:end="193:44">(<argument pos:start="192:16" pos:end="192:20"><expr pos:start="192:16" pos:end="192:20"><name pos:start="192:16" pos:end="192:20">avctx</name></expr></argument>, <argument pos:start="192:23" pos:end="192:34"><expr pos:start="192:23" pos:end="192:34"><name pos:start="192:23" pos:end="192:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="192:37" pos:end="192:94"><expr pos:start="192:37" pos:end="192:94"><literal type="string" pos:start="192:37" pos:end="192:94">"width and height must be multiples of four (got %ix%i)\n"</literal></expr></argument>,
                <argument pos:start="193:17" pos:end="193:28"><expr pos:start="193:17" pos:end="193:28"><name pos:start="193:17" pos:end="193:28"><name pos:start="193:17" pos:end="193:21">avctx</name><operator pos:start="193:22" pos:end="193:23">-&gt;</operator><name pos:start="193:24" pos:end="193:28">width</name></name></expr></argument>, <argument pos:start="193:31" pos:end="193:43"><expr pos:start="193:31" pos:end="193:43"><name pos:start="193:31" pos:end="193:43"><name pos:start="193:31" pos:end="193:35">avctx</name><operator pos:start="193:36" pos:end="193:37">-&gt;</operator><name pos:start="193:38" pos:end="193:43">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="194:9" pos:end="194:31">return <expr pos:start="194:16" pos:end="194:30"><call pos:start="194:16" pos:end="194:30"><name pos:start="194:16" pos:end="194:22">AVERROR</name><argument_list pos:start="194:23" pos:end="194:30">(<argument pos:start="194:24" pos:end="194:29"><expr pos:start="194:24" pos:end="194:29"><name pos:start="194:24" pos:end="194:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="197:5" pos:end="201:5"><if pos:start="197:5" pos:end="201:5">if <condition pos:start="197:8" pos:end="197:46">(<expr pos:start="197:9" pos:end="197:45"><name pos:start="197:9" pos:end="197:25"><name pos:start="197:9" pos:end="197:9">s</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:25">min_min_strips</name></name> <operator pos:start="197:27" pos:end="197:27">&gt;</operator> <name pos:start="197:29" pos:end="197:45"><name pos:start="197:29" pos:end="197:29">s</name><operator pos:start="197:30" pos:end="197:31">-&gt;</operator><name pos:start="197:32" pos:end="197:45">max_max_strips</name></name></expr>)</condition> <block pos:start="197:48" pos:end="201:5">{<block_content pos:start="198:9" pos:end="200:31">
        <expr_stmt pos:start="198:9" pos:end="199:54"><expr pos:start="198:9" pos:end="199:53"><call pos:start="198:9" pos:end="199:53"><name pos:start="198:9" pos:end="198:14">av_log</name><argument_list pos:start="198:15" pos:end="199:53">(<argument pos:start="198:16" pos:end="198:20"><expr pos:start="198:16" pos:end="198:20"><name pos:start="198:16" pos:end="198:20">avctx</name></expr></argument>, <argument pos:start="198:23" pos:end="198:34"><expr pos:start="198:23" pos:end="198:34"><name pos:start="198:23" pos:end="198:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="198:37" pos:end="198:103"><expr pos:start="198:37" pos:end="198:103"><literal type="string" pos:start="198:37" pos:end="198:103">"minimal number of strips can not exceed maximal (got %i and %i)\n"</literal></expr></argument>,
                <argument pos:start="199:17" pos:end="199:33"><expr pos:start="199:17" pos:end="199:33"><name pos:start="199:17" pos:end="199:33"><name pos:start="199:17" pos:end="199:17">s</name><operator pos:start="199:18" pos:end="199:19">-&gt;</operator><name pos:start="199:20" pos:end="199:33">min_min_strips</name></name></expr></argument>, <argument pos:start="199:36" pos:end="199:52"><expr pos:start="199:36" pos:end="199:52"><name pos:start="199:36" pos:end="199:52"><name pos:start="199:36" pos:end="199:36">s</name><operator pos:start="199:37" pos:end="199:38">-&gt;</operator><name pos:start="199:39" pos:end="199:52">max_max_strips</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="200:9" pos:end="200:31">return <expr pos:start="200:16" pos:end="200:30"><call pos:start="200:16" pos:end="200:30"><name pos:start="200:16" pos:end="200:22">AVERROR</name><argument_list pos:start="200:23" pos:end="200:30">(<argument pos:start="200:24" pos:end="200:29"><expr pos:start="200:24" pos:end="200:29"><name pos:start="200:24" pos:end="200:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="203:5" pos:end="204:31"><if pos:start="203:5" pos:end="204:31">if <condition pos:start="203:8" pos:end="203:44">(<expr pos:start="203:9" pos:end="203:43"><operator pos:start="203:9" pos:end="203:9">!</operator><operator pos:start="203:10" pos:end="203:10">(</operator><name pos:start="203:11" pos:end="203:23"><name pos:start="203:11" pos:end="203:11">s</name><operator pos:start="203:12" pos:end="203:13">-&gt;</operator><name pos:start="203:14" pos:end="203:23">last_frame</name></name> <operator pos:start="203:25" pos:end="203:25">=</operator> <call pos:start="203:27" pos:end="203:42"><name pos:start="203:27" pos:end="203:40">av_frame_alloc</name><argument_list pos:start="203:41" pos:end="203:42">()</argument_list></call><operator pos:start="203:43" pos:end="203:43">)</operator></expr>)</condition><block type="pseudo" pos:start="204:9" pos:end="204:31"><block_content pos:start="204:9" pos:end="204:31">
        <return pos:start="204:9" pos:end="204:31">return <expr pos:start="204:16" pos:end="204:30"><call pos:start="204:16" pos:end="204:30"><name pos:start="204:16" pos:end="204:22">AVERROR</name><argument_list pos:start="204:23" pos:end="204:30">(<argument pos:start="204:24" pos:end="204:29"><expr pos:start="204:24" pos:end="204:29"><name pos:start="204:24" pos:end="204:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="205:5" pos:end="206:20"><if pos:start="205:5" pos:end="206:20">if <condition pos:start="205:8" pos:end="205:44">(<expr pos:start="205:9" pos:end="205:43"><operator pos:start="205:9" pos:end="205:9">!</operator><operator pos:start="205:10" pos:end="205:10">(</operator><name pos:start="205:11" pos:end="205:23"><name pos:start="205:11" pos:end="205:11">s</name><operator pos:start="205:12" pos:end="205:13">-&gt;</operator><name pos:start="205:14" pos:end="205:23">best_frame</name></name> <operator pos:start="205:25" pos:end="205:25">=</operator> <call pos:start="205:27" pos:end="205:42"><name pos:start="205:27" pos:end="205:40">av_frame_alloc</name><argument_list pos:start="205:41" pos:end="205:42">()</argument_list></call><operator pos:start="205:43" pos:end="205:43">)</operator></expr>)</condition><block type="pseudo" pos:start="206:9" pos:end="206:20"><block_content pos:start="206:9" pos:end="206:20">
        <goto pos:start="206:9" pos:end="206:20">goto <name pos:start="206:14" pos:end="206:19">enomem</name>;</goto></block_content></block></if></if_stmt>
    <if_stmt pos:start="207:5" pos:end="208:20"><if pos:start="207:5" pos:end="208:20">if <condition pos:start="207:8" pos:end="207:47">(<expr pos:start="207:9" pos:end="207:46"><operator pos:start="207:9" pos:end="207:9">!</operator><operator pos:start="207:10" pos:end="207:10">(</operator><name pos:start="207:11" pos:end="207:26"><name pos:start="207:11" pos:end="207:11">s</name><operator pos:start="207:12" pos:end="207:13">-&gt;</operator><name pos:start="207:14" pos:end="207:26">scratch_frame</name></name> <operator pos:start="207:28" pos:end="207:28">=</operator> <call pos:start="207:30" pos:end="207:45"><name pos:start="207:30" pos:end="207:43">av_frame_alloc</name><argument_list pos:start="207:44" pos:end="207:45">()</argument_list></call><operator pos:start="207:46" pos:end="207:46">)</operator></expr>)</condition><block type="pseudo" pos:start="208:9" pos:end="208:20"><block_content pos:start="208:9" pos:end="208:20">
        <goto pos:start="208:9" pos:end="208:20">goto <name pos:start="208:14" pos:end="208:19">enomem</name>;</goto></block_content></block></if></if_stmt>
    <if_stmt pos:start="209:5" pos:end="211:24"><if pos:start="209:5" pos:end="211:24">if <condition pos:start="209:8" pos:end="209:43">(<expr pos:start="209:9" pos:end="209:42"><name pos:start="209:9" pos:end="209:22"><name pos:start="209:9" pos:end="209:13">avctx</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:22">pix_fmt</name></name> <operator pos:start="209:24" pos:end="209:25">==</operator> <name pos:start="209:27" pos:end="209:42">AV_PIX_FMT_RGB24</name></expr>)</condition><block type="pseudo" pos:start="210:9" pos:end="211:24"><block_content pos:start="210:9" pos:end="211:24">
        <if_stmt pos:start="210:9" pos:end="211:24"><if pos:start="210:9" pos:end="211:24">if <condition pos:start="210:12" pos:end="210:49">(<expr pos:start="210:13" pos:end="210:48"><operator pos:start="210:13" pos:end="210:13">!</operator><operator pos:start="210:14" pos:end="210:14">(</operator><name pos:start="210:15" pos:end="210:28"><name pos:start="210:15" pos:end="210:15">s</name><operator pos:start="210:16" pos:end="210:17">-&gt;</operator><name pos:start="210:18" pos:end="210:28">input_frame</name></name> <operator pos:start="210:30" pos:end="210:30">=</operator> <call pos:start="210:32" pos:end="210:47"><name pos:start="210:32" pos:end="210:45">av_frame_alloc</name><argument_list pos:start="210:46" pos:end="210:47">()</argument_list></call><operator pos:start="210:48" pos:end="210:48">)</operator></expr>)</condition><block type="pseudo" pos:start="211:13" pos:end="211:24"><block_content pos:start="211:13" pos:end="211:24">
            <goto pos:start="211:13" pos:end="211:24">goto <name pos:start="211:18" pos:end="211:23">enomem</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="213:5" pos:end="214:20"><if pos:start="213:5" pos:end="214:20">if <condition pos:start="213:8" pos:end="213:139">(<expr pos:start="213:9" pos:end="213:138"><operator pos:start="213:9" pos:end="213:9">!</operator><operator pos:start="213:10" pos:end="213:10">(</operator><name pos:start="213:11" pos:end="213:27"><name pos:start="213:11" pos:end="213:11">s</name><operator pos:start="213:12" pos:end="213:13">-&gt;</operator><name pos:start="213:14" pos:end="213:27">codebook_input</name></name> <operator pos:start="213:29" pos:end="213:29">=</operator> <call pos:start="213:31" pos:end="213:137"><name pos:start="213:31" pos:end="213:39">av_malloc</name><argument_list pos:start="213:40" pos:end="213:137">(<argument pos:start="213:41" pos:end="213:136"><expr pos:start="213:41" pos:end="213:136"><sizeof pos:start="213:41" pos:end="213:51">sizeof<argument_list pos:start="213:47" pos:end="213:51">(<argument pos:start="213:48" pos:end="213:50"><expr pos:start="213:48" pos:end="213:50"><name pos:start="213:48" pos:end="213:50">int</name></expr></argument>)</argument_list></sizeof> <operator pos:start="213:53" pos:end="213:53">*</operator> <operator pos:start="213:55" pos:end="213:55">(</operator><ternary pos:start="213:56" pos:end="213:97"><condition pos:start="213:56" pos:end="213:91"><expr pos:start="213:56" pos:end="213:89"><name pos:start="213:56" pos:end="213:69"><name pos:start="213:56" pos:end="213:60">avctx</name><operator pos:start="213:61" pos:end="213:62">-&gt;</operator><name pos:start="213:63" pos:end="213:69">pix_fmt</name></name> <operator pos:start="213:71" pos:end="213:72">==</operator> <name pos:start="213:74" pos:end="213:89">AV_PIX_FMT_RGB24</name></expr> ?</condition><then pos:start="213:93" pos:end="213:93"> <expr pos:start="213:93" pos:end="213:93"><literal type="number" pos:start="213:93" pos:end="213:93">6</literal></expr> </then><else pos:start="213:95" pos:end="213:97">: <expr pos:start="213:97" pos:end="213:97"><literal type="number" pos:start="213:97" pos:end="213:97">4</literal></expr></else></ternary><operator pos:start="213:98" pos:end="213:98">)</operator> <operator pos:start="213:100" pos:end="213:100">*</operator> <operator pos:start="213:102" pos:end="213:102">(</operator><name pos:start="213:103" pos:end="213:114"><name pos:start="213:103" pos:end="213:107">avctx</name><operator pos:start="213:108" pos:end="213:109">-&gt;</operator><name pos:start="213:110" pos:end="213:114">width</name></name> <operator pos:start="213:116" pos:end="213:116">*</operator> <name pos:start="213:118" pos:end="213:130"><name pos:start="213:118" pos:end="213:122">avctx</name><operator pos:start="213:123" pos:end="213:124">-&gt;</operator><name pos:start="213:125" pos:end="213:130">height</name></name><operator pos:start="213:131" pos:end="213:131">)</operator> <operator pos:start="213:133" pos:end="213:134">&gt;&gt;</operator> <literal type="number" pos:start="213:136" pos:end="213:136">2</literal></expr></argument>)</argument_list></call><operator pos:start="213:138" pos:end="213:138">)</operator></expr>)</condition><block type="pseudo" pos:start="214:9" pos:end="214:20"><block_content pos:start="214:9" pos:end="214:20">
        <goto pos:start="214:9" pos:end="214:20">goto <name pos:start="214:14" pos:end="214:19">enomem</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="216:5" pos:end="217:20"><if pos:start="216:5" pos:end="217:20">if <condition pos:start="216:8" pos:end="216:94">(<expr pos:start="216:9" pos:end="216:93"><operator pos:start="216:9" pos:end="216:9">!</operator><operator pos:start="216:10" pos:end="216:10">(</operator><name pos:start="216:11" pos:end="216:29"><name pos:start="216:11" pos:end="216:11">s</name><operator pos:start="216:12" pos:end="216:13">-&gt;</operator><name pos:start="216:14" pos:end="216:29">codebook_closest</name></name> <operator pos:start="216:31" pos:end="216:31">=</operator> <call pos:start="216:33" pos:end="216:92"><name pos:start="216:33" pos:end="216:41">av_malloc</name><argument_list pos:start="216:42" pos:end="216:92">(<argument pos:start="216:43" pos:end="216:91"><expr pos:start="216:43" pos:end="216:91"><sizeof pos:start="216:43" pos:end="216:53">sizeof<argument_list pos:start="216:49" pos:end="216:53">(<argument pos:start="216:50" pos:end="216:52"><expr pos:start="216:50" pos:end="216:52"><name pos:start="216:50" pos:end="216:52">int</name></expr></argument>)</argument_list></sizeof> <operator pos:start="216:55" pos:end="216:55">*</operator> <operator pos:start="216:57" pos:end="216:57">(</operator><name pos:start="216:58" pos:end="216:69"><name pos:start="216:58" pos:end="216:62">avctx</name><operator pos:start="216:63" pos:end="216:64">-&gt;</operator><name pos:start="216:65" pos:end="216:69">width</name></name> <operator pos:start="216:71" pos:end="216:71">*</operator> <name pos:start="216:73" pos:end="216:85"><name pos:start="216:73" pos:end="216:77">avctx</name><operator pos:start="216:78" pos:end="216:79">-&gt;</operator><name pos:start="216:80" pos:end="216:85">height</name></name><operator pos:start="216:86" pos:end="216:86">)</operator> <operator pos:start="216:88" pos:end="216:89">&gt;&gt;</operator> <literal type="number" pos:start="216:91" pos:end="216:91">2</literal></expr></argument>)</argument_list></call><operator pos:start="216:93" pos:end="216:93">)</operator></expr>)</condition><block type="pseudo" pos:start="217:9" pos:end="217:20"><block_content pos:start="217:9" pos:end="217:20">
        <goto pos:start="217:9" pos:end="217:20">goto <name pos:start="217:14" pos:end="217:19">enomem</name>;</goto></block_content></block></if></if_stmt>

    <for pos:start="219:5" pos:end="221:24">for<control pos:start="219:8" pos:end="219:69">(<init pos:start="219:9" pos:end="219:14"><expr pos:start="219:9" pos:end="219:13"><name pos:start="219:9" pos:end="219:9">x</name> <operator pos:start="219:11" pos:end="219:11">=</operator> <literal type="number" pos:start="219:13" pos:end="219:13">0</literal></expr>;</init> <condition pos:start="219:16" pos:end="219:64"><expr pos:start="219:16" pos:end="219:63"><name pos:start="219:16" pos:end="219:16">x</name> <operator pos:start="219:18" pos:end="219:18">&lt;</operator> <operator pos:start="219:20" pos:end="219:20">(</operator><ternary pos:start="219:21" pos:end="219:62"><condition pos:start="219:21" pos:end="219:56"><expr pos:start="219:21" pos:end="219:54"><name pos:start="219:21" pos:end="219:34"><name pos:start="219:21" pos:end="219:25">avctx</name><operator pos:start="219:26" pos:end="219:27">-&gt;</operator><name pos:start="219:28" pos:end="219:34">pix_fmt</name></name> <operator pos:start="219:36" pos:end="219:37">==</operator> <name pos:start="219:39" pos:end="219:54">AV_PIX_FMT_RGB24</name></expr> ?</condition><then pos:start="219:58" pos:end="219:58"> <expr pos:start="219:58" pos:end="219:58"><literal type="number" pos:start="219:58" pos:end="219:58">4</literal></expr> </then><else pos:start="219:60" pos:end="219:62">: <expr pos:start="219:62" pos:end="219:62"><literal type="number" pos:start="219:62" pos:end="219:62">3</literal></expr></else></ternary><operator pos:start="219:63" pos:end="219:63">)</operator></expr>;</condition> <incr pos:start="219:66" pos:end="219:68"><expr pos:start="219:66" pos:end="219:68"><name pos:start="219:66" pos:end="219:66">x</name><operator pos:start="219:67" pos:end="219:68">++</operator></expr></incr>)</control><block type="pseudo" pos:start="220:9" pos:end="221:24"><block_content pos:start="220:9" pos:end="221:24">
        <if_stmt pos:start="220:9" pos:end="221:24"><if pos:start="220:9" pos:end="221:24">if<condition pos:start="220:11" pos:end="220:126">(<expr pos:start="220:12" pos:end="220:125"><operator pos:start="220:12" pos:end="220:12">!</operator><operator pos:start="220:13" pos:end="220:13">(</operator><name pos:start="220:14" pos:end="220:28"><name pos:start="220:14" pos:end="220:14">s</name><operator pos:start="220:15" pos:end="220:16">-&gt;</operator><name pos:start="220:17" pos:end="220:25">pict_bufs</name><index pos:start="220:26" pos:end="220:28">[<expr pos:start="220:27" pos:end="220:27"><name pos:start="220:27" pos:end="220:27">x</name></expr>]</index></name> <operator pos:start="220:30" pos:end="220:30">=</operator> <call pos:start="220:32" pos:end="220:124"><name pos:start="220:32" pos:end="220:40">av_malloc</name><argument_list pos:start="220:41" pos:end="220:124">(<argument pos:start="220:42" pos:end="220:123"><expr pos:start="220:42" pos:end="220:123"><operator pos:start="220:42" pos:end="220:42">(</operator><ternary pos:start="220:43" pos:end="220:84"><condition pos:start="220:43" pos:end="220:78"><expr pos:start="220:43" pos:end="220:76"><name pos:start="220:43" pos:end="220:56"><name pos:start="220:43" pos:end="220:47">avctx</name><operator pos:start="220:48" pos:end="220:49">-&gt;</operator><name pos:start="220:50" pos:end="220:56">pix_fmt</name></name> <operator pos:start="220:58" pos:end="220:59">==</operator> <name pos:start="220:61" pos:end="220:76">AV_PIX_FMT_RGB24</name></expr> ?</condition><then pos:start="220:80" pos:end="220:80"> <expr pos:start="220:80" pos:end="220:80"><literal type="number" pos:start="220:80" pos:end="220:80">6</literal></expr> </then><else pos:start="220:82" pos:end="220:84">: <expr pos:start="220:84" pos:end="220:84"><literal type="number" pos:start="220:84" pos:end="220:84">4</literal></expr></else></ternary><operator pos:start="220:85" pos:end="220:85">)</operator> <operator pos:start="220:87" pos:end="220:87">*</operator> <operator pos:start="220:89" pos:end="220:89">(</operator><name pos:start="220:90" pos:end="220:101"><name pos:start="220:90" pos:end="220:94">avctx</name><operator pos:start="220:95" pos:end="220:96">-&gt;</operator><name pos:start="220:97" pos:end="220:101">width</name></name> <operator pos:start="220:103" pos:end="220:103">*</operator> <name pos:start="220:105" pos:end="220:117"><name pos:start="220:105" pos:end="220:109">avctx</name><operator pos:start="220:110" pos:end="220:111">-&gt;</operator><name pos:start="220:112" pos:end="220:117">height</name></name><operator pos:start="220:118" pos:end="220:118">)</operator> <operator pos:start="220:120" pos:end="220:121">&gt;&gt;</operator> <literal type="number" pos:start="220:123" pos:end="220:123">2</literal></expr></argument>)</argument_list></call><operator pos:start="220:125" pos:end="220:125">)</operator></expr>)</condition><block type="pseudo" pos:start="221:13" pos:end="221:24"><block_content pos:start="221:13" pos:end="221:24">
            <goto pos:start="221:13" pos:end="221:24">goto <name pos:start="221:18" pos:end="221:23">enomem</name>;</goto></block_content></block></if></if_stmt></block_content></block></for>

    <expr_stmt pos:start="223:5" pos:end="223:54"><expr pos:start="223:5" pos:end="223:53"><name pos:start="223:5" pos:end="223:12">mb_count</name> <operator pos:start="223:14" pos:end="223:14">=</operator> <name pos:start="223:16" pos:end="223:27"><name pos:start="223:16" pos:end="223:20">avctx</name><operator pos:start="223:21" pos:end="223:22">-&gt;</operator><name pos:start="223:23" pos:end="223:27">width</name></name> <operator pos:start="223:29" pos:end="223:29">*</operator> <name pos:start="223:31" pos:end="223:43"><name pos:start="223:31" pos:end="223:35">avctx</name><operator pos:start="223:36" pos:end="223:37">-&gt;</operator><name pos:start="223:38" pos:end="223:43">height</name></name> <operator pos:start="223:45" pos:end="223:45">/</operator> <name pos:start="223:47" pos:end="223:53">MB_AREA</name></expr>;</expr_stmt>

    <comment type="line" pos:start="225:5" pos:end="225:72">//the largest possible chunk is 0x31 with all MBs encoded in V4 mode</comment>
    <comment type="line" pos:start="226:5" pos:end="226:54">//and full codebooks being replaced in INTER mode,</comment>
    <comment type="line" pos:start="227:5" pos:end="227:30">// which is 34 bits per MB</comment>
    <comment type="line" pos:start="228:5" pos:end="228:41">//and 2*256 extra flag bits per strip</comment>
    <expr_stmt pos:start="229:5" pos:end="229:158"><expr pos:start="229:5" pos:end="229:157"><name pos:start="229:5" pos:end="229:18">strip_buf_size</name> <operator pos:start="229:20" pos:end="229:20">=</operator> <name pos:start="229:22" pos:end="229:38">STRIP_HEADER_SIZE</name> <operator pos:start="229:40" pos:end="229:40">+</operator> <literal type="number" pos:start="229:42" pos:end="229:42">3</literal> <operator pos:start="229:44" pos:end="229:44">*</operator> <name pos:start="229:46" pos:end="229:62">CHUNK_HEADER_SIZE</name> <operator pos:start="229:64" pos:end="229:64">+</operator> <literal type="number" pos:start="229:66" pos:end="229:66">2</literal> <operator pos:start="229:68" pos:end="229:68">*</operator> <name pos:start="229:70" pos:end="229:79">VECTOR_MAX</name> <operator pos:start="229:81" pos:end="229:81">*</operator> <name pos:start="229:83" pos:end="229:94">CODEBOOK_MAX</name> <operator pos:start="229:96" pos:end="229:96">+</operator> <literal type="number" pos:start="229:98" pos:end="229:98">4</literal> <operator pos:start="229:100" pos:end="229:100">*</operator> <operator pos:start="229:102" pos:end="229:102">(</operator><name pos:start="229:103" pos:end="229:110">mb_count</name> <operator pos:start="229:112" pos:end="229:112">+</operator> <operator pos:start="229:114" pos:end="229:114">(</operator><name pos:start="229:115" pos:end="229:122">mb_count</name> <operator pos:start="229:124" pos:end="229:124">+</operator> <literal type="number" pos:start="229:126" pos:end="229:127">15</literal><operator pos:start="229:128" pos:end="229:128">)</operator> <operator pos:start="229:130" pos:end="229:130">/</operator> <literal type="number" pos:start="229:132" pos:end="229:133">16</literal><operator pos:start="229:134" pos:end="229:134">)</operator> <operator pos:start="229:136" pos:end="229:136">+</operator> <operator pos:start="229:138" pos:end="229:138">(</operator><literal type="number" pos:start="229:139" pos:end="229:139">2</literal> <operator pos:start="229:141" pos:end="229:141">*</operator> <name pos:start="229:143" pos:end="229:154">CODEBOOK_MAX</name><operator pos:start="229:155" pos:end="229:155">)</operator><operator pos:start="229:156" pos:end="229:156">/</operator><literal type="number" pos:start="229:157" pos:end="229:157">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="231:5" pos:end="231:75"><expr pos:start="231:5" pos:end="231:74"><name pos:start="231:5" pos:end="231:18">frame_buf_size</name> <operator pos:start="231:20" pos:end="231:20">=</operator> <name pos:start="231:22" pos:end="231:37">CVID_HEADER_SIZE</name> <operator pos:start="231:39" pos:end="231:39">+</operator> <name pos:start="231:41" pos:end="231:57"><name pos:start="231:41" pos:end="231:41">s</name><operator pos:start="231:42" pos:end="231:43">-&gt;</operator><name pos:start="231:44" pos:end="231:57">max_max_strips</name></name> <operator pos:start="231:59" pos:end="231:59">*</operator> <name pos:start="231:61" pos:end="231:74">strip_buf_size</name></expr>;</expr_stmt>

    <if_stmt pos:start="233:5" pos:end="234:20"><if pos:start="233:5" pos:end="234:20">if <condition pos:start="233:8" pos:end="233:52">(<expr pos:start="233:9" pos:end="233:51"><operator pos:start="233:9" pos:end="233:9">!</operator><operator pos:start="233:10" pos:end="233:10">(</operator><name pos:start="233:11" pos:end="233:22"><name pos:start="233:11" pos:end="233:11">s</name><operator pos:start="233:12" pos:end="233:13">-&gt;</operator><name pos:start="233:14" pos:end="233:22">strip_buf</name></name> <operator pos:start="233:24" pos:end="233:24">=</operator> <call pos:start="233:26" pos:end="233:50"><name pos:start="233:26" pos:end="233:34">av_malloc</name><argument_list pos:start="233:35" pos:end="233:50">(<argument pos:start="233:36" pos:end="233:49"><expr pos:start="233:36" pos:end="233:49"><name pos:start="233:36" pos:end="233:49">strip_buf_size</name></expr></argument>)</argument_list></call><operator pos:start="233:51" pos:end="233:51">)</operator></expr>)</condition><block type="pseudo" pos:start="234:9" pos:end="234:20"><block_content pos:start="234:9" pos:end="234:20">
        <goto pos:start="234:9" pos:end="234:20">goto <name pos:start="234:14" pos:end="234:19">enomem</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="236:5" pos:end="237:20"><if pos:start="236:5" pos:end="237:20">if <condition pos:start="236:8" pos:end="236:52">(<expr pos:start="236:9" pos:end="236:51"><operator pos:start="236:9" pos:end="236:9">!</operator><operator pos:start="236:10" pos:end="236:10">(</operator><name pos:start="236:11" pos:end="236:22"><name pos:start="236:11" pos:end="236:11">s</name><operator pos:start="236:12" pos:end="236:13">-&gt;</operator><name pos:start="236:14" pos:end="236:22">frame_buf</name></name> <operator pos:start="236:24" pos:end="236:24">=</operator> <call pos:start="236:26" pos:end="236:50"><name pos:start="236:26" pos:end="236:34">av_malloc</name><argument_list pos:start="236:35" pos:end="236:50">(<argument pos:start="236:36" pos:end="236:49"><expr pos:start="236:36" pos:end="236:49"><name pos:start="236:36" pos:end="236:49">frame_buf_size</name></expr></argument>)</argument_list></call><operator pos:start="236:51" pos:end="236:51">)</operator></expr>)</condition><block type="pseudo" pos:start="237:9" pos:end="237:20"><block_content pos:start="237:9" pos:end="237:20">
        <goto pos:start="237:9" pos:end="237:20">goto <name pos:start="237:14" pos:end="237:19">enomem</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="239:5" pos:end="243:0"><if pos:start="239:5" pos:end="243:0">if <condition pos:start="239:8" pos:end="239:62">(<expr pos:start="239:9" pos:end="239:61"><operator pos:start="239:9" pos:end="239:9">!</operator><operator pos:start="239:10" pos:end="239:10">(</operator><name pos:start="239:11" pos:end="239:15"><name pos:start="239:11" pos:end="239:11">s</name><operator pos:start="239:12" pos:end="239:13">-&gt;</operator><name pos:start="239:14" pos:end="239:15">mb</name></name> <operator pos:start="239:17" pos:end="239:17">=</operator> <call pos:start="239:19" pos:end="239:60"><name pos:start="239:19" pos:end="239:33">av_malloc_array</name><argument_list pos:start="239:34" pos:end="239:60">(<argument pos:start="239:35" pos:end="239:42"><expr pos:start="239:35" pos:end="239:42"><name pos:start="239:35" pos:end="239:42">mb_count</name></expr></argument>, <argument pos:start="239:45" pos:end="239:59"><expr pos:start="239:45" pos:end="239:59"><sizeof pos:start="239:45" pos:end="239:59">sizeof<argument_list pos:start="239:51" pos:end="239:59">(<argument pos:start="239:52" pos:end="239:58"><expr pos:start="239:52" pos:end="239:58"><name pos:start="239:52" pos:end="239:58">mb_info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="239:61" pos:end="239:61">)</operator></expr>)</condition><block type="pseudo" pos:start="240:9" pos:end="243:0"><block_content pos:start="240:9" pos:end="243:0">
        <goto pos:start="240:9" pos:end="243:0">goto <name pos:start="240:14" pos:end="240:19">enomem</name>;</goto></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="242:1" pos:end="242:23">#<cpp:directive pos:start="242:2" pos:end="242:6">ifdef</cpp:directive> <name pos:start="242:8" pos:end="242:23">CINEPAKENC_DEBUG</name></cpp:ifdef>
    <if_stmt pos:start="243:5" pos:end="246:0"><if pos:start="243:5" pos:end="246:0">if <condition pos:start="243:8" pos:end="243:67">(<expr pos:start="243:9" pos:end="243:66"><operator pos:start="243:9" pos:end="243:9">!</operator><operator pos:start="243:10" pos:end="243:10">(</operator><name pos:start="243:11" pos:end="243:20"><name pos:start="243:11" pos:end="243:11">s</name><operator pos:start="243:12" pos:end="243:13">-&gt;</operator><name pos:start="243:14" pos:end="243:20">best_mb</name></name> <operator pos:start="243:22" pos:end="243:22">=</operator> <call pos:start="243:24" pos:end="243:65"><name pos:start="243:24" pos:end="243:38">av_malloc_array</name><argument_list pos:start="243:39" pos:end="243:65">(<argument pos:start="243:40" pos:end="243:47"><expr pos:start="243:40" pos:end="243:47"><name pos:start="243:40" pos:end="243:47">mb_count</name></expr></argument>, <argument pos:start="243:50" pos:end="243:64"><expr pos:start="243:50" pos:end="243:64"><sizeof pos:start="243:50" pos:end="243:64">sizeof<argument_list pos:start="243:56" pos:end="243:64">(<argument pos:start="243:57" pos:end="243:63"><expr pos:start="243:57" pos:end="243:63"><name pos:start="243:57" pos:end="243:63">mb_info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="243:66" pos:end="243:66">)</operator></expr>)</condition><block type="pseudo" pos:start="244:9" pos:end="246:0"><block_content pos:start="244:9" pos:end="246:0">
        <goto pos:start="244:9" pos:end="246:0">goto <name pos:start="244:14" pos:end="244:19">enomem</name>;</goto></block_content></block></if></if_stmt>
<cpp:endif pos:start="245:1" pos:end="245:6">#<cpp:directive pos:start="245:2" pos:end="245:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="247:5" pos:end="247:32"><expr pos:start="247:5" pos:end="247:31"><call pos:start="247:5" pos:end="247:31"><name pos:start="247:5" pos:end="247:15">av_lfg_init</name><argument_list pos:start="247:16" pos:end="247:31">(<argument pos:start="247:17" pos:end="247:27"><expr pos:start="247:17" pos:end="247:27"><operator pos:start="247:17" pos:end="247:17">&amp;</operator><name pos:start="247:18" pos:end="247:27"><name pos:start="247:18" pos:end="247:18">s</name><operator pos:start="247:19" pos:end="247:20">-&gt;</operator><name pos:start="247:21" pos:end="247:27">randctx</name></name></expr></argument>, <argument pos:start="247:30" pos:end="247:30"><expr pos:start="247:30" pos:end="247:30"><literal type="number" pos:start="247:30" pos:end="247:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="248:5" pos:end="248:21"><expr pos:start="248:5" pos:end="248:20"><name pos:start="248:5" pos:end="248:12"><name pos:start="248:5" pos:end="248:5">s</name><operator pos:start="248:6" pos:end="248:7">-&gt;</operator><name pos:start="248:8" pos:end="248:12">avctx</name></name> <operator pos:start="248:14" pos:end="248:14">=</operator> <name pos:start="248:16" pos:end="248:20">avctx</name></expr>;</expr_stmt>
    <expr_stmt pos:start="249:5" pos:end="249:24"><expr pos:start="249:5" pos:end="249:23"><name pos:start="249:5" pos:end="249:8"><name pos:start="249:5" pos:end="249:5">s</name><operator pos:start="249:6" pos:end="249:7">-&gt;</operator><name pos:start="249:8" pos:end="249:8">w</name></name> <operator pos:start="249:10" pos:end="249:10">=</operator> <name pos:start="249:12" pos:end="249:23"><name pos:start="249:12" pos:end="249:16">avctx</name><operator pos:start="249:17" pos:end="249:18">-&gt;</operator><name pos:start="249:19" pos:end="249:23">width</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="250:5" pos:end="250:25"><expr pos:start="250:5" pos:end="250:24"><name pos:start="250:5" pos:end="250:8"><name pos:start="250:5" pos:end="250:5">s</name><operator pos:start="250:6" pos:end="250:7">-&gt;</operator><name pos:start="250:8" pos:end="250:8">h</name></name> <operator pos:start="250:10" pos:end="250:10">=</operator> <name pos:start="250:12" pos:end="250:24"><name pos:start="250:12" pos:end="250:16">avctx</name><operator pos:start="250:17" pos:end="250:18">-&gt;</operator><name pos:start="250:19" pos:end="250:24">height</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="251:5" pos:end="251:39"><expr pos:start="251:5" pos:end="251:38"><name pos:start="251:5" pos:end="251:21"><name pos:start="251:5" pos:end="251:5">s</name><operator pos:start="251:6" pos:end="251:7">-&gt;</operator><name pos:start="251:8" pos:end="251:21">frame_buf_size</name></name> <operator pos:start="251:23" pos:end="251:23">=</operator> <name pos:start="251:25" pos:end="251:38">frame_buf_size</name></expr>;</expr_stmt>
    <expr_stmt pos:start="252:5" pos:end="252:20"><expr pos:start="252:5" pos:end="252:19"><name pos:start="252:5" pos:end="252:15"><name pos:start="252:5" pos:end="252:5">s</name><operator pos:start="252:6" pos:end="252:7">-&gt;</operator><name pos:start="252:8" pos:end="252:15">curframe</name></name> <operator pos:start="252:17" pos:end="252:17">=</operator> <literal type="number" pos:start="252:19" pos:end="252:19">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="253:5" pos:end="253:34"><expr pos:start="253:5" pos:end="253:33"><name pos:start="253:5" pos:end="253:13"><name pos:start="253:5" pos:end="253:5">s</name><operator pos:start="253:6" pos:end="253:7">-&gt;</operator><name pos:start="253:8" pos:end="253:13">keyint</name></name> <operator pos:start="253:15" pos:end="253:15">=</operator> <name pos:start="253:17" pos:end="253:33"><name pos:start="253:17" pos:end="253:21">avctx</name><operator pos:start="253:22" pos:end="253:23">-&gt;</operator><name pos:start="253:24" pos:end="253:33">keyint_min</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="254:5" pos:end="254:32"><expr pos:start="254:5" pos:end="254:31"><name pos:start="254:5" pos:end="254:14"><name pos:start="254:5" pos:end="254:5">s</name><operator pos:start="254:6" pos:end="254:7">-&gt;</operator><name pos:start="254:8" pos:end="254:14">pix_fmt</name></name> <operator pos:start="254:16" pos:end="254:16">=</operator> <name pos:start="254:18" pos:end="254:31"><name pos:start="254:18" pos:end="254:22">avctx</name><operator pos:start="254:23" pos:end="254:24">-&gt;</operator><name pos:start="254:25" pos:end="254:31">pix_fmt</name></name></expr>;</expr_stmt>

    <comment type="line" pos:start="256:5" pos:end="256:21">//set up AVFrames</comment>
    <expr_stmt pos:start="257:5" pos:end="257:52"><expr pos:start="257:5" pos:end="257:51"><name pos:start="257:5" pos:end="257:26"><name pos:start="257:5" pos:end="257:5">s</name><operator pos:start="257:6" pos:end="257:7">-&gt;</operator><name pos:start="257:8" pos:end="257:17">last_frame</name><operator pos:start="257:18" pos:end="257:19">-&gt;</operator><name pos:start="257:20" pos:end="257:23">data</name><index pos:start="257:24" pos:end="257:26">[<expr pos:start="257:25" pos:end="257:25"><literal type="number" pos:start="257:25" pos:end="257:25">0</literal></expr>]</index></name>        <operator pos:start="257:35" pos:end="257:35">=</operator> <name pos:start="257:37" pos:end="257:51"><name pos:start="257:37" pos:end="257:37">s</name><operator pos:start="257:38" pos:end="257:39">-&gt;</operator><name pos:start="257:40" pos:end="257:48">pict_bufs</name><index pos:start="257:49" pos:end="257:51">[<expr pos:start="257:50" pos:end="257:50"><literal type="number" pos:start="257:50" pos:end="257:50">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="258:5" pos:end="258:41"><expr pos:start="258:5" pos:end="258:40"><name pos:start="258:5" pos:end="258:30"><name pos:start="258:5" pos:end="258:5">s</name><operator pos:start="258:6" pos:end="258:7">-&gt;</operator><name pos:start="258:8" pos:end="258:17">last_frame</name><operator pos:start="258:18" pos:end="258:19">-&gt;</operator><name pos:start="258:20" pos:end="258:27">linesize</name><index pos:start="258:28" pos:end="258:30">[<expr pos:start="258:29" pos:end="258:29"><literal type="number" pos:start="258:29" pos:end="258:29">0</literal></expr>]</index></name>    <operator pos:start="258:35" pos:end="258:35">=</operator> <name pos:start="258:37" pos:end="258:40"><name pos:start="258:37" pos:end="258:37">s</name><operator pos:start="258:38" pos:end="258:39">-&gt;</operator><name pos:start="258:40" pos:end="258:40">w</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="259:5" pos:end="259:52"><expr pos:start="259:5" pos:end="259:51"><name pos:start="259:5" pos:end="259:26"><name pos:start="259:5" pos:end="259:5">s</name><operator pos:start="259:6" pos:end="259:7">-&gt;</operator><name pos:start="259:8" pos:end="259:17">best_frame</name><operator pos:start="259:18" pos:end="259:19">-&gt;</operator><name pos:start="259:20" pos:end="259:23">data</name><index pos:start="259:24" pos:end="259:26">[<expr pos:start="259:25" pos:end="259:25"><literal type="number" pos:start="259:25" pos:end="259:25">0</literal></expr>]</index></name>        <operator pos:start="259:35" pos:end="259:35">=</operator> <name pos:start="259:37" pos:end="259:51"><name pos:start="259:37" pos:end="259:37">s</name><operator pos:start="259:38" pos:end="259:39">-&gt;</operator><name pos:start="259:40" pos:end="259:48">pict_bufs</name><index pos:start="259:49" pos:end="259:51">[<expr pos:start="259:50" pos:end="259:50"><literal type="number" pos:start="259:50" pos:end="259:50">1</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="260:5" pos:end="260:41"><expr pos:start="260:5" pos:end="260:40"><name pos:start="260:5" pos:end="260:30"><name pos:start="260:5" pos:end="260:5">s</name><operator pos:start="260:6" pos:end="260:7">-&gt;</operator><name pos:start="260:8" pos:end="260:17">best_frame</name><operator pos:start="260:18" pos:end="260:19">-&gt;</operator><name pos:start="260:20" pos:end="260:27">linesize</name><index pos:start="260:28" pos:end="260:30">[<expr pos:start="260:29" pos:end="260:29"><literal type="number" pos:start="260:29" pos:end="260:29">0</literal></expr>]</index></name>    <operator pos:start="260:35" pos:end="260:35">=</operator> <name pos:start="260:37" pos:end="260:40"><name pos:start="260:37" pos:end="260:37">s</name><operator pos:start="260:38" pos:end="260:39">-&gt;</operator><name pos:start="260:40" pos:end="260:40">w</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="261:5" pos:end="261:52"><expr pos:start="261:5" pos:end="261:51"><name pos:start="261:5" pos:end="261:29"><name pos:start="261:5" pos:end="261:5">s</name><operator pos:start="261:6" pos:end="261:7">-&gt;</operator><name pos:start="261:8" pos:end="261:20">scratch_frame</name><operator pos:start="261:21" pos:end="261:22">-&gt;</operator><name pos:start="261:23" pos:end="261:26">data</name><index pos:start="261:27" pos:end="261:29">[<expr pos:start="261:28" pos:end="261:28"><literal type="number" pos:start="261:28" pos:end="261:28">0</literal></expr>]</index></name>     <operator pos:start="261:35" pos:end="261:35">=</operator> <name pos:start="261:37" pos:end="261:51"><name pos:start="261:37" pos:end="261:37">s</name><operator pos:start="261:38" pos:end="261:39">-&gt;</operator><name pos:start="261:40" pos:end="261:48">pict_bufs</name><index pos:start="261:49" pos:end="261:51">[<expr pos:start="261:50" pos:end="261:50"><literal type="number" pos:start="261:50" pos:end="261:50">2</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="262:5" pos:end="262:41"><expr pos:start="262:5" pos:end="262:40"><name pos:start="262:5" pos:end="262:33"><name pos:start="262:5" pos:end="262:5">s</name><operator pos:start="262:6" pos:end="262:7">-&gt;</operator><name pos:start="262:8" pos:end="262:20">scratch_frame</name><operator pos:start="262:21" pos:end="262:22">-&gt;</operator><name pos:start="262:23" pos:end="262:30">linesize</name><index pos:start="262:31" pos:end="262:33">[<expr pos:start="262:32" pos:end="262:32"><literal type="number" pos:start="262:32" pos:end="262:32">0</literal></expr>]</index></name> <operator pos:start="262:35" pos:end="262:35">=</operator> <name pos:start="262:37" pos:end="262:40"><name pos:start="262:37" pos:end="262:37">s</name><operator pos:start="262:38" pos:end="262:39">-&gt;</operator><name pos:start="262:40" pos:end="262:40">w</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="264:5" pos:end="282:5"><if pos:start="264:5" pos:end="282:5">if <condition pos:start="264:8" pos:end="264:39">(<expr pos:start="264:9" pos:end="264:38"><name pos:start="264:9" pos:end="264:18"><name pos:start="264:9" pos:end="264:9">s</name><operator pos:start="264:10" pos:end="264:11">-&gt;</operator><name pos:start="264:12" pos:end="264:18">pix_fmt</name></name> <operator pos:start="264:20" pos:end="264:21">==</operator> <name pos:start="264:23" pos:end="264:38">AV_PIX_FMT_RGB24</name></expr>)</condition> <block pos:start="264:41" pos:end="282:5">{<block_content pos:start="265:9" pos:end="281:80">
        <expr_stmt pos:start="265:9" pos:end="265:77"><expr pos:start="265:9" pos:end="265:76"><name pos:start="265:9" pos:end="265:30"><name pos:start="265:9" pos:end="265:9">s</name><operator pos:start="265:10" pos:end="265:11">-&gt;</operator><name pos:start="265:12" pos:end="265:21">last_frame</name><operator pos:start="265:22" pos:end="265:23">-&gt;</operator><name pos:start="265:24" pos:end="265:27">data</name><index pos:start="265:28" pos:end="265:30">[<expr pos:start="265:29" pos:end="265:29"><literal type="number" pos:start="265:29" pos:end="265:29">1</literal></expr>]</index></name>        <operator pos:start="265:39" pos:end="265:39">=</operator> <name pos:start="265:41" pos:end="265:62"><name pos:start="265:41" pos:end="265:41">s</name><operator pos:start="265:42" pos:end="265:43">-&gt;</operator><name pos:start="265:44" pos:end="265:53">last_frame</name><operator pos:start="265:54" pos:end="265:55">-&gt;</operator><name pos:start="265:56" pos:end="265:59">data</name><index pos:start="265:60" pos:end="265:62">[<expr pos:start="265:61" pos:end="265:61"><literal type="number" pos:start="265:61" pos:end="265:61">0</literal></expr>]</index></name> <operator pos:start="265:64" pos:end="265:64">+</operator> <name pos:start="265:66" pos:end="265:69"><name pos:start="265:66" pos:end="265:66">s</name><operator pos:start="265:67" pos:end="265:68">-&gt;</operator><name pos:start="265:69" pos:end="265:69">w</name></name> <operator pos:start="265:71" pos:end="265:71">*</operator> <name pos:start="265:73" pos:end="265:76"><name pos:start="265:73" pos:end="265:73">s</name><operator pos:start="265:74" pos:end="265:75">-&gt;</operator><name pos:start="265:76" pos:end="265:76">h</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="266:9" pos:end="266:86"><expr pos:start="266:9" pos:end="266:85"><name pos:start="266:9" pos:end="266:30"><name pos:start="266:9" pos:end="266:9">s</name><operator pos:start="266:10" pos:end="266:11">-&gt;</operator><name pos:start="266:12" pos:end="266:21">last_frame</name><operator pos:start="266:22" pos:end="266:23">-&gt;</operator><name pos:start="266:24" pos:end="266:27">data</name><index pos:start="266:28" pos:end="266:30">[<expr pos:start="266:29" pos:end="266:29"><literal type="number" pos:start="266:29" pos:end="266:29">2</literal></expr>]</index></name>        <operator pos:start="266:39" pos:end="266:39">=</operator> <name pos:start="266:41" pos:end="266:62"><name pos:start="266:41" pos:end="266:41">s</name><operator pos:start="266:42" pos:end="266:43">-&gt;</operator><name pos:start="266:44" pos:end="266:53">last_frame</name><operator pos:start="266:54" pos:end="266:55">-&gt;</operator><name pos:start="266:56" pos:end="266:59">data</name><index pos:start="266:60" pos:end="266:62">[<expr pos:start="266:61" pos:end="266:61"><literal type="number" pos:start="266:61" pos:end="266:61">1</literal></expr>]</index></name> <operator pos:start="266:64" pos:end="266:64">+</operator> <operator pos:start="266:66" pos:end="266:66">(</operator><operator pos:start="266:67" pos:end="266:67">(</operator><name pos:start="266:68" pos:end="266:71"><name pos:start="266:68" pos:end="266:68">s</name><operator pos:start="266:69" pos:end="266:70">-&gt;</operator><name pos:start="266:71" pos:end="266:71">w</name></name> <operator pos:start="266:73" pos:end="266:73">*</operator> <name pos:start="266:75" pos:end="266:78"><name pos:start="266:75" pos:end="266:75">s</name><operator pos:start="266:76" pos:end="266:77">-&gt;</operator><name pos:start="266:78" pos:end="266:78">h</name></name><operator pos:start="266:79" pos:end="266:79">)</operator> <operator pos:start="266:81" pos:end="266:82">&gt;&gt;</operator> <literal type="number" pos:start="266:84" pos:end="266:84">2</literal><operator pos:start="266:85" pos:end="266:85">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="267:9" pos:end="267:79"><expr pos:start="267:9" pos:end="267:78"><name pos:start="267:9" pos:end="267:34"><name pos:start="267:9" pos:end="267:9">s</name><operator pos:start="267:10" pos:end="267:11">-&gt;</operator><name pos:start="267:12" pos:end="267:21">last_frame</name><operator pos:start="267:22" pos:end="267:23">-&gt;</operator><name pos:start="267:24" pos:end="267:31">linesize</name><index pos:start="267:32" pos:end="267:34">[<expr pos:start="267:33" pos:end="267:33"><literal type="number" pos:start="267:33" pos:end="267:33">1</literal></expr>]</index></name>    <operator pos:start="267:39" pos:end="267:39">=</operator> <name pos:start="267:41" pos:end="267:66"><name pos:start="267:41" pos:end="267:41">s</name><operator pos:start="267:42" pos:end="267:43">-&gt;</operator><name pos:start="267:44" pos:end="267:53">last_frame</name><operator pos:start="267:54" pos:end="267:55">-&gt;</operator><name pos:start="267:56" pos:end="267:63">linesize</name><index pos:start="267:64" pos:end="267:66">[<expr pos:start="267:65" pos:end="267:65"><literal type="number" pos:start="267:65" pos:end="267:65">2</literal></expr>]</index></name> <operator pos:start="267:68" pos:end="267:68">=</operator> <name pos:start="267:70" pos:end="267:73"><name pos:start="267:70" pos:end="267:70">s</name><operator pos:start="267:71" pos:end="267:72">-&gt;</operator><name pos:start="267:73" pos:end="267:73">w</name></name> <operator pos:start="267:75" pos:end="267:76">&gt;&gt;</operator> <literal type="number" pos:start="267:78" pos:end="267:78">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:77"><expr pos:start="269:9" pos:end="269:76"><name pos:start="269:9" pos:end="269:30"><name pos:start="269:9" pos:end="269:9">s</name><operator pos:start="269:10" pos:end="269:11">-&gt;</operator><name pos:start="269:12" pos:end="269:21">best_frame</name><operator pos:start="269:22" pos:end="269:23">-&gt;</operator><name pos:start="269:24" pos:end="269:27">data</name><index pos:start="269:28" pos:end="269:30">[<expr pos:start="269:29" pos:end="269:29"><literal type="number" pos:start="269:29" pos:end="269:29">1</literal></expr>]</index></name>        <operator pos:start="269:39" pos:end="269:39">=</operator> <name pos:start="269:41" pos:end="269:62"><name pos:start="269:41" pos:end="269:41">s</name><operator pos:start="269:42" pos:end="269:43">-&gt;</operator><name pos:start="269:44" pos:end="269:53">best_frame</name><operator pos:start="269:54" pos:end="269:55">-&gt;</operator><name pos:start="269:56" pos:end="269:59">data</name><index pos:start="269:60" pos:end="269:62">[<expr pos:start="269:61" pos:end="269:61"><literal type="number" pos:start="269:61" pos:end="269:61">0</literal></expr>]</index></name> <operator pos:start="269:64" pos:end="269:64">+</operator> <name pos:start="269:66" pos:end="269:69"><name pos:start="269:66" pos:end="269:66">s</name><operator pos:start="269:67" pos:end="269:68">-&gt;</operator><name pos:start="269:69" pos:end="269:69">w</name></name> <operator pos:start="269:71" pos:end="269:71">*</operator> <name pos:start="269:73" pos:end="269:76"><name pos:start="269:73" pos:end="269:73">s</name><operator pos:start="269:74" pos:end="269:75">-&gt;</operator><name pos:start="269:76" pos:end="269:76">h</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="270:9" pos:end="270:86"><expr pos:start="270:9" pos:end="270:85"><name pos:start="270:9" pos:end="270:30"><name pos:start="270:9" pos:end="270:9">s</name><operator pos:start="270:10" pos:end="270:11">-&gt;</operator><name pos:start="270:12" pos:end="270:21">best_frame</name><operator pos:start="270:22" pos:end="270:23">-&gt;</operator><name pos:start="270:24" pos:end="270:27">data</name><index pos:start="270:28" pos:end="270:30">[<expr pos:start="270:29" pos:end="270:29"><literal type="number" pos:start="270:29" pos:end="270:29">2</literal></expr>]</index></name>        <operator pos:start="270:39" pos:end="270:39">=</operator> <name pos:start="270:41" pos:end="270:62"><name pos:start="270:41" pos:end="270:41">s</name><operator pos:start="270:42" pos:end="270:43">-&gt;</operator><name pos:start="270:44" pos:end="270:53">best_frame</name><operator pos:start="270:54" pos:end="270:55">-&gt;</operator><name pos:start="270:56" pos:end="270:59">data</name><index pos:start="270:60" pos:end="270:62">[<expr pos:start="270:61" pos:end="270:61"><literal type="number" pos:start="270:61" pos:end="270:61">1</literal></expr>]</index></name> <operator pos:start="270:64" pos:end="270:64">+</operator> <operator pos:start="270:66" pos:end="270:66">(</operator><operator pos:start="270:67" pos:end="270:67">(</operator><name pos:start="270:68" pos:end="270:71"><name pos:start="270:68" pos:end="270:68">s</name><operator pos:start="270:69" pos:end="270:70">-&gt;</operator><name pos:start="270:71" pos:end="270:71">w</name></name> <operator pos:start="270:73" pos:end="270:73">*</operator> <name pos:start="270:75" pos:end="270:78"><name pos:start="270:75" pos:end="270:75">s</name><operator pos:start="270:76" pos:end="270:77">-&gt;</operator><name pos:start="270:78" pos:end="270:78">h</name></name><operator pos:start="270:79" pos:end="270:79">)</operator> <operator pos:start="270:81" pos:end="270:82">&gt;&gt;</operator> <literal type="number" pos:start="270:84" pos:end="270:84">2</literal><operator pos:start="270:85" pos:end="270:85">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="271:9" pos:end="271:79"><expr pos:start="271:9" pos:end="271:78"><name pos:start="271:9" pos:end="271:34"><name pos:start="271:9" pos:end="271:9">s</name><operator pos:start="271:10" pos:end="271:11">-&gt;</operator><name pos:start="271:12" pos:end="271:21">best_frame</name><operator pos:start="271:22" pos:end="271:23">-&gt;</operator><name pos:start="271:24" pos:end="271:31">linesize</name><index pos:start="271:32" pos:end="271:34">[<expr pos:start="271:33" pos:end="271:33"><literal type="number" pos:start="271:33" pos:end="271:33">1</literal></expr>]</index></name>    <operator pos:start="271:39" pos:end="271:39">=</operator> <name pos:start="271:41" pos:end="271:66"><name pos:start="271:41" pos:end="271:41">s</name><operator pos:start="271:42" pos:end="271:43">-&gt;</operator><name pos:start="271:44" pos:end="271:53">best_frame</name><operator pos:start="271:54" pos:end="271:55">-&gt;</operator><name pos:start="271:56" pos:end="271:63">linesize</name><index pos:start="271:64" pos:end="271:66">[<expr pos:start="271:65" pos:end="271:65"><literal type="number" pos:start="271:65" pos:end="271:65">2</literal></expr>]</index></name> <operator pos:start="271:68" pos:end="271:68">=</operator> <name pos:start="271:70" pos:end="271:73"><name pos:start="271:70" pos:end="271:70">s</name><operator pos:start="271:71" pos:end="271:72">-&gt;</operator><name pos:start="271:73" pos:end="271:73">w</name></name> <operator pos:start="271:75" pos:end="271:76">&gt;&gt;</operator> <literal type="number" pos:start="271:78" pos:end="271:78">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:80"><expr pos:start="273:9" pos:end="273:79"><name pos:start="273:9" pos:end="273:33"><name pos:start="273:9" pos:end="273:9">s</name><operator pos:start="273:10" pos:end="273:11">-&gt;</operator><name pos:start="273:12" pos:end="273:24">scratch_frame</name><operator pos:start="273:25" pos:end="273:26">-&gt;</operator><name pos:start="273:27" pos:end="273:30">data</name><index pos:start="273:31" pos:end="273:33">[<expr pos:start="273:32" pos:end="273:32"><literal type="number" pos:start="273:32" pos:end="273:32">1</literal></expr>]</index></name>     <operator pos:start="273:39" pos:end="273:39">=</operator> <name pos:start="273:41" pos:end="273:65"><name pos:start="273:41" pos:end="273:41">s</name><operator pos:start="273:42" pos:end="273:43">-&gt;</operator><name pos:start="273:44" pos:end="273:56">scratch_frame</name><operator pos:start="273:57" pos:end="273:58">-&gt;</operator><name pos:start="273:59" pos:end="273:62">data</name><index pos:start="273:63" pos:end="273:65">[<expr pos:start="273:64" pos:end="273:64"><literal type="number" pos:start="273:64" pos:end="273:64">0</literal></expr>]</index></name> <operator pos:start="273:67" pos:end="273:67">+</operator> <name pos:start="273:69" pos:end="273:72"><name pos:start="273:69" pos:end="273:69">s</name><operator pos:start="273:70" pos:end="273:71">-&gt;</operator><name pos:start="273:72" pos:end="273:72">w</name></name> <operator pos:start="273:74" pos:end="273:74">*</operator> <name pos:start="273:76" pos:end="273:79"><name pos:start="273:76" pos:end="273:76">s</name><operator pos:start="273:77" pos:end="273:78">-&gt;</operator><name pos:start="273:79" pos:end="273:79">h</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="274:9" pos:end="274:89"><expr pos:start="274:9" pos:end="274:88"><name pos:start="274:9" pos:end="274:33"><name pos:start="274:9" pos:end="274:9">s</name><operator pos:start="274:10" pos:end="274:11">-&gt;</operator><name pos:start="274:12" pos:end="274:24">scratch_frame</name><operator pos:start="274:25" pos:end="274:26">-&gt;</operator><name pos:start="274:27" pos:end="274:30">data</name><index pos:start="274:31" pos:end="274:33">[<expr pos:start="274:32" pos:end="274:32"><literal type="number" pos:start="274:32" pos:end="274:32">2</literal></expr>]</index></name>     <operator pos:start="274:39" pos:end="274:39">=</operator> <name pos:start="274:41" pos:end="274:65"><name pos:start="274:41" pos:end="274:41">s</name><operator pos:start="274:42" pos:end="274:43">-&gt;</operator><name pos:start="274:44" pos:end="274:56">scratch_frame</name><operator pos:start="274:57" pos:end="274:58">-&gt;</operator><name pos:start="274:59" pos:end="274:62">data</name><index pos:start="274:63" pos:end="274:65">[<expr pos:start="274:64" pos:end="274:64"><literal type="number" pos:start="274:64" pos:end="274:64">1</literal></expr>]</index></name> <operator pos:start="274:67" pos:end="274:67">+</operator> <operator pos:start="274:69" pos:end="274:69">(</operator><operator pos:start="274:70" pos:end="274:70">(</operator><name pos:start="274:71" pos:end="274:74"><name pos:start="274:71" pos:end="274:71">s</name><operator pos:start="274:72" pos:end="274:73">-&gt;</operator><name pos:start="274:74" pos:end="274:74">w</name></name> <operator pos:start="274:76" pos:end="274:76">*</operator> <name pos:start="274:78" pos:end="274:81"><name pos:start="274:78" pos:end="274:78">s</name><operator pos:start="274:79" pos:end="274:80">-&gt;</operator><name pos:start="274:81" pos:end="274:81">h</name></name><operator pos:start="274:82" pos:end="274:82">)</operator> <operator pos:start="274:84" pos:end="274:85">&gt;&gt;</operator> <literal type="number" pos:start="274:87" pos:end="274:87">2</literal><operator pos:start="274:88" pos:end="274:88">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="275:9" pos:end="275:82"><expr pos:start="275:9" pos:end="275:81"><name pos:start="275:9" pos:end="275:37"><name pos:start="275:9" pos:end="275:9">s</name><operator pos:start="275:10" pos:end="275:11">-&gt;</operator><name pos:start="275:12" pos:end="275:24">scratch_frame</name><operator pos:start="275:25" pos:end="275:26">-&gt;</operator><name pos:start="275:27" pos:end="275:34">linesize</name><index pos:start="275:35" pos:end="275:37">[<expr pos:start="275:36" pos:end="275:36"><literal type="number" pos:start="275:36" pos:end="275:36">1</literal></expr>]</index></name> <operator pos:start="275:39" pos:end="275:39">=</operator> <name pos:start="275:41" pos:end="275:69"><name pos:start="275:41" pos:end="275:41">s</name><operator pos:start="275:42" pos:end="275:43">-&gt;</operator><name pos:start="275:44" pos:end="275:56">scratch_frame</name><operator pos:start="275:57" pos:end="275:58">-&gt;</operator><name pos:start="275:59" pos:end="275:66">linesize</name><index pos:start="275:67" pos:end="275:69">[<expr pos:start="275:68" pos:end="275:68"><literal type="number" pos:start="275:68" pos:end="275:68">2</literal></expr>]</index></name> <operator pos:start="275:71" pos:end="275:71">=</operator> <name pos:start="275:73" pos:end="275:76"><name pos:start="275:73" pos:end="275:73">s</name><operator pos:start="275:74" pos:end="275:75">-&gt;</operator><name pos:start="275:76" pos:end="275:76">w</name></name> <operator pos:start="275:78" pos:end="275:79">&gt;&gt;</operator> <literal type="number" pos:start="275:81" pos:end="275:81">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:56"><expr pos:start="277:9" pos:end="277:55"><name pos:start="277:9" pos:end="277:31"><name pos:start="277:9" pos:end="277:9">s</name><operator pos:start="277:10" pos:end="277:11">-&gt;</operator><name pos:start="277:12" pos:end="277:22">input_frame</name><operator pos:start="277:23" pos:end="277:24">-&gt;</operator><name pos:start="277:25" pos:end="277:28">data</name><index pos:start="277:29" pos:end="277:31">[<expr pos:start="277:30" pos:end="277:30"><literal type="number" pos:start="277:30" pos:end="277:30">0</literal></expr>]</index></name>       <operator pos:start="277:39" pos:end="277:39">=</operator> <name pos:start="277:41" pos:end="277:55"><name pos:start="277:41" pos:end="277:41">s</name><operator pos:start="277:42" pos:end="277:43">-&gt;</operator><name pos:start="277:44" pos:end="277:52">pict_bufs</name><index pos:start="277:53" pos:end="277:55">[<expr pos:start="277:54" pos:end="277:54"><literal type="number" pos:start="277:54" pos:end="277:54">3</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="278:9" pos:end="278:45"><expr pos:start="278:9" pos:end="278:44"><name pos:start="278:9" pos:end="278:35"><name pos:start="278:9" pos:end="278:9">s</name><operator pos:start="278:10" pos:end="278:11">-&gt;</operator><name pos:start="278:12" pos:end="278:22">input_frame</name><operator pos:start="278:23" pos:end="278:24">-&gt;</operator><name pos:start="278:25" pos:end="278:32">linesize</name><index pos:start="278:33" pos:end="278:35">[<expr pos:start="278:34" pos:end="278:34"><literal type="number" pos:start="278:34" pos:end="278:34">0</literal></expr>]</index></name>   <operator pos:start="278:39" pos:end="278:39">=</operator> <name pos:start="278:41" pos:end="278:44"><name pos:start="278:41" pos:end="278:41">s</name><operator pos:start="278:42" pos:end="278:43">-&gt;</operator><name pos:start="278:44" pos:end="278:44">w</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="279:9" pos:end="279:78"><expr pos:start="279:9" pos:end="279:77"><name pos:start="279:9" pos:end="279:31"><name pos:start="279:9" pos:end="279:9">s</name><operator pos:start="279:10" pos:end="279:11">-&gt;</operator><name pos:start="279:12" pos:end="279:22">input_frame</name><operator pos:start="279:23" pos:end="279:24">-&gt;</operator><name pos:start="279:25" pos:end="279:28">data</name><index pos:start="279:29" pos:end="279:31">[<expr pos:start="279:30" pos:end="279:30"><literal type="number" pos:start="279:30" pos:end="279:30">1</literal></expr>]</index></name>       <operator pos:start="279:39" pos:end="279:39">=</operator> <name pos:start="279:41" pos:end="279:63"><name pos:start="279:41" pos:end="279:41">s</name><operator pos:start="279:42" pos:end="279:43">-&gt;</operator><name pos:start="279:44" pos:end="279:54">input_frame</name><operator pos:start="279:55" pos:end="279:56">-&gt;</operator><name pos:start="279:57" pos:end="279:60">data</name><index pos:start="279:61" pos:end="279:63">[<expr pos:start="279:62" pos:end="279:62"><literal type="number" pos:start="279:62" pos:end="279:62">0</literal></expr>]</index></name> <operator pos:start="279:65" pos:end="279:65">+</operator> <name pos:start="279:67" pos:end="279:70"><name pos:start="279:67" pos:end="279:67">s</name><operator pos:start="279:68" pos:end="279:69">-&gt;</operator><name pos:start="279:70" pos:end="279:70">w</name></name> <operator pos:start="279:72" pos:end="279:72">*</operator> <name pos:start="279:74" pos:end="279:77"><name pos:start="279:74" pos:end="279:74">s</name><operator pos:start="279:75" pos:end="279:76">-&gt;</operator><name pos:start="279:77" pos:end="279:77">h</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="280:9" pos:end="280:87"><expr pos:start="280:9" pos:end="280:86"><name pos:start="280:9" pos:end="280:31"><name pos:start="280:9" pos:end="280:9">s</name><operator pos:start="280:10" pos:end="280:11">-&gt;</operator><name pos:start="280:12" pos:end="280:22">input_frame</name><operator pos:start="280:23" pos:end="280:24">-&gt;</operator><name pos:start="280:25" pos:end="280:28">data</name><index pos:start="280:29" pos:end="280:31">[<expr pos:start="280:30" pos:end="280:30"><literal type="number" pos:start="280:30" pos:end="280:30">2</literal></expr>]</index></name>       <operator pos:start="280:39" pos:end="280:39">=</operator> <name pos:start="280:41" pos:end="280:63"><name pos:start="280:41" pos:end="280:41">s</name><operator pos:start="280:42" pos:end="280:43">-&gt;</operator><name pos:start="280:44" pos:end="280:54">input_frame</name><operator pos:start="280:55" pos:end="280:56">-&gt;</operator><name pos:start="280:57" pos:end="280:60">data</name><index pos:start="280:61" pos:end="280:63">[<expr pos:start="280:62" pos:end="280:62"><literal type="number" pos:start="280:62" pos:end="280:62">1</literal></expr>]</index></name> <operator pos:start="280:65" pos:end="280:65">+</operator> <operator pos:start="280:67" pos:end="280:67">(</operator><operator pos:start="280:68" pos:end="280:68">(</operator><name pos:start="280:69" pos:end="280:72"><name pos:start="280:69" pos:end="280:69">s</name><operator pos:start="280:70" pos:end="280:71">-&gt;</operator><name pos:start="280:72" pos:end="280:72">w</name></name> <operator pos:start="280:74" pos:end="280:74">*</operator> <name pos:start="280:76" pos:end="280:79"><name pos:start="280:76" pos:end="280:76">s</name><operator pos:start="280:77" pos:end="280:78">-&gt;</operator><name pos:start="280:79" pos:end="280:79">h</name></name><operator pos:start="280:80" pos:end="280:80">)</operator> <operator pos:start="280:82" pos:end="280:83">&gt;&gt;</operator> <literal type="number" pos:start="280:85" pos:end="280:85">2</literal><operator pos:start="280:86" pos:end="280:86">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="281:9" pos:end="281:80"><expr pos:start="281:9" pos:end="281:79"><name pos:start="281:9" pos:end="281:35"><name pos:start="281:9" pos:end="281:9">s</name><operator pos:start="281:10" pos:end="281:11">-&gt;</operator><name pos:start="281:12" pos:end="281:22">input_frame</name><operator pos:start="281:23" pos:end="281:24">-&gt;</operator><name pos:start="281:25" pos:end="281:32">linesize</name><index pos:start="281:33" pos:end="281:35">[<expr pos:start="281:34" pos:end="281:34"><literal type="number" pos:start="281:34" pos:end="281:34">1</literal></expr>]</index></name>   <operator pos:start="281:39" pos:end="281:39">=</operator> <name pos:start="281:41" pos:end="281:67"><name pos:start="281:41" pos:end="281:41">s</name><operator pos:start="281:42" pos:end="281:43">-&gt;</operator><name pos:start="281:44" pos:end="281:54">input_frame</name><operator pos:start="281:55" pos:end="281:56">-&gt;</operator><name pos:start="281:57" pos:end="281:64">linesize</name><index pos:start="281:65" pos:end="281:67">[<expr pos:start="281:66" pos:end="281:66"><literal type="number" pos:start="281:66" pos:end="281:66">2</literal></expr>]</index></name> <operator pos:start="281:69" pos:end="281:69">=</operator> <name pos:start="281:71" pos:end="281:74"><name pos:start="281:71" pos:end="281:71">s</name><operator pos:start="281:72" pos:end="281:73">-&gt;</operator><name pos:start="281:74" pos:end="281:74">w</name></name> <operator pos:start="281:76" pos:end="281:77">&gt;&gt;</operator> <literal type="number" pos:start="281:79" pos:end="281:79">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="284:5" pos:end="284:38"><expr pos:start="284:5" pos:end="284:37"><name pos:start="284:5" pos:end="284:17"><name pos:start="284:5" pos:end="284:5">s</name><operator pos:start="284:6" pos:end="284:7">-&gt;</operator><name pos:start="284:8" pos:end="284:17">min_strips</name></name> <operator pos:start="284:19" pos:end="284:19">=</operator> <name pos:start="284:21" pos:end="284:37"><name pos:start="284:21" pos:end="284:21">s</name><operator pos:start="284:22" pos:end="284:23">-&gt;</operator><name pos:start="284:24" pos:end="284:37">min_min_strips</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="285:5" pos:end="288:0"><expr pos:start="285:5" pos:end="285:37"><name pos:start="285:5" pos:end="285:17"><name pos:start="285:5" pos:end="285:5">s</name><operator pos:start="285:6" pos:end="285:7">-&gt;</operator><name pos:start="285:8" pos:end="285:17">max_strips</name></name> <operator pos:start="285:19" pos:end="285:19">=</operator> <name pos:start="285:21" pos:end="285:37"><name pos:start="285:21" pos:end="285:21">s</name><operator pos:start="285:22" pos:end="285:23">-&gt;</operator><name pos:start="285:24" pos:end="285:37">max_max_strips</name></name></expr>;</expr_stmt>

<cpp:ifdef pos:start="287:1" pos:end="287:23">#<cpp:directive pos:start="287:2" pos:end="287:6">ifdef</cpp:directive> <name pos:start="287:8" pos:end="287:23">CINEPAKENC_DEBUG</name></cpp:ifdef>
    <expr_stmt pos:start="288:5" pos:end="290:0"><expr pos:start="288:5" pos:end="288:105"><name pos:start="288:5" pos:end="288:18"><name pos:start="288:5" pos:end="288:5">s</name><operator pos:start="288:6" pos:end="288:7">-&gt;</operator><name pos:start="288:8" pos:end="288:18">num_v1_mode</name></name> <operator pos:start="288:20" pos:end="288:20">=</operator> <name pos:start="288:22" pos:end="288:35"><name pos:start="288:22" pos:end="288:22">s</name><operator pos:start="288:23" pos:end="288:24">-&gt;</operator><name pos:start="288:25" pos:end="288:35">num_v4_mode</name></name> <operator pos:start="288:37" pos:end="288:37">=</operator> <name pos:start="288:39" pos:end="288:52"><name pos:start="288:39" pos:end="288:39">s</name><operator pos:start="288:40" pos:end="288:41">-&gt;</operator><name pos:start="288:42" pos:end="288:52">num_mc_mode</name></name> <operator pos:start="288:54" pos:end="288:54">=</operator> <name pos:start="288:56" pos:end="288:69"><name pos:start="288:56" pos:end="288:56">s</name><operator pos:start="288:57" pos:end="288:58">-&gt;</operator><name pos:start="288:59" pos:end="288:69">num_v1_encs</name></name> <operator pos:start="288:71" pos:end="288:71">=</operator> <name pos:start="288:73" pos:end="288:86"><name pos:start="288:73" pos:end="288:73">s</name><operator pos:start="288:74" pos:end="288:75">-&gt;</operator><name pos:start="288:76" pos:end="288:86">num_v4_encs</name></name> <operator pos:start="288:88" pos:end="288:88">=</operator> <name pos:start="288:90" pos:end="288:101"><name pos:start="288:90" pos:end="288:90">s</name><operator pos:start="288:91" pos:end="288:92">-&gt;</operator><name pos:start="288:93" pos:end="288:101">num_skips</name></name> <operator pos:start="288:103" pos:end="288:103">=</operator> <literal type="number" pos:start="288:105" pos:end="288:105">0</literal></expr>;</expr_stmt>
<cpp:endif pos:start="289:1" pos:end="289:6">#<cpp:directive pos:start="289:2" pos:end="289:6">endif</cpp:directive></cpp:endif>

    <return pos:start="291:5" pos:end="291:13">return <expr pos:start="291:12" pos:end="291:12"><literal type="number" pos:start="291:12" pos:end="291:12">0</literal></expr>;</return>

<label pos:start="293:1" pos:end="293:7"><name pos:start="293:1" pos:end="293:6">enomem</name>:</label>
    <expr_stmt pos:start="294:5" pos:end="294:34"><expr pos:start="294:5" pos:end="294:33"><call pos:start="294:5" pos:end="294:33"><name pos:start="294:5" pos:end="294:17">av_frame_free</name><argument_list pos:start="294:18" pos:end="294:33">(<argument pos:start="294:19" pos:end="294:32"><expr pos:start="294:19" pos:end="294:32"><operator pos:start="294:19" pos:end="294:19">&amp;</operator><name pos:start="294:20" pos:end="294:32"><name pos:start="294:20" pos:end="294:20">s</name><operator pos:start="294:21" pos:end="294:22">-&gt;</operator><name pos:start="294:23" pos:end="294:32">last_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="295:5" pos:end="295:34"><expr pos:start="295:5" pos:end="295:33"><call pos:start="295:5" pos:end="295:33"><name pos:start="295:5" pos:end="295:17">av_frame_free</name><argument_list pos:start="295:18" pos:end="295:33">(<argument pos:start="295:19" pos:end="295:32"><expr pos:start="295:19" pos:end="295:32"><operator pos:start="295:19" pos:end="295:19">&amp;</operator><name pos:start="295:20" pos:end="295:32"><name pos:start="295:20" pos:end="295:20">s</name><operator pos:start="295:21" pos:end="295:22">-&gt;</operator><name pos:start="295:23" pos:end="295:32">best_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="296:5" pos:end="296:37"><expr pos:start="296:5" pos:end="296:36"><call pos:start="296:5" pos:end="296:36"><name pos:start="296:5" pos:end="296:17">av_frame_free</name><argument_list pos:start="296:18" pos:end="296:36">(<argument pos:start="296:19" pos:end="296:35"><expr pos:start="296:19" pos:end="296:35"><operator pos:start="296:19" pos:end="296:19">&amp;</operator><name pos:start="296:20" pos:end="296:35"><name pos:start="296:20" pos:end="296:20">s</name><operator pos:start="296:21" pos:end="296:22">-&gt;</operator><name pos:start="296:23" pos:end="296:35">scratch_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="297:5" pos:end="298:39"><if pos:start="297:5" pos:end="298:39">if <condition pos:start="297:8" pos:end="297:43">(<expr pos:start="297:9" pos:end="297:42"><name pos:start="297:9" pos:end="297:22"><name pos:start="297:9" pos:end="297:13">avctx</name><operator pos:start="297:14" pos:end="297:15">-&gt;</operator><name pos:start="297:16" pos:end="297:22">pix_fmt</name></name> <operator pos:start="297:24" pos:end="297:25">==</operator> <name pos:start="297:27" pos:end="297:42">AV_PIX_FMT_RGB24</name></expr>)</condition><block type="pseudo" pos:start="298:9" pos:end="298:39"><block_content pos:start="298:9" pos:end="298:39">
        <expr_stmt pos:start="298:9" pos:end="298:39"><expr pos:start="298:9" pos:end="298:38"><call pos:start="298:9" pos:end="298:38"><name pos:start="298:9" pos:end="298:21">av_frame_free</name><argument_list pos:start="298:22" pos:end="298:38">(<argument pos:start="298:23" pos:end="298:37"><expr pos:start="298:23" pos:end="298:37"><operator pos:start="298:23" pos:end="298:23">&amp;</operator><name pos:start="298:24" pos:end="298:37"><name pos:start="298:24" pos:end="298:24">s</name><operator pos:start="298:25" pos:end="298:26">-&gt;</operator><name pos:start="298:27" pos:end="298:37">input_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="299:5" pos:end="299:33"><expr pos:start="299:5" pos:end="299:32"><call pos:start="299:5" pos:end="299:32"><name pos:start="299:5" pos:end="299:12">av_freep</name><argument_list pos:start="299:13" pos:end="299:32">(<argument pos:start="299:14" pos:end="299:31"><expr pos:start="299:14" pos:end="299:31"><operator pos:start="299:14" pos:end="299:14">&amp;</operator><name pos:start="299:15" pos:end="299:31"><name pos:start="299:15" pos:end="299:15">s</name><operator pos:start="299:16" pos:end="299:17">-&gt;</operator><name pos:start="299:18" pos:end="299:31">codebook_input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="300:5" pos:end="300:35"><expr pos:start="300:5" pos:end="300:34"><call pos:start="300:5" pos:end="300:34"><name pos:start="300:5" pos:end="300:12">av_freep</name><argument_list pos:start="300:13" pos:end="300:34">(<argument pos:start="300:14" pos:end="300:33"><expr pos:start="300:14" pos:end="300:33"><operator pos:start="300:14" pos:end="300:14">&amp;</operator><name pos:start="300:15" pos:end="300:33"><name pos:start="300:15" pos:end="300:15">s</name><operator pos:start="300:16" pos:end="300:17">-&gt;</operator><name pos:start="300:18" pos:end="300:33">codebook_closest</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="301:5" pos:end="301:28"><expr pos:start="301:5" pos:end="301:27"><call pos:start="301:5" pos:end="301:27"><name pos:start="301:5" pos:end="301:12">av_freep</name><argument_list pos:start="301:13" pos:end="301:27">(<argument pos:start="301:14" pos:end="301:26"><expr pos:start="301:14" pos:end="301:26"><operator pos:start="301:14" pos:end="301:14">&amp;</operator><name pos:start="301:15" pos:end="301:26"><name pos:start="301:15" pos:end="301:15">s</name><operator pos:start="301:16" pos:end="301:17">-&gt;</operator><name pos:start="301:18" pos:end="301:26">strip_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="302:5" pos:end="302:28"><expr pos:start="302:5" pos:end="302:27"><call pos:start="302:5" pos:end="302:27"><name pos:start="302:5" pos:end="302:12">av_freep</name><argument_list pos:start="302:13" pos:end="302:27">(<argument pos:start="302:14" pos:end="302:26"><expr pos:start="302:14" pos:end="302:26"><operator pos:start="302:14" pos:end="302:14">&amp;</operator><name pos:start="302:15" pos:end="302:26"><name pos:start="302:15" pos:end="302:15">s</name><operator pos:start="302:16" pos:end="302:17">-&gt;</operator><name pos:start="302:18" pos:end="302:26">frame_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="303:5" pos:end="305:0"><expr pos:start="303:5" pos:end="303:20"><call pos:start="303:5" pos:end="303:20"><name pos:start="303:5" pos:end="303:12">av_freep</name><argument_list pos:start="303:13" pos:end="303:20">(<argument pos:start="303:14" pos:end="303:19"><expr pos:start="303:14" pos:end="303:19"><operator pos:start="303:14" pos:end="303:14">&amp;</operator><name pos:start="303:15" pos:end="303:19"><name pos:start="303:15" pos:end="303:15">s</name><operator pos:start="303:16" pos:end="303:17">-&gt;</operator><name pos:start="303:18" pos:end="303:19">mb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:ifdef pos:start="304:1" pos:end="304:23">#<cpp:directive pos:start="304:2" pos:end="304:6">ifdef</cpp:directive> <name pos:start="304:8" pos:end="304:23">CINEPAKENC_DEBUG</name></cpp:ifdef>
    <expr_stmt pos:start="305:5" pos:end="307:0"><expr pos:start="305:5" pos:end="305:25"><call pos:start="305:5" pos:end="305:25"><name pos:start="305:5" pos:end="305:12">av_freep</name><argument_list pos:start="305:13" pos:end="305:25">(<argument pos:start="305:14" pos:end="305:24"><expr pos:start="305:14" pos:end="305:24"><operator pos:start="305:14" pos:end="305:14">&amp;</operator><name pos:start="305:15" pos:end="305:24"><name pos:start="305:15" pos:end="305:15">s</name><operator pos:start="305:16" pos:end="305:17">-&gt;</operator><name pos:start="305:18" pos:end="305:24">best_mb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="306:1" pos:end="306:6">#<cpp:directive pos:start="306:2" pos:end="306:6">endif</cpp:directive></cpp:endif>

    <for pos:start="308:5" pos:end="309:35">for<control pos:start="308:8" pos:end="308:69">(<init pos:start="308:9" pos:end="308:14"><expr pos:start="308:9" pos:end="308:13"><name pos:start="308:9" pos:end="308:9">x</name> <operator pos:start="308:11" pos:end="308:11">=</operator> <literal type="number" pos:start="308:13" pos:end="308:13">0</literal></expr>;</init> <condition pos:start="308:16" pos:end="308:64"><expr pos:start="308:16" pos:end="308:63"><name pos:start="308:16" pos:end="308:16">x</name> <operator pos:start="308:18" pos:end="308:18">&lt;</operator> <operator pos:start="308:20" pos:end="308:20">(</operator><ternary pos:start="308:21" pos:end="308:62"><condition pos:start="308:21" pos:end="308:56"><expr pos:start="308:21" pos:end="308:54"><name pos:start="308:21" pos:end="308:34"><name pos:start="308:21" pos:end="308:25">avctx</name><operator pos:start="308:26" pos:end="308:27">-&gt;</operator><name pos:start="308:28" pos:end="308:34">pix_fmt</name></name> <operator pos:start="308:36" pos:end="308:37">==</operator> <name pos:start="308:39" pos:end="308:54">AV_PIX_FMT_RGB24</name></expr> ?</condition><then pos:start="308:58" pos:end="308:58"> <expr pos:start="308:58" pos:end="308:58"><literal type="number" pos:start="308:58" pos:end="308:58">4</literal></expr> </then><else pos:start="308:60" pos:end="308:62">: <expr pos:start="308:62" pos:end="308:62"><literal type="number" pos:start="308:62" pos:end="308:62">3</literal></expr></else></ternary><operator pos:start="308:63" pos:end="308:63">)</operator></expr>;</condition> <incr pos:start="308:66" pos:end="308:68"><expr pos:start="308:66" pos:end="308:68"><name pos:start="308:66" pos:end="308:66">x</name><operator pos:start="308:67" pos:end="308:68">++</operator></expr></incr>)</control><block type="pseudo" pos:start="309:9" pos:end="309:35"><block_content pos:start="309:9" pos:end="309:35">
        <expr_stmt pos:start="309:9" pos:end="309:35"><expr pos:start="309:9" pos:end="309:34"><call pos:start="309:9" pos:end="309:34"><name pos:start="309:9" pos:end="309:16">av_freep</name><argument_list pos:start="309:17" pos:end="309:34">(<argument pos:start="309:18" pos:end="309:33"><expr pos:start="309:18" pos:end="309:33"><operator pos:start="309:18" pos:end="309:18">&amp;</operator><name pos:start="309:19" pos:end="309:33"><name pos:start="309:19" pos:end="309:19">s</name><operator pos:start="309:20" pos:end="309:21">-&gt;</operator><name pos:start="309:22" pos:end="309:30">pict_bufs</name><index pos:start="309:31" pos:end="309:33">[<expr pos:start="309:32" pos:end="309:32"><name pos:start="309:32" pos:end="309:32">x</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <return pos:start="311:5" pos:end="311:27">return <expr pos:start="311:12" pos:end="311:26"><call pos:start="311:12" pos:end="311:26"><name pos:start="311:12" pos:end="311:18">AVERROR</name><argument_list pos:start="311:19" pos:end="311:26">(<argument pos:start="311:20" pos:end="311:25"><expr pos:start="311:20" pos:end="311:25"><name pos:start="311:20" pos:end="311:25">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function pos:start="314:1" pos:end="473:1"><type pos:start="314:1" pos:end="314:14"><specifier pos:start="314:1" pos:end="314:6">static</specifier> <name pos:start="314:8" pos:end="314:14">int64_t</name></type> <name pos:start="314:16" pos:end="314:35">calculate_mode_score</name><parameter_list pos:start="314:36" pos:end="318:1">(<parameter pos:start="314:37" pos:end="314:56"><decl pos:start="314:37" pos:end="314:56"><type pos:start="314:37" pos:end="314:56"><name pos:start="314:37" pos:end="314:53">CinepakEncContext</name> <modifier pos:start="314:55" pos:end="314:55">*</modifier></type><name pos:start="314:56" pos:end="314:56">s</name></decl></parameter>, <parameter pos:start="314:59" pos:end="314:63"><decl pos:start="314:59" pos:end="314:63"><type pos:start="314:59" pos:end="314:63"><name pos:start="314:59" pos:end="314:61">int</name></type> <name pos:start="314:63" pos:end="314:63">h</name></decl></parameter>, <parameter pos:start="314:66" pos:end="314:81"><decl pos:start="314:66" pos:end="314:81"><type pos:start="314:66" pos:end="314:81"><name pos:start="314:66" pos:end="314:75">strip_info</name> <modifier pos:start="314:77" pos:end="314:77">*</modifier></type><name pos:start="314:78" pos:end="314:81">info</name></decl></parameter>, <parameter pos:start="314:84" pos:end="314:93"><decl pos:start="314:84" pos:end="314:93"><type pos:start="314:84" pos:end="314:93"><name pos:start="314:84" pos:end="314:86">int</name></type> <name pos:start="314:88" pos:end="314:93">report</name></decl></parameter>, <parameter pos:start="314:96" pos:end="314:122"><decl pos:start="314:96" pos:end="314:122"><type pos:start="314:96" pos:end="314:122"><name pos:start="314:96" pos:end="314:98">int</name> <modifier pos:start="314:100" pos:end="314:100">*</modifier></type><name pos:start="314:101" pos:end="314:122">training_set_v1_shrunk</name></decl></parameter>, <parameter pos:start="314:125" pos:end="316:0"><decl pos:start="314:125" pos:end="316:0"><type pos:start="314:125" pos:end="316:0"><name pos:start="314:125" pos:end="314:127">int</name> <modifier pos:start="314:129" pos:end="314:129">*</modifier></type><name pos:start="314:130" pos:end="316:0">training_set_v4_shrunk</name></decl></parameter>
<cpp:ifdef pos:start="315:1" pos:end="315:26">#<cpp:directive pos:start="315:2" pos:end="315:6">ifdef</cpp:directive> <name pos:start="315:8" pos:end="315:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
, <parameter pos:start="316:3" pos:end="318:0"><decl pos:start="316:3" pos:end="318:0"><type pos:start="316:3" pos:end="318:0"><name pos:start="316:3" pos:end="316:9">int64_t</name> <modifier pos:start="316:11" pos:end="316:11">*</modifier></type><name pos:start="316:12" pos:end="318:0">serr</name></decl></parameter>
<cpp:endif pos:start="317:1" pos:end="317:6">#<cpp:directive pos:start="317:2" pos:end="317:6">endif</cpp:directive></cpp:endif>
)</parameter_list>
<block pos:start="319:1" pos:end="473:1">{<block_content pos:start="321:5" pos:end="472:15">
    <comment type="line" pos:start="320:5" pos:end="320:53">//score = FF_LAMBDA_SCALE * error + lambda * bits</comment>
    <decl_stmt pos:start="321:5" pos:end="321:10"><decl pos:start="321:5" pos:end="321:9"><type pos:start="321:5" pos:end="321:7"><name pos:start="321:5" pos:end="321:7">int</name></type> <name pos:start="321:9" pos:end="321:9">x</name></decl>;</decl_stmt>
    <decl_stmt pos:start="322:5" pos:end="322:60"><decl pos:start="322:5" pos:end="322:59"><type pos:start="322:5" pos:end="322:7"><name pos:start="322:5" pos:end="322:7">int</name></type> <name pos:start="322:9" pos:end="322:18">entry_size</name> <init pos:start="322:20" pos:end="322:59">= <expr pos:start="322:22" pos:end="322:59"><ternary pos:start="322:22" pos:end="322:59"><condition pos:start="322:22" pos:end="322:53"><expr pos:start="322:22" pos:end="322:51"><name pos:start="322:22" pos:end="322:31"><name pos:start="322:22" pos:end="322:22">s</name><operator pos:start="322:23" pos:end="322:24">-&gt;</operator><name pos:start="322:25" pos:end="322:31">pix_fmt</name></name> <operator pos:start="322:33" pos:end="322:34">==</operator> <name pos:start="322:36" pos:end="322:51">AV_PIX_FMT_RGB24</name></expr> ?</condition><then pos:start="322:55" pos:end="322:55"> <expr pos:start="322:55" pos:end="322:55"><literal type="number" pos:start="322:55" pos:end="322:55">6</literal></expr> </then><else pos:start="322:57" pos:end="322:59">: <expr pos:start="322:59" pos:end="322:59"><literal type="number" pos:start="322:59" pos:end="322:59">4</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="323:5" pos:end="323:38"><decl pos:start="323:5" pos:end="323:37"><type pos:start="323:5" pos:end="323:7"><name pos:start="323:5" pos:end="323:7">int</name></type> <name pos:start="323:9" pos:end="323:16">mb_count</name> <init pos:start="323:18" pos:end="323:37">= <expr pos:start="323:20" pos:end="323:37"><name pos:start="323:20" pos:end="323:23"><name pos:start="323:20" pos:end="323:20">s</name><operator pos:start="323:21" pos:end="323:22">-&gt;</operator><name pos:start="323:23" pos:end="323:23">w</name></name> <operator pos:start="323:25" pos:end="323:25">*</operator> <name pos:start="323:27" pos:end="323:27">h</name> <operator pos:start="323:29" pos:end="323:29">/</operator> <name pos:start="323:31" pos:end="323:37">MB_AREA</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="324:5" pos:end="324:16"><decl pos:start="324:5" pos:end="324:15"><type pos:start="324:5" pos:end="324:13"><name pos:start="324:5" pos:end="324:11">mb_info</name> <modifier pos:start="324:13" pos:end="324:13">*</modifier></type><name pos:start="324:14" pos:end="324:15">mb</name></decl>;</decl_stmt>
    <decl_stmt pos:start="325:5" pos:end="325:35"><decl pos:start="325:5" pos:end="325:18"><type pos:start="325:5" pos:end="325:11"><name pos:start="325:5" pos:end="325:11">int64_t</name></type> <name pos:start="325:13" pos:end="325:18">score1</name></decl>, <decl pos:start="325:21" pos:end="325:26"><type ref="prev" pos:start="325:5" pos:end="325:11"/><name pos:start="325:21" pos:end="325:26">score2</name></decl>, <decl pos:start="325:29" pos:end="325:34"><type ref="prev" pos:start="325:5" pos:end="325:11"/><name pos:start="325:29" pos:end="325:34">score3</name></decl>;</decl_stmt>
    <decl_stmt pos:start="326:5" pos:end="333:0"><decl pos:start="326:5" pos:end="328:42"><type pos:start="326:5" pos:end="326:11"><name pos:start="326:5" pos:end="326:11">int64_t</name></type> <name pos:start="326:13" pos:end="326:15">ret</name> <init pos:start="326:17" pos:end="328:42">= <expr pos:start="326:19" pos:end="328:42"><name pos:start="326:19" pos:end="326:27"><name pos:start="326:19" pos:end="326:19">s</name><operator pos:start="326:20" pos:end="326:21">-&gt;</operator><name pos:start="326:22" pos:end="326:27">lambda</name></name> <operator pos:start="326:29" pos:end="326:29">*</operator> <operator pos:start="326:31" pos:end="326:31">(</operator><operator pos:start="326:32" pos:end="326:32">(</operator><ternary pos:start="326:33" pos:end="326:98"><condition pos:start="326:33" pos:end="326:47"><expr pos:start="326:33" pos:end="326:45"><name pos:start="326:33" pos:end="326:45"><name pos:start="326:33" pos:end="326:36">info</name><operator pos:start="326:37" pos:end="326:38">-&gt;</operator><name pos:start="326:39" pos:end="326:45">v1_size</name></name></expr> ?</condition><then pos:start="326:49" pos:end="326:94"> <expr pos:start="326:49" pos:end="326:94"><name pos:start="326:49" pos:end="326:65">CHUNK_HEADER_SIZE</name> <operator pos:start="326:67" pos:end="326:67">+</operator> <name pos:start="326:69" pos:end="326:81"><name pos:start="326:69" pos:end="326:72">info</name><operator pos:start="326:73" pos:end="326:74">-&gt;</operator><name pos:start="326:75" pos:end="326:81">v1_size</name></name> <operator pos:start="326:83" pos:end="326:83">*</operator> <name pos:start="326:85" pos:end="326:94">entry_size</name></expr> </then><else pos:start="326:96" pos:end="326:98">: <expr pos:start="326:98" pos:end="326:98"><literal type="number" pos:start="326:98" pos:end="326:98">0</literal></expr></else></ternary><operator pos:start="326:99" pos:end="326:99">)</operator> <operator pos:start="326:101" pos:end="326:101">+</operator>
                   <operator pos:start="327:20" pos:end="327:20">(</operator><ternary pos:start="327:21" pos:end="327:86"><condition pos:start="327:21" pos:end="327:35"><expr pos:start="327:21" pos:end="327:33"><name pos:start="327:21" pos:end="327:33"><name pos:start="327:21" pos:end="327:24">info</name><operator pos:start="327:25" pos:end="327:26">-&gt;</operator><name pos:start="327:27" pos:end="327:33">v4_size</name></name></expr> ?</condition><then pos:start="327:37" pos:end="327:82"> <expr pos:start="327:37" pos:end="327:82"><name pos:start="327:37" pos:end="327:53">CHUNK_HEADER_SIZE</name> <operator pos:start="327:55" pos:end="327:55">+</operator> <name pos:start="327:57" pos:end="327:69"><name pos:start="327:57" pos:end="327:60">info</name><operator pos:start="327:61" pos:end="327:62">-&gt;</operator><name pos:start="327:63" pos:end="327:69">v4_size</name></name> <operator pos:start="327:71" pos:end="327:71">*</operator> <name pos:start="327:73" pos:end="327:82">entry_size</name></expr> </then><else pos:start="327:84" pos:end="327:86">: <expr pos:start="327:86" pos:end="327:86"><literal type="number" pos:start="327:86" pos:end="327:86">0</literal></expr></else></ternary><operator pos:start="327:87" pos:end="327:87">)</operator> <operator pos:start="327:89" pos:end="327:89">+</operator>
                   <name pos:start="328:20" pos:end="328:36">CHUNK_HEADER_SIZE</name><operator pos:start="328:37" pos:end="328:37">)</operator> <operator pos:start="328:39" pos:end="328:40">&lt;&lt;</operator> <literal type="number" pos:start="328:42" pos:end="328:42">3</literal></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:start="330:5" pos:end="330:130">//av_log(s-&gt;avctx, AV_LOG_INFO, "sizes %3i %3i -&gt; %9"PRId64" score mb_count %i", info-&gt;v1_size, info-&gt;v4_size, ret, mb_count);</comment>

<cpp:ifdef pos:start="332:1" pos:end="332:26">#<cpp:directive pos:start="332:2" pos:end="332:6">ifdef</cpp:directive> <name pos:start="332:8" pos:end="332:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
    <expr_stmt pos:start="333:5" pos:end="335:0"><expr pos:start="333:5" pos:end="333:13"><operator pos:start="333:5" pos:end="333:5">*</operator><name pos:start="333:6" pos:end="333:9">serr</name> <operator pos:start="333:11" pos:end="333:11">=</operator> <literal type="number" pos:start="333:13" pos:end="333:13">0</literal></expr>;</expr_stmt>
<cpp:endif pos:start="334:1" pos:end="334:6">#<cpp:directive pos:start="334:2" pos:end="334:6">endif</cpp:directive></cpp:endif>

    <switch pos:start="336:5" pos:end="470:5">switch<condition pos:start="336:11" pos:end="336:22">(<expr pos:start="336:12" pos:end="336:21"><name pos:start="336:12" pos:end="336:21"><name pos:start="336:12" pos:end="336:15">info</name><operator pos:start="336:16" pos:end="336:17">-&gt;</operator><name pos:start="336:18" pos:end="336:21">mode</name></name></expr>)</condition> <block pos:start="336:24" pos:end="470:5">{<block_content pos:start="337:5" pos:end="469:14">
    <case pos:start="337:5" pos:end="337:22">case <expr pos:start="337:10" pos:end="337:21"><name pos:start="337:10" pos:end="337:21">MODE_V1_ONLY</name></expr>:</case>
        <comment type="line" pos:start="338:9" pos:end="338:25">//one byte per MB</comment>
        <expr_stmt pos:start="339:9" pos:end="339:40"><expr pos:start="339:9" pos:end="339:39"><name pos:start="339:9" pos:end="339:11">ret</name> <operator pos:start="339:13" pos:end="339:14">+=</operator> <name pos:start="339:16" pos:end="339:24"><name pos:start="339:16" pos:end="339:16">s</name><operator pos:start="339:17" pos:end="339:18">-&gt;</operator><name pos:start="339:19" pos:end="339:24">lambda</name></name> <operator pos:start="339:26" pos:end="339:26">*</operator> <literal type="number" pos:start="339:28" pos:end="339:28">8</literal> <operator pos:start="339:30" pos:end="339:30">*</operator> <name pos:start="339:32" pos:end="339:39">mb_count</name></expr>;</expr_stmt>

<comment type="line" pos:start="341:1" pos:end="341:52">// while calculating we assume all blocks are ENC_V1</comment>
        <for pos:start="342:9" pos:end="351:9">for<control pos:start="342:12" pos:end="342:37">(<init pos:start="342:13" pos:end="342:18"><expr pos:start="342:13" pos:end="342:17"><name pos:start="342:13" pos:end="342:13">x</name> <operator pos:start="342:15" pos:end="342:15">=</operator> <literal type="number" pos:start="342:17" pos:end="342:17">0</literal></expr>;</init> <condition pos:start="342:20" pos:end="342:32"><expr pos:start="342:20" pos:end="342:31"><name pos:start="342:20" pos:end="342:20">x</name> <operator pos:start="342:22" pos:end="342:22">&lt;</operator> <name pos:start="342:24" pos:end="342:31">mb_count</name></expr>;</condition> <incr pos:start="342:34" pos:end="342:36"><expr pos:start="342:34" pos:end="342:36"><name pos:start="342:34" pos:end="342:34">x</name><operator pos:start="342:35" pos:end="342:36">++</operator></expr></incr>)</control> <block pos:start="342:39" pos:end="351:9">{<block_content pos:start="343:13" pos:end="350:39">
            <expr_stmt pos:start="343:13" pos:end="343:27"><expr pos:start="343:13" pos:end="343:26"><name pos:start="343:13" pos:end="343:14">mb</name> <operator pos:start="343:16" pos:end="343:16">=</operator> <operator pos:start="343:18" pos:end="343:18">&amp;</operator><name pos:start="343:19" pos:end="343:26"><name pos:start="343:19" pos:end="343:19">s</name><operator pos:start="343:20" pos:end="343:21">-&gt;</operator><name pos:start="343:22" pos:end="343:23">mb</name><index pos:start="343:24" pos:end="343:26">[<expr pos:start="343:25" pos:end="343:25"><name pos:start="343:25" pos:end="343:25">x</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="344:13" pos:end="346:0"><expr pos:start="344:13" pos:end="344:49"><name pos:start="344:13" pos:end="344:15">ret</name> <operator pos:start="344:17" pos:end="344:18">+=</operator> <name pos:start="344:20" pos:end="344:34">FF_LAMBDA_SCALE</name> <operator pos:start="344:36" pos:end="344:36">*</operator> <name pos:start="344:38" pos:end="344:49"><name pos:start="344:38" pos:end="344:39">mb</name><operator pos:start="344:40" pos:end="344:41">-&gt;</operator><name pos:start="344:42" pos:end="344:49">v1_error</name></name></expr>;</expr_stmt>
<cpp:ifdef pos:start="345:1" pos:end="345:26">#<cpp:directive pos:start="345:2" pos:end="345:6">ifdef</cpp:directive> <name pos:start="345:8" pos:end="345:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
            <expr_stmt pos:start="346:13" pos:end="348:0"><expr pos:start="346:13" pos:end="346:33"><operator pos:start="346:13" pos:end="346:13">*</operator><name pos:start="346:14" pos:end="346:17">serr</name> <operator pos:start="346:19" pos:end="346:20">+=</operator> <name pos:start="346:22" pos:end="346:33"><name pos:start="346:22" pos:end="346:23">mb</name><operator pos:start="346:24" pos:end="346:25">-&gt;</operator><name pos:start="346:26" pos:end="346:33">v1_error</name></name></expr>;</expr_stmt>
<cpp:endif pos:start="347:1" pos:end="347:6">#<cpp:directive pos:start="347:2" pos:end="347:6">endif</cpp:directive></cpp:endif>
<comment type="line" pos:start="348:1" pos:end="348:59">// this function is never called for report in MODE_V1_ONLY</comment>
<comment type="line" pos:start="349:1" pos:end="349:25">//            if(!report)</comment>
            <expr_stmt pos:start="350:13" pos:end="350:39"><expr pos:start="350:13" pos:end="350:38"><name pos:start="350:13" pos:end="350:29"><name pos:start="350:13" pos:end="350:14">mb</name><operator pos:start="350:15" pos:end="350:16">-&gt;</operator><name pos:start="350:17" pos:end="350:29">best_encoding</name></name> <operator pos:start="350:31" pos:end="350:31">=</operator> <name pos:start="350:33" pos:end="350:38">ENC_V1</name></expr>;</expr_stmt>
        </block_content>}</block></for>

        <break pos:start="353:9" pos:end="353:14">break;</break>
    <case pos:start="354:5" pos:end="354:20">case <expr pos:start="354:10" pos:end="354:19"><name pos:start="354:10" pos:end="354:19">MODE_V1_V4</name></expr>:</case>
        <comment type="line" pos:start="355:9" pos:end="355:29">//9 or 33 bits per MB</comment>
        <if_stmt pos:start="356:9" pos:end="391:9"><if pos:start="356:9" pos:end="371:9">if<condition pos:start="356:11" pos:end="356:18">(<expr pos:start="356:12" pos:end="356:17"><name pos:start="356:12" pos:end="356:17">report</name></expr>)</condition> <block pos:start="356:20" pos:end="371:9">{<block_content pos:start="358:13" pos:end="370:13">
<comment type="line" pos:start="357:1" pos:end="357:63">// no moves between the corresponding training sets are allowed</comment>
            <expr_stmt pos:start="358:13" pos:end="358:66"><expr pos:start="358:13" pos:end="358:65"><operator pos:start="358:13" pos:end="358:13">*</operator><name pos:start="358:14" pos:end="358:35">training_set_v1_shrunk</name> <operator pos:start="358:37" pos:end="358:37">=</operator> <operator pos:start="358:39" pos:end="358:39">*</operator><name pos:start="358:40" pos:end="358:61">training_set_v4_shrunk</name> <operator pos:start="358:63" pos:end="358:63">=</operator> <literal type="number" pos:start="358:65" pos:end="358:65">0</literal></expr>;</expr_stmt>
            <for pos:start="359:13" pos:end="370:13">for<control pos:start="359:16" pos:end="359:41">(<init pos:start="359:17" pos:end="359:22"><expr pos:start="359:17" pos:end="359:21"><name pos:start="359:17" pos:end="359:17">x</name> <operator pos:start="359:19" pos:end="359:19">=</operator> <literal type="number" pos:start="359:21" pos:end="359:21">0</literal></expr>;</init> <condition pos:start="359:24" pos:end="359:36"><expr pos:start="359:24" pos:end="359:35"><name pos:start="359:24" pos:end="359:24">x</name> <operator pos:start="359:26" pos:end="359:26">&lt;</operator> <name pos:start="359:28" pos:end="359:35">mb_count</name></expr>;</condition> <incr pos:start="359:38" pos:end="359:40"><expr pos:start="359:38" pos:end="359:40"><name pos:start="359:38" pos:end="359:38">x</name><operator pos:start="359:39" pos:end="359:40">++</operator></expr></incr>)</control> <block pos:start="359:43" pos:end="370:13">{<block_content pos:start="360:17" pos:end="370:0">
                <decl_stmt pos:start="360:17" pos:end="360:26"><decl pos:start="360:17" pos:end="360:25"><type pos:start="360:17" pos:end="360:19"><name pos:start="360:17" pos:end="360:19">int</name></type> <name pos:start="360:21" pos:end="360:25">mberr</name></decl>;</decl_stmt>
                <expr_stmt pos:start="361:17" pos:end="361:31"><expr pos:start="361:17" pos:end="361:30"><name pos:start="361:17" pos:end="361:18">mb</name> <operator pos:start="361:20" pos:end="361:20">=</operator> <operator pos:start="361:22" pos:end="361:22">&amp;</operator><name pos:start="361:23" pos:end="361:30"><name pos:start="361:23" pos:end="361:23">s</name><operator pos:start="361:24" pos:end="361:25">-&gt;</operator><name pos:start="361:26" pos:end="361:27">mb</name><index pos:start="361:28" pos:end="361:30">[<expr pos:start="361:29" pos:end="361:29"><name pos:start="361:29" pos:end="361:29">x</name></expr>]</index></name></expr>;</expr_stmt>
                <if_stmt pos:start="362:17" pos:end="365:85"><if pos:start="362:17" pos:end="363:85">if<condition pos:start="362:19" pos:end="362:47">(<expr pos:start="362:20" pos:end="362:46"><name pos:start="362:20" pos:end="362:36"><name pos:start="362:20" pos:end="362:21">mb</name><operator pos:start="362:22" pos:end="362:23">-&gt;</operator><name pos:start="362:24" pos:end="362:36">best_encoding</name></name> <operator pos:start="362:38" pos:end="362:39">==</operator> <name pos:start="362:41" pos:end="362:46">ENC_V1</name></expr>)</condition><block type="pseudo" pos:start="363:21" pos:end="363:85"><block_content pos:start="363:21" pos:end="363:85">
                    <expr_stmt pos:start="363:21" pos:end="363:85"><expr pos:start="363:21" pos:end="363:84"><name pos:start="363:21" pos:end="363:26">score1</name> <operator pos:start="363:28" pos:end="363:28">=</operator> <name pos:start="363:30" pos:end="363:38"><name pos:start="363:30" pos:end="363:30">s</name><operator pos:start="363:31" pos:end="363:32">-&gt;</operator><name pos:start="363:33" pos:end="363:38">lambda</name></name> <operator pos:start="363:40" pos:end="363:40">*</operator> <literal type="number" pos:start="363:42" pos:end="363:45">9</literal>  <operator pos:start="363:45" pos:end="363:45">+</operator> <name pos:start="363:47" pos:end="363:61">FF_LAMBDA_SCALE</name> <operator pos:start="363:63" pos:end="363:63">*</operator> <operator pos:start="363:65" pos:end="363:65">(</operator><name pos:start="363:66" pos:end="363:70">mberr</name><operator pos:start="363:71" pos:end="363:71">=</operator><name pos:start="363:72" pos:end="363:83"><name pos:start="363:72" pos:end="363:73">mb</name><operator pos:start="363:74" pos:end="363:75">-&gt;</operator><name pos:start="363:76" pos:end="363:83">v1_error</name></name><operator pos:start="363:84" pos:end="363:84">)</operator></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="364:17" pos:end="365:85">else<block type="pseudo" pos:start="365:21" pos:end="365:85"><block_content pos:start="365:21" pos:end="365:85">
                    <expr_stmt pos:start="365:21" pos:end="365:85"><expr pos:start="365:21" pos:end="365:84"><name pos:start="365:21" pos:end="365:26">score1</name> <operator pos:start="365:28" pos:end="365:28">=</operator> <name pos:start="365:30" pos:end="365:38"><name pos:start="365:30" pos:end="365:30">s</name><operator pos:start="365:31" pos:end="365:32">-&gt;</operator><name pos:start="365:33" pos:end="365:38">lambda</name></name> <operator pos:start="365:40" pos:end="365:40">*</operator> <literal type="number" pos:start="365:42" pos:end="365:45">33</literal> <operator pos:start="365:45" pos:end="365:45">+</operator> <name pos:start="365:47" pos:end="365:61">FF_LAMBDA_SCALE</name> <operator pos:start="365:63" pos:end="365:63">*</operator> <operator pos:start="365:65" pos:end="365:65">(</operator><name pos:start="365:66" pos:end="365:70">mberr</name><operator pos:start="365:71" pos:end="365:71">=</operator><name pos:start="365:72" pos:end="365:83"><name pos:start="365:72" pos:end="365:73">mb</name><operator pos:start="365:74" pos:end="365:75">-&gt;</operator><name pos:start="365:76" pos:end="365:83">v4_error</name></name><operator pos:start="365:84" pos:end="365:84">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
                <expr_stmt pos:start="366:17" pos:end="368:0"><expr pos:start="366:17" pos:end="366:29"><name pos:start="366:17" pos:end="366:19">ret</name> <operator pos:start="366:21" pos:end="366:22">+=</operator> <name pos:start="366:24" pos:end="366:29">score1</name></expr>;</expr_stmt>
<cpp:ifdef pos:start="367:1" pos:end="367:26">#<cpp:directive pos:start="367:2" pos:end="367:6">ifdef</cpp:directive> <name pos:start="367:8" pos:end="367:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
                <expr_stmt pos:start="368:17" pos:end="370:0"><expr pos:start="368:17" pos:end="368:30"><operator pos:start="368:17" pos:end="368:17">*</operator><name pos:start="368:18" pos:end="368:21">serr</name> <operator pos:start="368:23" pos:end="368:24">+=</operator> <name pos:start="368:26" pos:end="368:30">mberr</name></expr>;</expr_stmt>
<cpp:endif pos:start="369:1" pos:end="369:6">#<cpp:directive pos:start="369:2" pos:end="369:6">endif</cpp:directive></cpp:endif>
            </block_content>}</block></for>
        </block_content>}</block></if> <else pos:start="371:11" pos:end="391:9">else <block pos:start="371:16" pos:end="391:9">{<block_content pos:start="372:13" pos:end="390:13"> <comment type="line" pos:start="371:18" pos:end="371:44">// find best mode per block</comment>
            <for pos:start="372:13" pos:end="390:13">for<control pos:start="372:16" pos:end="372:41">(<init pos:start="372:17" pos:end="372:22"><expr pos:start="372:17" pos:end="372:21"><name pos:start="372:17" pos:end="372:17">x</name> <operator pos:start="372:19" pos:end="372:19">=</operator> <literal type="number" pos:start="372:21" pos:end="372:21">0</literal></expr>;</init> <condition pos:start="372:24" pos:end="372:36"><expr pos:start="372:24" pos:end="372:35"><name pos:start="372:24" pos:end="372:24">x</name> <operator pos:start="372:26" pos:end="372:26">&lt;</operator> <name pos:start="372:28" pos:end="372:35">mb_count</name></expr>;</condition> <incr pos:start="372:38" pos:end="372:40"><expr pos:start="372:38" pos:end="372:40"><name pos:start="372:38" pos:end="372:38">x</name><operator pos:start="372:39" pos:end="372:40">++</operator></expr></incr>)</control> <block pos:start="372:43" pos:end="390:13">{<block_content pos:start="373:17" pos:end="389:17">
                <expr_stmt pos:start="373:17" pos:end="373:31"><expr pos:start="373:17" pos:end="373:30"><name pos:start="373:17" pos:end="373:18">mb</name> <operator pos:start="373:20" pos:end="373:20">=</operator> <operator pos:start="373:22" pos:end="373:22">&amp;</operator><name pos:start="373:23" pos:end="373:30"><name pos:start="373:23" pos:end="373:23">s</name><operator pos:start="373:24" pos:end="373:25">-&gt;</operator><name pos:start="373:26" pos:end="373:27">mb</name><index pos:start="373:28" pos:end="373:30">[<expr pos:start="373:29" pos:end="373:29"><name pos:start="373:29" pos:end="373:29">x</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="374:17" pos:end="374:73"><expr pos:start="374:17" pos:end="374:72"><name pos:start="374:17" pos:end="374:22">score1</name> <operator pos:start="374:24" pos:end="374:24">=</operator> <name pos:start="374:26" pos:end="374:34"><name pos:start="374:26" pos:end="374:26">s</name><operator pos:start="374:27" pos:end="374:28">-&gt;</operator><name pos:start="374:29" pos:end="374:34">lambda</name></name> <operator pos:start="374:36" pos:end="374:36">*</operator> <literal type="number" pos:start="374:38" pos:end="374:41">9</literal>  <operator pos:start="374:41" pos:end="374:41">+</operator> <name pos:start="374:43" pos:end="374:57">FF_LAMBDA_SCALE</name> <operator pos:start="374:59" pos:end="374:59">*</operator> <name pos:start="374:61" pos:end="374:72"><name pos:start="374:61" pos:end="374:62">mb</name><operator pos:start="374:63" pos:end="374:64">-&gt;</operator><name pos:start="374:65" pos:end="374:72">v1_error</name></name></expr>;</expr_stmt>
                <expr_stmt pos:start="375:17" pos:end="375:73"><expr pos:start="375:17" pos:end="375:72"><name pos:start="375:17" pos:end="375:22">score2</name> <operator pos:start="375:24" pos:end="375:24">=</operator> <name pos:start="375:26" pos:end="375:34"><name pos:start="375:26" pos:end="375:26">s</name><operator pos:start="375:27" pos:end="375:28">-&gt;</operator><name pos:start="375:29" pos:end="375:34">lambda</name></name> <operator pos:start="375:36" pos:end="375:36">*</operator> <literal type="number" pos:start="375:38" pos:end="375:41">33</literal> <operator pos:start="375:41" pos:end="375:41">+</operator> <name pos:start="375:43" pos:end="375:57">FF_LAMBDA_SCALE</name> <operator pos:start="375:59" pos:end="375:59">*</operator> <name pos:start="375:61" pos:end="375:72"><name pos:start="375:61" pos:end="375:62">mb</name><operator pos:start="375:63" pos:end="375:64">-&gt;</operator><name pos:start="375:65" pos:end="375:72">v4_error</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="377:17" pos:end="389:17"><if pos:start="377:17" pos:end="383:17">if<condition pos:start="377:19" pos:end="377:36">(<expr pos:start="377:20" pos:end="377:35"><name pos:start="377:20" pos:end="377:25">score1</name> <operator pos:start="377:27" pos:end="377:28">&lt;=</operator> <name pos:start="377:30" pos:end="377:35">score2</name></expr>)</condition> <block pos:start="377:38" pos:end="383:17">{<block_content pos:start="378:21" pos:end="382:47">
                    <expr_stmt pos:start="378:21" pos:end="380:0"><expr pos:start="378:21" pos:end="378:33"><name pos:start="378:21" pos:end="378:23">ret</name> <operator pos:start="378:25" pos:end="378:26">+=</operator> <name pos:start="378:28" pos:end="378:33">score1</name></expr>;</expr_stmt>
<cpp:ifdef pos:start="379:1" pos:end="379:26">#<cpp:directive pos:start="379:2" pos:end="379:6">ifdef</cpp:directive> <name pos:start="379:8" pos:end="379:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
                    <expr_stmt pos:start="380:21" pos:end="382:0"><expr pos:start="380:21" pos:end="380:41"><operator pos:start="380:21" pos:end="380:21">*</operator><name pos:start="380:22" pos:end="380:25">serr</name> <operator pos:start="380:27" pos:end="380:28">+=</operator> <name pos:start="380:30" pos:end="380:41"><name pos:start="380:30" pos:end="380:31">mb</name><operator pos:start="380:32" pos:end="380:33">-&gt;</operator><name pos:start="380:34" pos:end="380:41">v1_error</name></name></expr>;</expr_stmt>
<cpp:endif pos:start="381:1" pos:end="381:6">#<cpp:directive pos:start="381:2" pos:end="381:6">endif</cpp:directive></cpp:endif>
                    <expr_stmt pos:start="382:21" pos:end="382:47"><expr pos:start="382:21" pos:end="382:46"><name pos:start="382:21" pos:end="382:37"><name pos:start="382:21" pos:end="382:22">mb</name><operator pos:start="382:23" pos:end="382:24">-&gt;</operator><name pos:start="382:25" pos:end="382:37">best_encoding</name></name> <operator pos:start="382:39" pos:end="382:39">=</operator> <name pos:start="382:41" pos:end="382:46">ENC_V1</name></expr>;</expr_stmt>
                </block_content>}</block></if> <else pos:start="383:19" pos:end="389:17">else <block pos:start="383:24" pos:end="389:17">{<block_content pos:start="384:21" pos:end="388:47">
                    <expr_stmt pos:start="384:21" pos:end="386:0"><expr pos:start="384:21" pos:end="384:33"><name pos:start="384:21" pos:end="384:23">ret</name> <operator pos:start="384:25" pos:end="384:26">+=</operator> <name pos:start="384:28" pos:end="384:33">score2</name></expr>;</expr_stmt>
<cpp:ifdef pos:start="385:1" pos:end="385:26">#<cpp:directive pos:start="385:2" pos:end="385:6">ifdef</cpp:directive> <name pos:start="385:8" pos:end="385:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
                    <expr_stmt pos:start="386:21" pos:end="388:0"><expr pos:start="386:21" pos:end="386:41"><operator pos:start="386:21" pos:end="386:21">*</operator><name pos:start="386:22" pos:end="386:25">serr</name> <operator pos:start="386:27" pos:end="386:28">+=</operator> <name pos:start="386:30" pos:end="386:41"><name pos:start="386:30" pos:end="386:31">mb</name><operator pos:start="386:32" pos:end="386:33">-&gt;</operator><name pos:start="386:34" pos:end="386:41">v4_error</name></name></expr>;</expr_stmt>
<cpp:endif pos:start="387:1" pos:end="387:6">#<cpp:directive pos:start="387:2" pos:end="387:6">endif</cpp:directive></cpp:endif>
                    <expr_stmt pos:start="388:21" pos:end="388:47"><expr pos:start="388:21" pos:end="388:46"><name pos:start="388:21" pos:end="388:37"><name pos:start="388:21" pos:end="388:22">mb</name><operator pos:start="388:23" pos:end="388:24">-&gt;</operator><name pos:start="388:25" pos:end="388:37">best_encoding</name></name> <operator pos:start="388:39" pos:end="388:39">=</operator> <name pos:start="388:41" pos:end="388:46">ENC_V4</name></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></else></if_stmt>

        <break pos:start="393:9" pos:end="393:14">break;</break>
    <case pos:start="394:5" pos:end="394:17">case <expr pos:start="394:10" pos:end="394:16"><name pos:start="394:10" pos:end="394:16">MODE_MC</name></expr>:</case>
        <comment type="line" pos:start="395:9" pos:end="395:33">//1, 10 or 34 bits per MB</comment>
        <if_stmt pos:start="396:9" pos:end="467:9"><if pos:start="396:9" pos:end="440:9">if<condition pos:start="396:11" pos:end="396:18">(<expr pos:start="396:12" pos:end="396:17"><name pos:start="396:12" pos:end="396:17">report</name></expr>)</condition> <block pos:start="396:20" pos:end="440:9">{<block_content pos:start="397:13" pos:end="439:48">
            <decl_stmt pos:start="397:13" pos:end="397:45"><decl pos:start="397:13" pos:end="397:29"><type pos:start="397:13" pos:end="397:15"><name pos:start="397:13" pos:end="397:15">int</name></type> <name pos:start="397:17" pos:end="397:25">v1_shrunk</name> <init pos:start="397:27" pos:end="397:29">= <expr pos:start="397:29" pos:end="397:29"><literal type="number" pos:start="397:29" pos:end="397:29">0</literal></expr></init></decl>, <decl pos:start="397:32" pos:end="397:44"><type ref="prev" pos:start="397:13" pos:end="397:15"/><name pos:start="397:32" pos:end="397:40">v4_shrunk</name> <init pos:start="397:42" pos:end="397:44">= <expr pos:start="397:44" pos:end="397:44"><literal type="number" pos:start="397:44" pos:end="397:44">0</literal></expr></init></decl>;</decl_stmt>
            <for pos:start="398:13" pos:end="437:13">for<control pos:start="398:16" pos:end="398:41">(<init pos:start="398:17" pos:end="398:22"><expr pos:start="398:17" pos:end="398:21"><name pos:start="398:17" pos:end="398:17">x</name> <operator pos:start="398:19" pos:end="398:19">=</operator> <literal type="number" pos:start="398:21" pos:end="398:21">0</literal></expr>;</init> <condition pos:start="398:24" pos:end="398:36"><expr pos:start="398:24" pos:end="398:35"><name pos:start="398:24" pos:end="398:24">x</name> <operator pos:start="398:26" pos:end="398:26">&lt;</operator> <name pos:start="398:28" pos:end="398:35">mb_count</name></expr>;</condition> <incr pos:start="398:38" pos:end="398:40"><expr pos:start="398:38" pos:end="398:40"><name pos:start="398:38" pos:end="398:38">x</name><operator pos:start="398:39" pos:end="398:40">++</operator></expr></incr>)</control> <block pos:start="398:43" pos:end="437:13">{<block_content pos:start="399:17" pos:end="436:17">
                <expr_stmt pos:start="399:17" pos:end="399:31"><expr pos:start="399:17" pos:end="399:30"><name pos:start="399:17" pos:end="399:18">mb</name> <operator pos:start="399:20" pos:end="399:20">=</operator> <operator pos:start="399:22" pos:end="399:22">&amp;</operator><name pos:start="399:23" pos:end="399:30"><name pos:start="399:23" pos:end="399:23">s</name><operator pos:start="399:24" pos:end="399:25">-&gt;</operator><name pos:start="399:26" pos:end="399:27">mb</name><index pos:start="399:28" pos:end="399:30">[<expr pos:start="399:29" pos:end="399:29"><name pos:start="399:29" pos:end="399:29">x</name></expr>]</index></name></expr>;</expr_stmt>
<comment type="line" pos:start="400:1" pos:end="400:43">// it is OK to move blocks to ENC_SKIP here</comment>
<comment type="line" pos:start="401:1" pos:end="401:36">// but not to any codebook encoding!</comment>
                <expr_stmt pos:start="402:17" pos:end="402:75"><expr pos:start="402:17" pos:end="402:74"><name pos:start="402:17" pos:end="402:22">score1</name> <operator pos:start="402:24" pos:end="402:24">=</operator> <name pos:start="402:26" pos:end="402:34"><name pos:start="402:26" pos:end="402:26">s</name><operator pos:start="402:27" pos:end="402:28">-&gt;</operator><name pos:start="402:29" pos:end="402:34">lambda</name></name> <operator pos:start="402:36" pos:end="402:36">*</operator> <literal type="number" pos:start="402:38" pos:end="402:41">1</literal>  <operator pos:start="402:41" pos:end="402:41">+</operator> <name pos:start="402:43" pos:end="402:57">FF_LAMBDA_SCALE</name> <operator pos:start="402:59" pos:end="402:59">*</operator> <name pos:start="402:61" pos:end="402:74"><name pos:start="402:61" pos:end="402:62">mb</name><operator pos:start="402:63" pos:end="402:64">-&gt;</operator><name pos:start="402:65" pos:end="402:74">skip_error</name></name></expr>;</expr_stmt>
                <if_stmt pos:start="403:17" pos:end="436:17"><if pos:start="403:17" pos:end="408:17">if<condition pos:start="403:19" pos:end="403:49">(<expr pos:start="403:20" pos:end="403:48"><name pos:start="403:20" pos:end="403:36"><name pos:start="403:20" pos:end="403:21">mb</name><operator pos:start="403:22" pos:end="403:23">-&gt;</operator><name pos:start="403:24" pos:end="403:36">best_encoding</name></name> <operator pos:start="403:38" pos:end="403:39">==</operator> <name pos:start="403:41" pos:end="403:48">ENC_SKIP</name></expr>)</condition> <block pos:start="403:51" pos:end="408:17">{<block_content pos:start="404:21" pos:end="408:0">
                    <expr_stmt pos:start="404:21" pos:end="406:0"><expr pos:start="404:21" pos:end="404:33"><name pos:start="404:21" pos:end="404:23">ret</name> <operator pos:start="404:25" pos:end="404:26">+=</operator> <name pos:start="404:28" pos:end="404:33">score1</name></expr>;</expr_stmt>
<cpp:ifdef pos:start="405:1" pos:end="405:26">#<cpp:directive pos:start="405:2" pos:end="405:6">ifdef</cpp:directive> <name pos:start="405:8" pos:end="405:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
                    <expr_stmt pos:start="406:21" pos:end="408:0"><expr pos:start="406:21" pos:end="406:43"><operator pos:start="406:21" pos:end="406:21">*</operator><name pos:start="406:22" pos:end="406:25">serr</name> <operator pos:start="406:27" pos:end="406:28">+=</operator> <name pos:start="406:30" pos:end="406:43"><name pos:start="406:30" pos:end="406:31">mb</name><operator pos:start="406:32" pos:end="406:33">-&gt;</operator><name pos:start="406:34" pos:end="406:43">skip_error</name></name></expr>;</expr_stmt>
<cpp:endif pos:start="407:1" pos:end="407:6">#<cpp:directive pos:start="407:2" pos:end="407:6">endif</cpp:directive></cpp:endif>
                </block_content>}</block></if> <if type="elseif" pos:start="408:19" pos:end="422:17">else if<condition pos:start="408:26" pos:end="408:54">(<expr pos:start="408:27" pos:end="408:53"><name pos:start="408:27" pos:end="408:43"><name pos:start="408:27" pos:end="408:28">mb</name><operator pos:start="408:29" pos:end="408:30">-&gt;</operator><name pos:start="408:31" pos:end="408:43">best_encoding</name></name> <operator pos:start="408:45" pos:end="408:46">==</operator> <name pos:start="408:48" pos:end="408:53">ENC_V1</name></expr>)</condition> <block pos:start="408:56" pos:end="422:17">{<block_content pos:start="409:21" pos:end="421:21">
                    <if_stmt pos:start="409:21" pos:end="421:21"><if pos:start="409:21" pos:end="416:21">if<condition pos:start="409:23" pos:end="409:90">(<expr pos:start="409:24" pos:end="409:89"><operator pos:start="409:24" pos:end="409:24">(</operator><name pos:start="409:25" pos:end="409:30">score2</name><operator pos:start="409:31" pos:end="409:31">=</operator><name pos:start="409:32" pos:end="409:40"><name pos:start="409:32" pos:end="409:32">s</name><operator pos:start="409:33" pos:end="409:34">-&gt;</operator><name pos:start="409:35" pos:end="409:40">lambda</name></name> <operator pos:start="409:42" pos:end="409:42">*</operator> <literal type="number" pos:start="409:44" pos:end="409:47">10</literal> <operator pos:start="409:47" pos:end="409:47">+</operator> <name pos:start="409:49" pos:end="409:63">FF_LAMBDA_SCALE</name> <operator pos:start="409:65" pos:end="409:65">*</operator> <name pos:start="409:67" pos:end="409:78"><name pos:start="409:67" pos:end="409:68">mb</name><operator pos:start="409:69" pos:end="409:70">-&gt;</operator><name pos:start="409:71" pos:end="409:78">v1_error</name></name><operator pos:start="409:79" pos:end="409:79">)</operator> <operator pos:start="409:81" pos:end="409:82">&gt;=</operator> <name pos:start="409:84" pos:end="409:89">score1</name></expr>)</condition> <block pos:start="409:92" pos:end="416:21">{<block_content pos:start="410:25" pos:end="416:0">
                        <expr_stmt pos:start="410:25" pos:end="410:53"><expr pos:start="410:25" pos:end="410:52"><name pos:start="410:25" pos:end="410:41"><name pos:start="410:25" pos:end="410:26">mb</name><operator pos:start="410:27" pos:end="410:28">-&gt;</operator><name pos:start="410:29" pos:end="410:41">best_encoding</name></name> <operator pos:start="410:43" pos:end="410:43">=</operator> <name pos:start="410:45" pos:end="410:52">ENC_SKIP</name></expr>;</expr_stmt>
                        <expr_stmt pos:start="411:25" pos:end="411:36"><expr pos:start="411:25" pos:end="411:35"><operator pos:start="411:25" pos:end="411:26">++</operator><name pos:start="411:27" pos:end="411:35">v1_shrunk</name></expr>;</expr_stmt>
                        <expr_stmt pos:start="412:25" pos:end="414:0"><expr pos:start="412:25" pos:end="412:37"><name pos:start="412:25" pos:end="412:27">ret</name> <operator pos:start="412:29" pos:end="412:30">+=</operator> <name pos:start="412:32" pos:end="412:37">score1</name></expr>;</expr_stmt>
<cpp:ifdef pos:start="413:1" pos:end="413:26">#<cpp:directive pos:start="413:2" pos:end="413:6">ifdef</cpp:directive> <name pos:start="413:8" pos:end="413:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
                        <expr_stmt pos:start="414:25" pos:end="416:0"><expr pos:start="414:25" pos:end="414:47"><operator pos:start="414:25" pos:end="414:25">*</operator><name pos:start="414:26" pos:end="414:29">serr</name> <operator pos:start="414:31" pos:end="414:32">+=</operator> <name pos:start="414:34" pos:end="414:47"><name pos:start="414:34" pos:end="414:35">mb</name><operator pos:start="414:36" pos:end="414:37">-&gt;</operator><name pos:start="414:38" pos:end="414:47">skip_error</name></name></expr>;</expr_stmt>
<cpp:endif pos:start="415:1" pos:end="415:6">#<cpp:directive pos:start="415:2" pos:end="415:6">endif</cpp:directive></cpp:endif>
                    </block_content>}</block></if> <else pos:start="416:23" pos:end="421:21">else <block pos:start="416:28" pos:end="421:21">{<block_content pos:start="417:25" pos:end="421:0">
                        <expr_stmt pos:start="417:25" pos:end="419:0"><expr pos:start="417:25" pos:end="417:37"><name pos:start="417:25" pos:end="417:27">ret</name> <operator pos:start="417:29" pos:end="417:30">+=</operator> <name pos:start="417:32" pos:end="417:37">score2</name></expr>;</expr_stmt>
<cpp:ifdef pos:start="418:1" pos:end="418:26">#<cpp:directive pos:start="418:2" pos:end="418:6">ifdef</cpp:directive> <name pos:start="418:8" pos:end="418:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
                        <expr_stmt pos:start="419:25" pos:end="421:0"><expr pos:start="419:25" pos:end="419:45"><operator pos:start="419:25" pos:end="419:25">*</operator><name pos:start="419:26" pos:end="419:29">serr</name> <operator pos:start="419:31" pos:end="419:32">+=</operator> <name pos:start="419:34" pos:end="419:45"><name pos:start="419:34" pos:end="419:35">mb</name><operator pos:start="419:36" pos:end="419:37">-&gt;</operator><name pos:start="419:38" pos:end="419:45">v1_error</name></name></expr>;</expr_stmt>
<cpp:endif pos:start="420:1" pos:end="420:6">#<cpp:directive pos:start="420:2" pos:end="420:6">endif</cpp:directive></cpp:endif>
                    </block_content>}</block></else></if_stmt>
                </block_content>}</block></if> <else pos:start="422:19" pos:end="436:17">else <block pos:start="422:24" pos:end="436:17">{<block_content pos:start="423:21" pos:end="435:21">
                    <if_stmt pos:start="423:21" pos:end="435:21"><if pos:start="423:21" pos:end="430:21">if<condition pos:start="423:23" pos:end="423:90">(<expr pos:start="423:24" pos:end="423:89"><operator pos:start="423:24" pos:end="423:24">(</operator><name pos:start="423:25" pos:end="423:30">score3</name><operator pos:start="423:31" pos:end="423:31">=</operator><name pos:start="423:32" pos:end="423:40"><name pos:start="423:32" pos:end="423:32">s</name><operator pos:start="423:33" pos:end="423:34">-&gt;</operator><name pos:start="423:35" pos:end="423:40">lambda</name></name> <operator pos:start="423:42" pos:end="423:42">*</operator> <literal type="number" pos:start="423:44" pos:end="423:47">34</literal> <operator pos:start="423:47" pos:end="423:47">+</operator> <name pos:start="423:49" pos:end="423:63">FF_LAMBDA_SCALE</name> <operator pos:start="423:65" pos:end="423:65">*</operator> <name pos:start="423:67" pos:end="423:78"><name pos:start="423:67" pos:end="423:68">mb</name><operator pos:start="423:69" pos:end="423:70">-&gt;</operator><name pos:start="423:71" pos:end="423:78">v4_error</name></name><operator pos:start="423:79" pos:end="423:79">)</operator> <operator pos:start="423:81" pos:end="423:82">&gt;=</operator> <name pos:start="423:84" pos:end="423:89">score1</name></expr>)</condition> <block pos:start="423:92" pos:end="430:21">{<block_content pos:start="424:25" pos:end="430:0">
                        <expr_stmt pos:start="424:25" pos:end="424:53"><expr pos:start="424:25" pos:end="424:52"><name pos:start="424:25" pos:end="424:41"><name pos:start="424:25" pos:end="424:26">mb</name><operator pos:start="424:27" pos:end="424:28">-&gt;</operator><name pos:start="424:29" pos:end="424:41">best_encoding</name></name> <operator pos:start="424:43" pos:end="424:43">=</operator> <name pos:start="424:45" pos:end="424:52">ENC_SKIP</name></expr>;</expr_stmt>
                        <expr_stmt pos:start="425:25" pos:end="425:36"><expr pos:start="425:25" pos:end="425:35"><operator pos:start="425:25" pos:end="425:26">++</operator><name pos:start="425:27" pos:end="425:35">v4_shrunk</name></expr>;</expr_stmt>
                        <expr_stmt pos:start="426:25" pos:end="428:0"><expr pos:start="426:25" pos:end="426:37"><name pos:start="426:25" pos:end="426:27">ret</name> <operator pos:start="426:29" pos:end="426:30">+=</operator> <name pos:start="426:32" pos:end="426:37">score1</name></expr>;</expr_stmt>
<cpp:ifdef pos:start="427:1" pos:end="427:26">#<cpp:directive pos:start="427:2" pos:end="427:6">ifdef</cpp:directive> <name pos:start="427:8" pos:end="427:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
                        <expr_stmt pos:start="428:25" pos:end="430:0"><expr pos:start="428:25" pos:end="428:47"><operator pos:start="428:25" pos:end="428:25">*</operator><name pos:start="428:26" pos:end="428:29">serr</name> <operator pos:start="428:31" pos:end="428:32">+=</operator> <name pos:start="428:34" pos:end="428:47"><name pos:start="428:34" pos:end="428:35">mb</name><operator pos:start="428:36" pos:end="428:37">-&gt;</operator><name pos:start="428:38" pos:end="428:47">skip_error</name></name></expr>;</expr_stmt>
<cpp:endif pos:start="429:1" pos:end="429:6">#<cpp:directive pos:start="429:2" pos:end="429:6">endif</cpp:directive></cpp:endif>
                    </block_content>}</block></if> <else pos:start="430:23" pos:end="435:21">else <block pos:start="430:28" pos:end="435:21">{<block_content pos:start="431:25" pos:end="435:0">
                        <expr_stmt pos:start="431:25" pos:end="433:0"><expr pos:start="431:25" pos:end="431:37"><name pos:start="431:25" pos:end="431:27">ret</name> <operator pos:start="431:29" pos:end="431:30">+=</operator> <name pos:start="431:32" pos:end="431:37">score3</name></expr>;</expr_stmt>
<cpp:ifdef pos:start="432:1" pos:end="432:26">#<cpp:directive pos:start="432:2" pos:end="432:6">ifdef</cpp:directive> <name pos:start="432:8" pos:end="432:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
                        <expr_stmt pos:start="433:25" pos:end="435:0"><expr pos:start="433:25" pos:end="433:45"><operator pos:start="433:25" pos:end="433:25">*</operator><name pos:start="433:26" pos:end="433:29">serr</name> <operator pos:start="433:31" pos:end="433:32">+=</operator> <name pos:start="433:34" pos:end="433:45"><name pos:start="433:34" pos:end="433:35">mb</name><operator pos:start="433:36" pos:end="433:37">-&gt;</operator><name pos:start="433:38" pos:end="433:45">v4_error</name></name></expr>;</expr_stmt>
<cpp:endif pos:start="434:1" pos:end="434:6">#<cpp:directive pos:start="434:2" pos:end="434:6">endif</cpp:directive></cpp:endif>
                    </block_content>}</block></else></if_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></for>
            <expr_stmt pos:start="438:13" pos:end="438:48"><expr pos:start="438:13" pos:end="438:47"><operator pos:start="438:13" pos:end="438:13">*</operator><name pos:start="438:14" pos:end="438:35">training_set_v1_shrunk</name> <operator pos:start="438:37" pos:end="438:37">=</operator> <name pos:start="438:39" pos:end="438:47">v1_shrunk</name></expr>;</expr_stmt>
            <expr_stmt pos:start="439:13" pos:end="439:48"><expr pos:start="439:13" pos:end="439:47"><operator pos:start="439:13" pos:end="439:13">*</operator><name pos:start="439:14" pos:end="439:35">training_set_v4_shrunk</name> <operator pos:start="439:37" pos:end="439:37">=</operator> <name pos:start="439:39" pos:end="439:47">v4_shrunk</name></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="440:11" pos:end="467:9">else <block pos:start="440:16" pos:end="467:9">{<block_content pos:start="441:13" pos:end="466:13"> <comment type="line" pos:start="440:18" pos:end="440:44">// find best mode per block</comment>
            <for pos:start="441:13" pos:end="466:13">for<control pos:start="441:16" pos:end="441:41">(<init pos:start="441:17" pos:end="441:22"><expr pos:start="441:17" pos:end="441:21"><name pos:start="441:17" pos:end="441:17">x</name> <operator pos:start="441:19" pos:end="441:19">=</operator> <literal type="number" pos:start="441:21" pos:end="441:21">0</literal></expr>;</init> <condition pos:start="441:24" pos:end="441:36"><expr pos:start="441:24" pos:end="441:35"><name pos:start="441:24" pos:end="441:24">x</name> <operator pos:start="441:26" pos:end="441:26">&lt;</operator> <name pos:start="441:28" pos:end="441:35">mb_count</name></expr>;</condition> <incr pos:start="441:38" pos:end="441:40"><expr pos:start="441:38" pos:end="441:40"><name pos:start="441:38" pos:end="441:38">x</name><operator pos:start="441:39" pos:end="441:40">++</operator></expr></incr>)</control> <block pos:start="441:43" pos:end="466:13">{<block_content pos:start="442:17" pos:end="465:17">
                <expr_stmt pos:start="442:17" pos:end="442:31"><expr pos:start="442:17" pos:end="442:30"><name pos:start="442:17" pos:end="442:18">mb</name> <operator pos:start="442:20" pos:end="442:20">=</operator> <operator pos:start="442:22" pos:end="442:22">&amp;</operator><name pos:start="442:23" pos:end="442:30"><name pos:start="442:23" pos:end="442:23">s</name><operator pos:start="442:24" pos:end="442:25">-&gt;</operator><name pos:start="442:26" pos:end="442:27">mb</name><index pos:start="442:28" pos:end="442:30">[<expr pos:start="442:29" pos:end="442:29"><name pos:start="442:29" pos:end="442:29">x</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="443:17" pos:end="443:75"><expr pos:start="443:17" pos:end="443:74"><name pos:start="443:17" pos:end="443:22">score1</name> <operator pos:start="443:24" pos:end="443:24">=</operator> <name pos:start="443:26" pos:end="443:34"><name pos:start="443:26" pos:end="443:26">s</name><operator pos:start="443:27" pos:end="443:28">-&gt;</operator><name pos:start="443:29" pos:end="443:34">lambda</name></name> <operator pos:start="443:36" pos:end="443:36">*</operator> <literal type="number" pos:start="443:38" pos:end="443:41">1</literal>  <operator pos:start="443:41" pos:end="443:41">+</operator> <name pos:start="443:43" pos:end="443:57">FF_LAMBDA_SCALE</name> <operator pos:start="443:59" pos:end="443:59">*</operator> <name pos:start="443:61" pos:end="443:74"><name pos:start="443:61" pos:end="443:62">mb</name><operator pos:start="443:63" pos:end="443:64">-&gt;</operator><name pos:start="443:65" pos:end="443:74">skip_error</name></name></expr>;</expr_stmt>
                <expr_stmt pos:start="444:17" pos:end="444:73"><expr pos:start="444:17" pos:end="444:72"><name pos:start="444:17" pos:end="444:22">score2</name> <operator pos:start="444:24" pos:end="444:24">=</operator> <name pos:start="444:26" pos:end="444:34"><name pos:start="444:26" pos:end="444:26">s</name><operator pos:start="444:27" pos:end="444:28">-&gt;</operator><name pos:start="444:29" pos:end="444:34">lambda</name></name> <operator pos:start="444:36" pos:end="444:36">*</operator> <literal type="number" pos:start="444:38" pos:end="444:41">10</literal> <operator pos:start="444:41" pos:end="444:41">+</operator> <name pos:start="444:43" pos:end="444:57">FF_LAMBDA_SCALE</name> <operator pos:start="444:59" pos:end="444:59">*</operator> <name pos:start="444:61" pos:end="444:72"><name pos:start="444:61" pos:end="444:62">mb</name><operator pos:start="444:63" pos:end="444:64">-&gt;</operator><name pos:start="444:65" pos:end="444:72">v1_error</name></name></expr>;</expr_stmt>
                <expr_stmt pos:start="445:17" pos:end="445:73"><expr pos:start="445:17" pos:end="445:72"><name pos:start="445:17" pos:end="445:22">score3</name> <operator pos:start="445:24" pos:end="445:24">=</operator> <name pos:start="445:26" pos:end="445:34"><name pos:start="445:26" pos:end="445:26">s</name><operator pos:start="445:27" pos:end="445:28">-&gt;</operator><name pos:start="445:29" pos:end="445:34">lambda</name></name> <operator pos:start="445:36" pos:end="445:36">*</operator> <literal type="number" pos:start="445:38" pos:end="445:41">34</literal> <operator pos:start="445:41" pos:end="445:41">+</operator> <name pos:start="445:43" pos:end="445:57">FF_LAMBDA_SCALE</name> <operator pos:start="445:59" pos:end="445:59">*</operator> <name pos:start="445:61" pos:end="445:72"><name pos:start="445:61" pos:end="445:62">mb</name><operator pos:start="445:63" pos:end="445:64">-&gt;</operator><name pos:start="445:65" pos:end="445:72">v4_error</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="447:17" pos:end="465:17"><if pos:start="447:17" pos:end="453:17">if<condition pos:start="447:19" pos:end="447:56">(<expr pos:start="447:20" pos:end="447:55"><name pos:start="447:20" pos:end="447:25">score1</name> <operator pos:start="447:27" pos:end="447:28">&lt;=</operator> <name pos:start="447:30" pos:end="447:35">score2</name> <operator pos:start="447:37" pos:end="447:38">&amp;&amp;</operator> <name pos:start="447:40" pos:end="447:45">score1</name> <operator pos:start="447:47" pos:end="447:48">&lt;=</operator> <name pos:start="447:50" pos:end="447:55">score3</name></expr>)</condition> <block pos:start="447:58" pos:end="453:17">{<block_content pos:start="448:21" pos:end="452:49">
                    <expr_stmt pos:start="448:21" pos:end="450:0"><expr pos:start="448:21" pos:end="448:33"><name pos:start="448:21" pos:end="448:23">ret</name> <operator pos:start="448:25" pos:end="448:26">+=</operator> <name pos:start="448:28" pos:end="448:33">score1</name></expr>;</expr_stmt>
<cpp:ifdef pos:start="449:1" pos:end="449:26">#<cpp:directive pos:start="449:2" pos:end="449:6">ifdef</cpp:directive> <name pos:start="449:8" pos:end="449:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
                    <expr_stmt pos:start="450:21" pos:end="452:0"><expr pos:start="450:21" pos:end="450:43"><operator pos:start="450:21" pos:end="450:21">*</operator><name pos:start="450:22" pos:end="450:25">serr</name> <operator pos:start="450:27" pos:end="450:28">+=</operator> <name pos:start="450:30" pos:end="450:43"><name pos:start="450:30" pos:end="450:31">mb</name><operator pos:start="450:32" pos:end="450:33">-&gt;</operator><name pos:start="450:34" pos:end="450:43">skip_error</name></name></expr>;</expr_stmt>
<cpp:endif pos:start="451:1" pos:end="451:6">#<cpp:directive pos:start="451:2" pos:end="451:6">endif</cpp:directive></cpp:endif>
                    <expr_stmt pos:start="452:21" pos:end="452:49"><expr pos:start="452:21" pos:end="452:48"><name pos:start="452:21" pos:end="452:37"><name pos:start="452:21" pos:end="452:22">mb</name><operator pos:start="452:23" pos:end="452:24">-&gt;</operator><name pos:start="452:25" pos:end="452:37">best_encoding</name></name> <operator pos:start="452:39" pos:end="452:39">=</operator> <name pos:start="452:41" pos:end="452:48">ENC_SKIP</name></expr>;</expr_stmt>
                </block_content>}</block></if> <if type="elseif" pos:start="453:19" pos:end="459:17">else if<condition pos:start="453:26" pos:end="453:43">(<expr pos:start="453:27" pos:end="453:42"><name pos:start="453:27" pos:end="453:32">score2</name> <operator pos:start="453:34" pos:end="453:35">&lt;=</operator> <name pos:start="453:37" pos:end="453:42">score3</name></expr>)</condition> <block pos:start="453:45" pos:end="459:17">{<block_content pos:start="454:21" pos:end="458:47">
                    <expr_stmt pos:start="454:21" pos:end="456:0"><expr pos:start="454:21" pos:end="454:33"><name pos:start="454:21" pos:end="454:23">ret</name> <operator pos:start="454:25" pos:end="454:26">+=</operator> <name pos:start="454:28" pos:end="454:33">score2</name></expr>;</expr_stmt>
<cpp:ifdef pos:start="455:1" pos:end="455:26">#<cpp:directive pos:start="455:2" pos:end="455:6">ifdef</cpp:directive> <name pos:start="455:8" pos:end="455:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
                    <expr_stmt pos:start="456:21" pos:end="458:0"><expr pos:start="456:21" pos:end="456:41"><operator pos:start="456:21" pos:end="456:21">*</operator><name pos:start="456:22" pos:end="456:25">serr</name> <operator pos:start="456:27" pos:end="456:28">+=</operator> <name pos:start="456:30" pos:end="456:41"><name pos:start="456:30" pos:end="456:31">mb</name><operator pos:start="456:32" pos:end="456:33">-&gt;</operator><name pos:start="456:34" pos:end="456:41">v1_error</name></name></expr>;</expr_stmt>
<cpp:endif pos:start="457:1" pos:end="457:6">#<cpp:directive pos:start="457:2" pos:end="457:6">endif</cpp:directive></cpp:endif>
                    <expr_stmt pos:start="458:21" pos:end="458:47"><expr pos:start="458:21" pos:end="458:46"><name pos:start="458:21" pos:end="458:37"><name pos:start="458:21" pos:end="458:22">mb</name><operator pos:start="458:23" pos:end="458:24">-&gt;</operator><name pos:start="458:25" pos:end="458:37">best_encoding</name></name> <operator pos:start="458:39" pos:end="458:39">=</operator> <name pos:start="458:41" pos:end="458:46">ENC_V1</name></expr>;</expr_stmt>
                </block_content>}</block></if> <else pos:start="459:19" pos:end="465:17">else <block pos:start="459:24" pos:end="465:17">{<block_content pos:start="460:21" pos:end="464:47">
                    <expr_stmt pos:start="460:21" pos:end="462:0"><expr pos:start="460:21" pos:end="460:33"><name pos:start="460:21" pos:end="460:23">ret</name> <operator pos:start="460:25" pos:end="460:26">+=</operator> <name pos:start="460:28" pos:end="460:33">score3</name></expr>;</expr_stmt>
<cpp:ifdef pos:start="461:1" pos:end="461:26">#<cpp:directive pos:start="461:2" pos:end="461:6">ifdef</cpp:directive> <name pos:start="461:8" pos:end="461:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
                    <expr_stmt pos:start="462:21" pos:end="464:0"><expr pos:start="462:21" pos:end="462:41"><operator pos:start="462:21" pos:end="462:21">*</operator><name pos:start="462:22" pos:end="462:25">serr</name> <operator pos:start="462:27" pos:end="462:28">+=</operator> <name pos:start="462:30" pos:end="462:41"><name pos:start="462:30" pos:end="462:31">mb</name><operator pos:start="462:32" pos:end="462:33">-&gt;</operator><name pos:start="462:34" pos:end="462:41">v4_error</name></name></expr>;</expr_stmt>
<cpp:endif pos:start="463:1" pos:end="463:6">#<cpp:directive pos:start="463:2" pos:end="463:6">endif</cpp:directive></cpp:endif>
                    <expr_stmt pos:start="464:21" pos:end="464:47"><expr pos:start="464:21" pos:end="464:46"><name pos:start="464:21" pos:end="464:37"><name pos:start="464:21" pos:end="464:22">mb</name><operator pos:start="464:23" pos:end="464:24">-&gt;</operator><name pos:start="464:25" pos:end="464:37">best_encoding</name></name> <operator pos:start="464:39" pos:end="464:39">=</operator> <name pos:start="464:41" pos:end="464:46">ENC_V4</name></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></else></if_stmt>

        <break pos:start="469:9" pos:end="469:14">break;</break>
    </block_content>}</block></switch>

    <return pos:start="472:5" pos:end="472:15">return <expr pos:start="472:12" pos:end="472:14"><name pos:start="472:12" pos:end="472:14">ret</name></expr>;</return>
</block_content>}</block></function>

<function pos:start="475:1" pos:end="480:1"><type pos:start="475:1" pos:end="475:10"><specifier pos:start="475:1" pos:end="475:6">static</specifier> <name pos:start="475:8" pos:end="475:10">int</name></type> <name pos:start="475:12" pos:end="475:29">write_chunk_header</name><parameter_list pos:start="475:30" pos:end="475:81">(<parameter pos:start="475:31" pos:end="475:48"><decl pos:start="475:31" pos:end="475:48"><type pos:start="475:31" pos:end="475:48"><name pos:start="475:31" pos:end="475:38">unsigned</name> <name pos:start="475:40" pos:end="475:43">char</name> <modifier pos:start="475:45" pos:end="475:45">*</modifier></type><name pos:start="475:46" pos:end="475:48">buf</name></decl></parameter>, <parameter pos:start="475:51" pos:end="475:64"><decl pos:start="475:51" pos:end="475:64"><type pos:start="475:51" pos:end="475:64"><name pos:start="475:51" pos:end="475:53">int</name></type> <name pos:start="475:55" pos:end="475:64">chunk_type</name></decl></parameter>, <parameter pos:start="475:67" pos:end="475:80"><decl pos:start="475:67" pos:end="475:80"><type pos:start="475:67" pos:end="475:80"><name pos:start="475:67" pos:end="475:69">int</name></type> <name pos:start="475:71" pos:end="475:80">chunk_size</name></decl></parameter>)</parameter_list>
<block pos:start="476:1" pos:end="480:1">{<block_content pos:start="477:5" pos:end="479:29">
    <expr_stmt pos:start="477:5" pos:end="477:24"><expr pos:start="477:5" pos:end="477:23"><name pos:start="477:5" pos:end="477:10"><name pos:start="477:5" pos:end="477:7">buf</name><index pos:start="477:8" pos:end="477:10">[<expr pos:start="477:9" pos:end="477:9"><literal type="number" pos:start="477:9" pos:end="477:9">0</literal></expr>]</index></name> <operator pos:start="477:12" pos:end="477:12">=</operator> <name pos:start="477:14" pos:end="477:23">chunk_type</name></expr>;</expr_stmt>
    <expr_stmt pos:start="478:5" pos:end="478:53"><expr pos:start="478:5" pos:end="478:52"><call pos:start="478:5" pos:end="478:52"><name pos:start="478:5" pos:end="478:11">AV_WB24</name><argument_list pos:start="478:12" pos:end="478:52">(<argument pos:start="478:13" pos:end="478:19"><expr pos:start="478:13" pos:end="478:19"><operator pos:start="478:13" pos:end="478:13">&amp;</operator><name pos:start="478:14" pos:end="478:19"><name pos:start="478:14" pos:end="478:16">buf</name><index pos:start="478:17" pos:end="478:19">[<expr pos:start="478:18" pos:end="478:18"><literal type="number" pos:start="478:18" pos:end="478:18">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="478:22" pos:end="478:51"><expr pos:start="478:22" pos:end="478:51"><name pos:start="478:22" pos:end="478:31">chunk_size</name> <operator pos:start="478:33" pos:end="478:33">+</operator> <name pos:start="478:35" pos:end="478:51">CHUNK_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="479:5" pos:end="479:29">return <expr pos:start="479:12" pos:end="479:28"><name pos:start="479:12" pos:end="479:28">CHUNK_HEADER_SIZE</name></expr>;</return>
</block_content>}</block></function>

<function pos:start="482:1" pos:end="525:1"><type pos:start="482:1" pos:end="482:10"><specifier pos:start="482:1" pos:end="482:6">static</specifier> <name pos:start="482:8" pos:end="482:10">int</name></type> <name pos:start="482:12" pos:end="482:26">encode_codebook</name><parameter_list pos:start="482:27" pos:end="482:134">(<parameter pos:start="482:28" pos:end="482:47"><decl pos:start="482:28" pos:end="482:47"><type pos:start="482:28" pos:end="482:47"><name pos:start="482:28" pos:end="482:44">CinepakEncContext</name> <modifier pos:start="482:46" pos:end="482:46">*</modifier></type><name pos:start="482:47" pos:end="482:47">s</name></decl></parameter>, <parameter pos:start="482:50" pos:end="482:62"><decl pos:start="482:50" pos:end="482:62"><type pos:start="482:50" pos:end="482:62"><name pos:start="482:50" pos:end="482:52">int</name> <modifier pos:start="482:54" pos:end="482:54">*</modifier></type><name pos:start="482:55" pos:end="482:62">codebook</name></decl></parameter>, <parameter pos:start="482:65" pos:end="482:72"><decl pos:start="482:65" pos:end="482:72"><type pos:start="482:65" pos:end="482:72"><name pos:start="482:65" pos:end="482:67">int</name></type> <name pos:start="482:69" pos:end="482:72">size</name></decl></parameter>, <parameter pos:start="482:75" pos:end="482:92"><decl pos:start="482:75" pos:end="482:92"><type pos:start="482:75" pos:end="482:92"><name pos:start="482:75" pos:end="482:77">int</name></type> <name pos:start="482:79" pos:end="482:92">chunk_type_yuv</name></decl></parameter>, <parameter pos:start="482:95" pos:end="482:113"><decl pos:start="482:95" pos:end="482:113"><type pos:start="482:95" pos:end="482:113"><name pos:start="482:95" pos:end="482:97">int</name></type> <name pos:start="482:99" pos:end="482:113">chunk_type_gray</name></decl></parameter>, <parameter pos:start="482:116" pos:end="482:133"><decl pos:start="482:116" pos:end="482:133"><type pos:start="482:116" pos:end="482:133"><name pos:start="482:116" pos:end="482:123">unsigned</name> <name pos:start="482:125" pos:end="482:128">char</name> <modifier pos:start="482:130" pos:end="482:130">*</modifier></type><name pos:start="482:131" pos:end="482:133">buf</name></decl></parameter>)</parameter_list>
<block pos:start="483:1" pos:end="525:1">{<block_content pos:start="484:5" pos:end="524:15">
    <decl_stmt pos:start="484:5" pos:end="484:71"><decl pos:start="484:5" pos:end="484:9"><type pos:start="484:5" pos:end="484:7"><name pos:start="484:5" pos:end="484:7">int</name></type> <name pos:start="484:9" pos:end="484:9">x</name></decl>, <decl pos:start="484:12" pos:end="484:12"><type ref="prev" pos:start="484:5" pos:end="484:7"/><name pos:start="484:12" pos:end="484:12">y</name></decl>, <decl pos:start="484:15" pos:end="484:17"><type ref="prev" pos:start="484:5" pos:end="484:7"/><name pos:start="484:15" pos:end="484:17">ret</name></decl>, <decl pos:start="484:20" pos:end="484:70"><type ref="prev" pos:start="484:5" pos:end="484:7"/><name pos:start="484:20" pos:end="484:29">entry_size</name> <init pos:start="484:31" pos:end="484:70">= <expr pos:start="484:33" pos:end="484:70"><ternary pos:start="484:33" pos:end="484:70"><condition pos:start="484:33" pos:end="484:64"><expr pos:start="484:33" pos:end="484:62"><name pos:start="484:33" pos:end="484:42"><name pos:start="484:33" pos:end="484:33">s</name><operator pos:start="484:34" pos:end="484:35">-&gt;</operator><name pos:start="484:36" pos:end="484:42">pix_fmt</name></name> <operator pos:start="484:44" pos:end="484:45">==</operator> <name pos:start="484:47" pos:end="484:62">AV_PIX_FMT_RGB24</name></expr> ?</condition><then pos:start="484:66" pos:end="484:66"> <expr pos:start="484:66" pos:end="484:66"><literal type="number" pos:start="484:66" pos:end="484:66">6</literal></expr> </then><else pos:start="484:68" pos:end="484:70">: <expr pos:start="484:70" pos:end="484:70"><literal type="number" pos:start="484:70" pos:end="484:70">4</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="485:5" pos:end="485:50"><decl pos:start="485:5" pos:end="485:49"><type pos:start="485:5" pos:end="485:7"><name pos:start="485:5" pos:end="485:7">int</name></type> <name pos:start="485:9" pos:end="485:45">incremental_codebook_replacement_mode</name> <init pos:start="485:47" pos:end="485:49">= <expr pos:start="485:49" pos:end="485:49"><literal type="number" pos:start="485:49" pos:end="485:49">0</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="485:52" pos:end="485:69">// hardcoded here,</comment>
                <comment type="line" pos:start="486:17" pos:end="486:75">// the compiler should notice that this is a constant -- rl</comment>

    <expr_stmt pos:start="488:5" pos:end="493:72"><expr pos:start="488:5" pos:end="493:71"><name pos:start="488:5" pos:end="488:7">ret</name> <operator pos:start="488:9" pos:end="488:9">=</operator> <call pos:start="488:11" pos:end="493:71"><name pos:start="488:11" pos:end="488:28">write_chunk_header</name><argument_list pos:start="488:29" pos:end="493:71">(<argument pos:start="488:30" pos:end="488:32"><expr pos:start="488:30" pos:end="488:32"><name pos:start="488:30" pos:end="488:32">buf</name></expr></argument>,
          <argument pos:start="489:11" pos:end="491:70"><expr pos:start="489:11" pos:end="491:70"><ternary pos:start="489:11" pos:end="491:70"><condition pos:start="489:11" pos:end="489:42"><expr pos:start="489:11" pos:end="489:40"><name pos:start="489:11" pos:end="489:20"><name pos:start="489:11" pos:end="489:11">s</name><operator pos:start="489:12" pos:end="489:13">-&gt;</operator><name pos:start="489:14" pos:end="489:20">pix_fmt</name></name> <operator pos:start="489:22" pos:end="489:23">==</operator> <name pos:start="489:25" pos:end="489:40">AV_PIX_FMT_RGB24</name></expr> ?</condition><then pos:start="490:12" pos:end="490:69">
           <expr pos:start="490:12" pos:end="490:69"><name pos:start="490:12" pos:end="490:25">chunk_type_yuv</name><operator pos:start="490:26" pos:end="490:26">+</operator><operator pos:start="490:27" pos:end="490:27">(</operator><ternary pos:start="490:28" pos:end="490:68"><condition pos:start="490:28" pos:end="490:65"><expr pos:start="490:28" pos:end="490:64"><name pos:start="490:28" pos:end="490:64">incremental_codebook_replacement_mode</name></expr>?</condition><then pos:start="490:66" pos:end="490:66"><expr pos:start="490:66" pos:end="490:66"><literal type="number" pos:start="490:66" pos:end="490:66">1</literal></expr></then><else pos:start="490:67" pos:end="490:68">:<expr pos:start="490:68" pos:end="490:68"><literal type="number" pos:start="490:68" pos:end="490:68">0</literal></expr></else></ternary><operator pos:start="490:69" pos:end="490:69">)</operator></expr> </then><else pos:start="490:71" pos:end="491:70">:
           <expr pos:start="491:12" pos:end="491:70"><name pos:start="491:12" pos:end="491:26">chunk_type_gray</name><operator pos:start="491:27" pos:end="491:27">+</operator><operator pos:start="491:28" pos:end="491:28">(</operator><ternary pos:start="491:29" pos:end="491:69"><condition pos:start="491:29" pos:end="491:66"><expr pos:start="491:29" pos:end="491:65"><name pos:start="491:29" pos:end="491:65">incremental_codebook_replacement_mode</name></expr>?</condition><then pos:start="491:67" pos:end="491:67"><expr pos:start="491:67" pos:end="491:67"><literal type="number" pos:start="491:67" pos:end="491:67">1</literal></expr></then><else pos:start="491:68" pos:end="491:69">:<expr pos:start="491:69" pos:end="491:69"><literal type="number" pos:start="491:69" pos:end="491:69">0</literal></expr></else></ternary><operator pos:start="491:70" pos:end="491:70">)</operator></expr></else></ternary></expr></argument>,
          <argument pos:start="492:11" pos:end="493:69"><expr pos:start="492:11" pos:end="493:69"><name pos:start="492:11" pos:end="492:20">entry_size</name> <operator pos:start="492:22" pos:end="492:22">*</operator> <name pos:start="492:24" pos:end="492:27">size</name>
           <operator pos:start="493:12" pos:end="493:12">+</operator> <operator pos:start="493:14" pos:end="493:14">(</operator><ternary pos:start="493:15" pos:end="493:68"><condition pos:start="493:15" pos:end="493:52"><expr pos:start="493:15" pos:end="493:51"><name pos:start="493:15" pos:end="493:51">incremental_codebook_replacement_mode</name></expr>?</condition><then pos:start="493:53" pos:end="493:66"><expr pos:start="493:53" pos:end="493:66"><operator pos:start="493:53" pos:end="493:53">(</operator><name pos:start="493:54" pos:end="493:57">size</name><operator pos:start="493:58" pos:end="493:58">+</operator><literal type="number" pos:start="493:59" pos:end="493:60">31</literal><operator pos:start="493:61" pos:end="493:61">)</operator><operator pos:start="493:62" pos:end="493:62">/</operator><literal type="number" pos:start="493:63" pos:end="493:64">32</literal><operator pos:start="493:65" pos:end="493:65">*</operator><literal type="number" pos:start="493:66" pos:end="493:66">4</literal></expr></then><else pos:start="493:67" pos:end="493:68">:<expr pos:start="493:68" pos:end="493:68"><literal type="number" pos:start="493:68" pos:end="493:68">0</literal></expr></else></ternary><operator pos:start="493:69" pos:end="493:69">)</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="495:1" pos:end="495:56">// we do codebook encoding according to the "intra" mode</comment>
<comment type="line" pos:start="496:1" pos:end="496:65">// but we keep the "dead" code for reference in case we will want</comment>
<comment type="line" pos:start="497:1" pos:end="497:68">// to use incremental codebook updates (which actually would give us</comment>
<comment type="line" pos:start="498:1" pos:end="498:73">// "kind of" motion compensation, especially in 1 strip/frame case) -- rl</comment>
<comment type="line" pos:start="499:1" pos:end="499:49">// (of course, the code will be not useful as-is)</comment>
    <if_stmt pos:start="500:5" pos:end="522:78"><if pos:start="500:5" pos:end="519:5">if<condition pos:start="500:7" pos:end="500:45">(<expr pos:start="500:8" pos:end="500:44"><name pos:start="500:8" pos:end="500:44">incremental_codebook_replacement_mode</name></expr>)</condition> <block pos:start="500:47" pos:end="519:5">{<block_content pos:start="501:9" pos:end="518:43">
        <decl_stmt pos:start="501:9" pos:end="501:22"><decl pos:start="501:9" pos:end="501:21"><type pos:start="501:9" pos:end="501:11"><name pos:start="501:9" pos:end="501:11">int</name></type> <name pos:start="501:13" pos:end="501:17">flags</name> <init pos:start="501:19" pos:end="501:21">= <expr pos:start="501:21" pos:end="501:21"><literal type="number" pos:start="501:21" pos:end="501:21">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="502:9" pos:end="502:21"><decl pos:start="502:9" pos:end="502:20"><type pos:start="502:9" pos:end="502:11"><name pos:start="502:9" pos:end="502:11">int</name></type> <name pos:start="502:13" pos:end="502:20">flagsind</name></decl>;</decl_stmt>
        <for pos:start="503:9" pos:end="516:9">for<control pos:start="503:12" pos:end="503:33">(<init pos:start="503:13" pos:end="503:18"><expr pos:start="503:13" pos:end="503:17"><name pos:start="503:13" pos:end="503:13">x</name> <operator pos:start="503:15" pos:end="503:15">=</operator> <literal type="number" pos:start="503:17" pos:end="503:17">0</literal></expr>;</init> <condition pos:start="503:20" pos:end="503:28"><expr pos:start="503:20" pos:end="503:27"><name pos:start="503:20" pos:end="503:20">x</name> <operator pos:start="503:22" pos:end="503:22">&lt;</operator> <name pos:start="503:24" pos:end="503:27">size</name></expr>;</condition> <incr pos:start="503:30" pos:end="503:32"><expr pos:start="503:30" pos:end="503:32"><name pos:start="503:30" pos:end="503:30">x</name><operator pos:start="503:31" pos:end="503:32">++</operator></expr></incr>)</control> <block pos:start="503:35" pos:end="516:9">{<block_content pos:start="504:13" pos:end="515:13">
            <if_stmt pos:start="504:13" pos:end="509:50"><if pos:start="504:13" pos:end="508:13">if<condition pos:start="504:15" pos:end="504:26">(<expr pos:start="504:16" pos:end="504:25"><name pos:start="504:16" pos:end="504:20">flags</name> <operator pos:start="504:22" pos:end="504:23">==</operator> <literal type="number" pos:start="504:25" pos:end="504:25">0</literal></expr>)</condition> <block pos:start="504:28" pos:end="508:13">{<block_content pos:start="505:17" pos:end="507:35">
                <expr_stmt pos:start="505:17" pos:end="505:31"><expr pos:start="505:17" pos:end="505:30"><name pos:start="505:17" pos:end="505:24">flagsind</name> <operator pos:start="505:26" pos:end="505:26">=</operator> <name pos:start="505:28" pos:end="505:30">ret</name></expr>;</expr_stmt>
                <expr_stmt pos:start="506:17" pos:end="506:25"><expr pos:start="506:17" pos:end="506:24"><name pos:start="506:17" pos:end="506:19">ret</name> <operator pos:start="506:21" pos:end="506:22">+=</operator> <literal type="number" pos:start="506:24" pos:end="506:24">4</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="507:17" pos:end="507:35"><expr pos:start="507:17" pos:end="507:34"><name pos:start="507:17" pos:end="507:21">flags</name> <operator pos:start="507:23" pos:end="507:23">=</operator> <literal type="number" pos:start="507:25" pos:end="507:34">0x80000000</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="508:15" pos:end="509:50">else<block type="pseudo" pos:start="509:17" pos:end="509:50"><block_content pos:start="509:17" pos:end="509:50">
                <expr_stmt pos:start="509:17" pos:end="509:50"><expr pos:start="509:17" pos:end="509:49"><name pos:start="509:17" pos:end="509:21">flags</name> <operator pos:start="509:23" pos:end="509:23">=</operator> <operator pos:start="509:25" pos:end="509:25">(</operator><operator pos:start="509:26" pos:end="509:26">(</operator><name pos:start="509:27" pos:end="509:31">flags</name><operator pos:start="509:32" pos:end="509:33">&gt;&gt;</operator><literal type="number" pos:start="509:34" pos:end="509:34">1</literal><operator pos:start="509:35" pos:end="509:35">)</operator> <operator pos:start="509:37" pos:end="509:37">|</operator> <literal type="number" pos:start="509:39" pos:end="509:48">0x80000000</literal><operator pos:start="509:49" pos:end="509:49">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
            <for pos:start="510:13" pos:end="511:78">for<control pos:start="510:16" pos:end="510:43">(<init pos:start="510:17" pos:end="510:22"><expr pos:start="510:17" pos:end="510:21"><name pos:start="510:17" pos:end="510:17">y</name> <operator pos:start="510:19" pos:end="510:19">=</operator> <literal type="number" pos:start="510:21" pos:end="510:21">0</literal></expr>;</init> <condition pos:start="510:24" pos:end="510:38"><expr pos:start="510:24" pos:end="510:37"><name pos:start="510:24" pos:end="510:24">y</name> <operator pos:start="510:26" pos:end="510:26">&lt;</operator> <name pos:start="510:28" pos:end="510:37">entry_size</name></expr>;</condition> <incr pos:start="510:40" pos:end="510:42"><expr pos:start="510:40" pos:end="510:42"><name pos:start="510:40" pos:end="510:40">y</name><operator pos:start="510:41" pos:end="510:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="511:17" pos:end="511:78"><block_content pos:start="511:17" pos:end="511:78">
                <expr_stmt pos:start="511:17" pos:end="511:78"><expr pos:start="511:17" pos:end="511:77"><name pos:start="511:17" pos:end="511:26"><name pos:start="511:17" pos:end="511:19">buf</name><index pos:start="511:20" pos:end="511:26">[<expr pos:start="511:21" pos:end="511:25"><name pos:start="511:21" pos:end="511:23">ret</name><operator pos:start="511:24" pos:end="511:25">++</operator></expr>]</index></name> <operator pos:start="511:28" pos:end="511:28">=</operator> <name pos:start="511:30" pos:end="511:55"><name pos:start="511:30" pos:end="511:37">codebook</name><index pos:start="511:38" pos:end="511:55">[<expr pos:start="511:39" pos:end="511:54"><name pos:start="511:39" pos:end="511:39">y</name> <operator pos:start="511:41" pos:end="511:41">+</operator> <name pos:start="511:43" pos:end="511:43">x</name><operator pos:start="511:44" pos:end="511:44">*</operator><name pos:start="511:45" pos:end="511:54">entry_size</name></expr>]</index></name> <operator pos:start="511:57" pos:end="511:57">^</operator> <operator pos:start="511:59" pos:end="511:59">(</operator><ternary pos:start="511:60" pos:end="511:76"><condition pos:start="511:60" pos:end="511:67"><expr pos:start="511:60" pos:end="511:65"><name pos:start="511:60" pos:end="511:60">y</name> <operator pos:start="511:62" pos:end="511:63">&gt;=</operator> <literal type="number" pos:start="511:65" pos:end="511:65">4</literal></expr> ?</condition><then pos:start="511:69" pos:end="511:72"> <expr pos:start="511:69" pos:end="511:72"><literal type="number" pos:start="511:69" pos:end="511:72">0x80</literal></expr> </then><else pos:start="511:74" pos:end="511:76">: <expr pos:start="511:76" pos:end="511:76"><literal type="number" pos:start="511:76" pos:end="511:76">0</literal></expr></else></ternary><operator pos:start="511:77" pos:end="511:77">)</operator></expr>;</expr_stmt></block_content></block></for>
            <if_stmt pos:start="512:13" pos:end="515:13"><if pos:start="512:13" pos:end="515:13">if<condition pos:start="512:15" pos:end="512:48">(<expr pos:start="512:16" pos:end="512:47"><operator pos:start="512:16" pos:end="512:16">(</operator><name pos:start="512:17" pos:end="512:21">flags</name><operator pos:start="512:22" pos:end="512:22">&amp;</operator><literal type="number" pos:start="512:23" pos:end="512:32">0xffffffff</literal><operator pos:start="512:33" pos:end="512:33">)</operator> <operator pos:start="512:35" pos:end="512:36">==</operator> <literal type="number" pos:start="512:38" pos:end="512:47">0xffffffff</literal></expr>)</condition> <block pos:start="512:50" pos:end="515:13">{<block_content pos:start="513:17" pos:end="514:26">
                <expr_stmt pos:start="513:17" pos:end="513:47"><expr pos:start="513:17" pos:end="513:46"><call pos:start="513:17" pos:end="513:46"><name pos:start="513:17" pos:end="513:23">AV_WB32</name><argument_list pos:start="513:24" pos:end="513:46">(<argument pos:start="513:25" pos:end="513:38"><expr pos:start="513:25" pos:end="513:38"><operator pos:start="513:25" pos:end="513:25">&amp;</operator><name pos:start="513:26" pos:end="513:38"><name pos:start="513:26" pos:end="513:28">buf</name><index pos:start="513:29" pos:end="513:38">[<expr pos:start="513:30" pos:end="513:37"><name pos:start="513:30" pos:end="513:37">flagsind</name></expr>]</index></name></expr></argument>, <argument pos:start="513:41" pos:end="513:45"><expr pos:start="513:41" pos:end="513:45"><name pos:start="513:41" pos:end="513:45">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="514:17" pos:end="514:26"><expr pos:start="514:17" pos:end="514:25"><name pos:start="514:17" pos:end="514:21">flags</name> <operator pos:start="514:23" pos:end="514:23">=</operator> <literal type="number" pos:start="514:25" pos:end="514:25">0</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <if_stmt pos:start="517:9" pos:end="518:43"><if pos:start="517:9" pos:end="518:43">if<condition pos:start="517:11" pos:end="517:17">(<expr pos:start="517:12" pos:end="517:16"><name pos:start="517:12" pos:end="517:16">flags</name></expr>)</condition><block type="pseudo" pos:start="518:13" pos:end="518:43"><block_content pos:start="518:13" pos:end="518:43">
            <expr_stmt pos:start="518:13" pos:end="518:43"><expr pos:start="518:13" pos:end="518:42"><call pos:start="518:13" pos:end="518:42"><name pos:start="518:13" pos:end="518:19">AV_WB32</name><argument_list pos:start="518:20" pos:end="518:42">(<argument pos:start="518:21" pos:end="518:34"><expr pos:start="518:21" pos:end="518:34"><operator pos:start="518:21" pos:end="518:21">&amp;</operator><name pos:start="518:22" pos:end="518:34"><name pos:start="518:22" pos:end="518:24">buf</name><index pos:start="518:25" pos:end="518:34">[<expr pos:start="518:26" pos:end="518:33"><name pos:start="518:26" pos:end="518:33">flagsind</name></expr>]</index></name></expr></argument>, <argument pos:start="518:37" pos:end="518:41"><expr pos:start="518:37" pos:end="518:41"><name pos:start="518:37" pos:end="518:41">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></if> <else pos:start="519:7" pos:end="522:78">else<block type="pseudo" pos:start="520:9" pos:end="522:78"><block_content pos:start="520:9" pos:end="522:78">
        <for pos:start="520:9" pos:end="522:78">for<control pos:start="520:12" pos:end="520:33">(<init pos:start="520:13" pos:end="520:18"><expr pos:start="520:13" pos:end="520:17"><name pos:start="520:13" pos:end="520:13">x</name> <operator pos:start="520:15" pos:end="520:15">=</operator> <literal type="number" pos:start="520:17" pos:end="520:17">0</literal></expr>;</init> <condition pos:start="520:20" pos:end="520:28"><expr pos:start="520:20" pos:end="520:27"><name pos:start="520:20" pos:end="520:20">x</name> <operator pos:start="520:22" pos:end="520:22">&lt;</operator> <name pos:start="520:24" pos:end="520:27">size</name></expr>;</condition> <incr pos:start="520:30" pos:end="520:32"><expr pos:start="520:30" pos:end="520:32"><name pos:start="520:30" pos:end="520:30">x</name><operator pos:start="520:31" pos:end="520:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="521:13" pos:end="522:78"><block_content pos:start="521:13" pos:end="522:78">
            <for pos:start="521:13" pos:end="522:78">for<control pos:start="521:16" pos:end="521:43">(<init pos:start="521:17" pos:end="521:22"><expr pos:start="521:17" pos:end="521:21"><name pos:start="521:17" pos:end="521:17">y</name> <operator pos:start="521:19" pos:end="521:19">=</operator> <literal type="number" pos:start="521:21" pos:end="521:21">0</literal></expr>;</init> <condition pos:start="521:24" pos:end="521:38"><expr pos:start="521:24" pos:end="521:37"><name pos:start="521:24" pos:end="521:24">y</name> <operator pos:start="521:26" pos:end="521:26">&lt;</operator> <name pos:start="521:28" pos:end="521:37">entry_size</name></expr>;</condition> <incr pos:start="521:40" pos:end="521:42"><expr pos:start="521:40" pos:end="521:42"><name pos:start="521:40" pos:end="521:40">y</name><operator pos:start="521:41" pos:end="521:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="522:17" pos:end="522:78"><block_content pos:start="522:17" pos:end="522:78">
                <expr_stmt pos:start="522:17" pos:end="522:78"><expr pos:start="522:17" pos:end="522:77"><name pos:start="522:17" pos:end="522:26"><name pos:start="522:17" pos:end="522:19">buf</name><index pos:start="522:20" pos:end="522:26">[<expr pos:start="522:21" pos:end="522:25"><name pos:start="522:21" pos:end="522:23">ret</name><operator pos:start="522:24" pos:end="522:25">++</operator></expr>]</index></name> <operator pos:start="522:28" pos:end="522:28">=</operator> <name pos:start="522:30" pos:end="522:55"><name pos:start="522:30" pos:end="522:37">codebook</name><index pos:start="522:38" pos:end="522:55">[<expr pos:start="522:39" pos:end="522:54"><name pos:start="522:39" pos:end="522:39">y</name> <operator pos:start="522:41" pos:end="522:41">+</operator> <name pos:start="522:43" pos:end="522:43">x</name><operator pos:start="522:44" pos:end="522:44">*</operator><name pos:start="522:45" pos:end="522:54">entry_size</name></expr>]</index></name> <operator pos:start="522:57" pos:end="522:57">^</operator> <operator pos:start="522:59" pos:end="522:59">(</operator><ternary pos:start="522:60" pos:end="522:76"><condition pos:start="522:60" pos:end="522:67"><expr pos:start="522:60" pos:end="522:65"><name pos:start="522:60" pos:end="522:60">y</name> <operator pos:start="522:62" pos:end="522:63">&gt;=</operator> <literal type="number" pos:start="522:65" pos:end="522:65">4</literal></expr> ?</condition><then pos:start="522:69" pos:end="522:72"> <expr pos:start="522:69" pos:end="522:72"><literal type="number" pos:start="522:69" pos:end="522:72">0x80</literal></expr> </then><else pos:start="522:74" pos:end="522:76">: <expr pos:start="522:76" pos:end="522:76"><literal type="number" pos:start="522:76" pos:end="522:76">0</literal></expr></else></ternary><operator pos:start="522:77" pos:end="522:77">)</operator></expr>;</expr_stmt></block_content></block></for></block_content></block></for></block_content></block></else></if_stmt>

    <return pos:start="524:5" pos:end="524:15">return <expr pos:start="524:12" pos:end="524:14"><name pos:start="524:12" pos:end="524:14">ret</name></expr>;</return>
</block_content>}</block></function>

<comment type="line" pos:start="527:1" pos:end="527:53">//sets out to the sub picture starting at (x,y) in in</comment>
<function pos:start="528:1" pos:end="542:1"><type pos:start="528:1" pos:end="528:11"><specifier pos:start="528:1" pos:end="528:6">static</specifier> <name pos:start="528:8" pos:end="528:11">void</name></type> <name pos:start="528:13" pos:end="528:27">get_sub_picture</name><parameter_list pos:start="528:28" pos:end="530:70">(<parameter pos:start="528:29" pos:end="528:48"><decl pos:start="528:29" pos:end="528:48"><type pos:start="528:29" pos:end="528:48"><name pos:start="528:29" pos:end="528:45">CinepakEncContext</name> <modifier pos:start="528:47" pos:end="528:47">*</modifier></type><name pos:start="528:48" pos:end="528:48">s</name></decl></parameter>, <parameter pos:start="528:51" pos:end="528:55"><decl pos:start="528:51" pos:end="528:55"><type pos:start="528:51" pos:end="528:55"><name pos:start="528:51" pos:end="528:53">int</name></type> <name pos:start="528:55" pos:end="528:55">x</name></decl></parameter>, <parameter pos:start="528:58" pos:end="528:62"><decl pos:start="528:58" pos:end="528:62"><type pos:start="528:58" pos:end="528:62"><name pos:start="528:58" pos:end="528:60">int</name></type> <name pos:start="528:62" pos:end="528:62">y</name></decl></parameter>,
                            <parameter pos:start="529:29" pos:end="529:48"><decl pos:start="529:29" pos:end="529:48"><type pos:start="529:29" pos:end="529:45"><name pos:start="529:29" pos:end="529:35">uint8_t</name> <modifier pos:start="529:37" pos:end="529:37">*</modifier></type> <name pos:start="529:39" pos:end="529:48"><name pos:start="529:39" pos:end="529:45">in_data</name><index pos:start="529:46" pos:end="529:48">[<expr pos:start="529:47" pos:end="529:47"><literal type="number" pos:start="529:47" pos:end="529:47">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="529:51" pos:end="529:69"><decl pos:start="529:51" pos:end="529:69"><type pos:start="529:51" pos:end="529:66"><name pos:start="529:51" pos:end="529:53">int</name></type>  <name pos:start="529:56" pos:end="529:69"><name pos:start="529:56" pos:end="529:66">in_linesize</name><index pos:start="529:67" pos:end="529:69">[<expr pos:start="529:68" pos:end="529:68"><literal type="number" pos:start="529:68" pos:end="529:68">4</literal></expr>]</index></name></decl></parameter>,
                            <parameter pos:start="530:29" pos:end="530:48"><decl pos:start="530:29" pos:end="530:48"><type pos:start="530:29" pos:end="530:45"><name pos:start="530:29" pos:end="530:35">uint8_t</name> <modifier pos:start="530:37" pos:end="530:37">*</modifier></type><name pos:start="530:38" pos:end="530:48"><name pos:start="530:38" pos:end="530:45">out_data</name><index pos:start="530:46" pos:end="530:48">[<expr pos:start="530:47" pos:end="530:47"><literal type="number" pos:start="530:47" pos:end="530:47">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="530:51" pos:end="530:69"><decl pos:start="530:51" pos:end="530:69"><type pos:start="530:51" pos:end="530:66"><name pos:start="530:51" pos:end="530:53">int</name></type> <name pos:start="530:55" pos:end="530:69"><name pos:start="530:55" pos:end="530:66">out_linesize</name><index pos:start="530:67" pos:end="530:69">[<expr pos:start="530:68" pos:end="530:68"><literal type="number" pos:start="530:68" pos:end="530:68">4</literal></expr>]</index></name></decl></parameter>)</parameter_list>
<block pos:start="531:1" pos:end="542:1">{<block_content pos:start="532:5" pos:end="541:5">
    <expr_stmt pos:start="532:5" pos:end="532:54"><expr pos:start="532:5" pos:end="532:53"><name pos:start="532:5" pos:end="532:15"><name pos:start="532:5" pos:end="532:12">out_data</name><index pos:start="532:13" pos:end="532:15">[<expr pos:start="532:14" pos:end="532:14"><literal type="number" pos:start="532:14" pos:end="532:14">0</literal></expr>]</index></name> <operator pos:start="532:17" pos:end="532:17">=</operator> <name pos:start="532:19" pos:end="532:28"><name pos:start="532:19" pos:end="532:25">in_data</name><index pos:start="532:26" pos:end="532:28">[<expr pos:start="532:27" pos:end="532:27"><literal type="number" pos:start="532:27" pos:end="532:27">0</literal></expr>]</index></name> <operator pos:start="532:30" pos:end="532:30">+</operator> <name pos:start="532:32" pos:end="532:32">x</name> <operator pos:start="532:34" pos:end="532:34">+</operator> <name pos:start="532:36" pos:end="532:36">y</name> <operator pos:start="532:38" pos:end="532:38">*</operator> <name pos:start="532:40" pos:end="532:53"><name pos:start="532:40" pos:end="532:50">in_linesize</name><index pos:start="532:51" pos:end="532:53">[<expr pos:start="532:52" pos:end="532:52"><literal type="number" pos:start="532:52" pos:end="532:52">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="533:5" pos:end="533:37"><expr pos:start="533:5" pos:end="533:36"><name pos:start="533:5" pos:end="533:19"><name pos:start="533:5" pos:end="533:16">out_linesize</name><index pos:start="533:17" pos:end="533:19">[<expr pos:start="533:18" pos:end="533:18"><literal type="number" pos:start="533:18" pos:end="533:18">0</literal></expr>]</index></name> <operator pos:start="533:21" pos:end="533:21">=</operator> <name pos:start="533:23" pos:end="533:36"><name pos:start="533:23" pos:end="533:33">in_linesize</name><index pos:start="533:34" pos:end="533:36">[<expr pos:start="533:35" pos:end="533:35"><literal type="number" pos:start="533:35" pos:end="533:35">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="535:5" pos:end="541:5"><if pos:start="535:5" pos:end="541:5">if<condition pos:start="535:7" pos:end="535:38">(<expr pos:start="535:8" pos:end="535:37"><name pos:start="535:8" pos:end="535:17"><name pos:start="535:8" pos:end="535:8">s</name><operator pos:start="535:9" pos:end="535:10">-&gt;</operator><name pos:start="535:11" pos:end="535:17">pix_fmt</name></name> <operator pos:start="535:19" pos:end="535:20">==</operator> <name pos:start="535:22" pos:end="535:37">AV_PIX_FMT_RGB24</name></expr>)</condition> <block pos:start="535:40" pos:end="541:5">{<block_content pos:start="536:9" pos:end="540:41">
        <expr_stmt pos:start="536:9" pos:end="536:72"><expr pos:start="536:9" pos:end="536:71"><name pos:start="536:9" pos:end="536:19"><name pos:start="536:9" pos:end="536:16">out_data</name><index pos:start="536:17" pos:end="536:19">[<expr pos:start="536:18" pos:end="536:18"><literal type="number" pos:start="536:18" pos:end="536:18">1</literal></expr>]</index></name> <operator pos:start="536:21" pos:end="536:21">=</operator> <name pos:start="536:23" pos:end="536:32"><name pos:start="536:23" pos:end="536:29">in_data</name><index pos:start="536:30" pos:end="536:32">[<expr pos:start="536:31" pos:end="536:31"><literal type="number" pos:start="536:31" pos:end="536:31">1</literal></expr>]</index></name> <operator pos:start="536:34" pos:end="536:34">+</operator> <operator pos:start="536:36" pos:end="536:36">(</operator><name pos:start="536:37" pos:end="536:37">x</name> <operator pos:start="536:39" pos:end="536:40">&gt;&gt;</operator> <literal type="number" pos:start="536:42" pos:end="536:42">1</literal><operator pos:start="536:43" pos:end="536:43">)</operator> <operator pos:start="536:45" pos:end="536:45">+</operator> <operator pos:start="536:47" pos:end="536:47">(</operator><name pos:start="536:48" pos:end="536:48">y</name> <operator pos:start="536:50" pos:end="536:51">&gt;&gt;</operator> <literal type="number" pos:start="536:53" pos:end="536:53">1</literal><operator pos:start="536:54" pos:end="536:54">)</operator> <operator pos:start="536:56" pos:end="536:56">*</operator> <name pos:start="536:58" pos:end="536:71"><name pos:start="536:58" pos:end="536:68">in_linesize</name><index pos:start="536:69" pos:end="536:71">[<expr pos:start="536:70" pos:end="536:70"><literal type="number" pos:start="536:70" pos:end="536:70">1</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="537:9" pos:end="537:41"><expr pos:start="537:9" pos:end="537:40"><name pos:start="537:9" pos:end="537:23"><name pos:start="537:9" pos:end="537:20">out_linesize</name><index pos:start="537:21" pos:end="537:23">[<expr pos:start="537:22" pos:end="537:22"><literal type="number" pos:start="537:22" pos:end="537:22">1</literal></expr>]</index></name> <operator pos:start="537:25" pos:end="537:25">=</operator> <name pos:start="537:27" pos:end="537:40"><name pos:start="537:27" pos:end="537:37">in_linesize</name><index pos:start="537:38" pos:end="537:40">[<expr pos:start="537:39" pos:end="537:39"><literal type="number" pos:start="537:39" pos:end="537:39">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="539:9" pos:end="539:72"><expr pos:start="539:9" pos:end="539:71"><name pos:start="539:9" pos:end="539:19"><name pos:start="539:9" pos:end="539:16">out_data</name><index pos:start="539:17" pos:end="539:19">[<expr pos:start="539:18" pos:end="539:18"><literal type="number" pos:start="539:18" pos:end="539:18">2</literal></expr>]</index></name> <operator pos:start="539:21" pos:end="539:21">=</operator> <name pos:start="539:23" pos:end="539:32"><name pos:start="539:23" pos:end="539:29">in_data</name><index pos:start="539:30" pos:end="539:32">[<expr pos:start="539:31" pos:end="539:31"><literal type="number" pos:start="539:31" pos:end="539:31">2</literal></expr>]</index></name> <operator pos:start="539:34" pos:end="539:34">+</operator> <operator pos:start="539:36" pos:end="539:36">(</operator><name pos:start="539:37" pos:end="539:37">x</name> <operator pos:start="539:39" pos:end="539:40">&gt;&gt;</operator> <literal type="number" pos:start="539:42" pos:end="539:42">1</literal><operator pos:start="539:43" pos:end="539:43">)</operator> <operator pos:start="539:45" pos:end="539:45">+</operator> <operator pos:start="539:47" pos:end="539:47">(</operator><name pos:start="539:48" pos:end="539:48">y</name> <operator pos:start="539:50" pos:end="539:51">&gt;&gt;</operator> <literal type="number" pos:start="539:53" pos:end="539:53">1</literal><operator pos:start="539:54" pos:end="539:54">)</operator> <operator pos:start="539:56" pos:end="539:56">*</operator> <name pos:start="539:58" pos:end="539:71"><name pos:start="539:58" pos:end="539:68">in_linesize</name><index pos:start="539:69" pos:end="539:71">[<expr pos:start="539:70" pos:end="539:70"><literal type="number" pos:start="539:70" pos:end="539:70">2</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="540:9" pos:end="540:41"><expr pos:start="540:9" pos:end="540:40"><name pos:start="540:9" pos:end="540:23"><name pos:start="540:9" pos:end="540:20">out_linesize</name><index pos:start="540:21" pos:end="540:23">[<expr pos:start="540:22" pos:end="540:22"><literal type="number" pos:start="540:22" pos:end="540:22">2</literal></expr>]</index></name> <operator pos:start="540:25" pos:end="540:25">=</operator> <name pos:start="540:27" pos:end="540:40"><name pos:start="540:27" pos:end="540:37">in_linesize</name><index pos:start="540:38" pos:end="540:40">[<expr pos:start="540:39" pos:end="540:39"><literal type="number" pos:start="540:39" pos:end="540:39">2</literal></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<comment type="line" pos:start="544:1" pos:end="544:64">//decodes the V1 vector in mb into the 4x4 MB pointed to by data</comment>
<function pos:start="545:1" pos:end="581:1"><type pos:start="545:1" pos:end="545:11"><specifier pos:start="545:1" pos:end="545:6">static</specifier> <name pos:start="545:8" pos:end="545:11">void</name></type> <name pos:start="545:13" pos:end="545:28">decode_v1_vector</name><parameter_list pos:start="545:29" pos:end="546:78">(<parameter pos:start="545:30" pos:end="545:49"><decl pos:start="545:30" pos:end="545:49"><type pos:start="545:30" pos:end="545:49"><name pos:start="545:30" pos:end="545:46">CinepakEncContext</name> <modifier pos:start="545:48" pos:end="545:48">*</modifier></type><name pos:start="545:49" pos:end="545:49">s</name></decl></parameter>, <parameter pos:start="545:52" pos:end="545:67"><decl pos:start="545:52" pos:end="545:67"><type pos:start="545:52" pos:end="545:64"><name pos:start="545:52" pos:end="545:58">uint8_t</name> <modifier pos:start="545:60" pos:end="545:60">*</modifier></type><name pos:start="545:61" pos:end="545:67"><name pos:start="545:61" pos:end="545:64">data</name><index pos:start="545:65" pos:end="545:67">[<expr pos:start="545:66" pos:end="545:66"><literal type="number" pos:start="545:66" pos:end="545:66">4</literal></expr>]</index></name></decl></parameter>,
                             <parameter pos:start="546:30" pos:end="546:44"><decl pos:start="546:30" pos:end="546:44"><type pos:start="546:30" pos:end="546:41"><name pos:start="546:30" pos:end="546:32">int</name></type> <name pos:start="546:34" pos:end="546:44"><name pos:start="546:34" pos:end="546:41">linesize</name><index pos:start="546:42" pos:end="546:44">[<expr pos:start="546:43" pos:end="546:43"><literal type="number" pos:start="546:43" pos:end="546:43">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="546:47" pos:end="546:59"><decl pos:start="546:47" pos:end="546:59"><type pos:start="546:47" pos:end="546:59"><name pos:start="546:47" pos:end="546:49">int</name></type> <name pos:start="546:51" pos:end="546:59">v1_vector</name></decl></parameter>, <parameter pos:start="546:62" pos:end="546:77"><decl pos:start="546:62" pos:end="546:77"><type pos:start="546:62" pos:end="546:77"><name pos:start="546:62" pos:end="546:71">strip_info</name> <modifier pos:start="546:73" pos:end="546:73">*</modifier></type><name pos:start="546:74" pos:end="546:77">info</name></decl></parameter>)</parameter_list>
<block pos:start="547:1" pos:end="581:1">{<block_content pos:start="548:5" pos:end="580:5">
    <decl_stmt pos:start="548:5" pos:end="548:60"><decl pos:start="548:5" pos:end="548:59"><type pos:start="548:5" pos:end="548:7"><name pos:start="548:5" pos:end="548:7">int</name></type> <name pos:start="548:9" pos:end="548:18">entry_size</name> <init pos:start="548:20" pos:end="548:59">= <expr pos:start="548:22" pos:end="548:59"><ternary pos:start="548:22" pos:end="548:59"><condition pos:start="548:22" pos:end="548:53"><expr pos:start="548:22" pos:end="548:51"><name pos:start="548:22" pos:end="548:31"><name pos:start="548:22" pos:end="548:22">s</name><operator pos:start="548:23" pos:end="548:24">-&gt;</operator><name pos:start="548:25" pos:end="548:31">pix_fmt</name></name> <operator pos:start="548:33" pos:end="548:34">==</operator> <name pos:start="548:36" pos:end="548:51">AV_PIX_FMT_RGB24</name></expr> ?</condition><then pos:start="548:55" pos:end="548:55"> <expr pos:start="548:55" pos:end="548:55"><literal type="number" pos:start="548:55" pos:end="548:55">6</literal></expr> </then><else pos:start="548:57" pos:end="548:59">: <expr pos:start="548:59" pos:end="548:59"><literal type="number" pos:start="548:59" pos:end="548:59">4</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="550:5" pos:end="553:79"><expr pos:start="550:5" pos:end="553:78"><name pos:start="550:5" pos:end="550:14"><name pos:start="550:5" pos:end="550:8">data</name><index pos:start="550:9" pos:end="550:11">[<expr pos:start="550:10" pos:end="550:10"><literal type="number" pos:start="550:10" pos:end="550:10">0</literal></expr>]</index><index pos:start="550:12" pos:end="550:14">[<expr pos:start="550:13" pos:end="550:13"><literal type="number" pos:start="550:13" pos:end="550:13">0</literal></expr>]</index></name> <operator pos:start="550:16" pos:end="550:16">=</operator>
            <name pos:start="551:13" pos:end="551:22"><name pos:start="551:13" pos:end="551:16">data</name><index pos:start="551:17" pos:end="551:19">[<expr pos:start="551:18" pos:end="551:18"><literal type="number" pos:start="551:18" pos:end="551:18">0</literal></expr>]</index><index pos:start="551:20" pos:end="551:22">[<expr pos:start="551:21" pos:end="551:21"><literal type="number" pos:start="551:21" pos:end="551:21">1</literal></expr>]</index></name> <operator pos:start="551:24" pos:end="551:24">=</operator>
            <name pos:start="552:13" pos:end="552:36"><name pos:start="552:13" pos:end="552:16">data</name><index pos:start="552:17" pos:end="552:19">[<expr pos:start="552:18" pos:end="552:18"><literal type="number" pos:start="552:18" pos:end="552:18">0</literal></expr>]</index><index pos:start="552:20" pos:end="552:36">[    <expr pos:start="552:25" pos:end="552:35"><name pos:start="552:25" pos:end="552:35"><name pos:start="552:25" pos:end="552:32">linesize</name><index pos:start="552:33" pos:end="552:35">[<expr pos:start="552:34" pos:end="552:34"><literal type="number" pos:start="552:34" pos:end="552:34">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="552:38" pos:end="552:38">=</operator>
            <name pos:start="553:13" pos:end="553:36"><name pos:start="553:13" pos:end="553:16">data</name><index pos:start="553:17" pos:end="553:19">[<expr pos:start="553:18" pos:end="553:18"><literal type="number" pos:start="553:18" pos:end="553:18">0</literal></expr>]</index><index pos:start="553:20" pos:end="553:36">[<expr pos:start="553:21" pos:end="553:35"><literal type="number" pos:start="553:21" pos:end="553:22">1</literal><operator pos:start="553:22" pos:end="553:22">+</operator>  <name pos:start="553:25" pos:end="553:35"><name pos:start="553:25" pos:end="553:32">linesize</name><index pos:start="553:33" pos:end="553:35">[<expr pos:start="553:34" pos:end="553:34"><literal type="number" pos:start="553:34" pos:end="553:34">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="553:38" pos:end="553:38">=</operator> <name pos:start="553:40" pos:end="553:78"><name pos:start="553:40" pos:end="553:43">info</name><operator pos:start="553:44" pos:end="553:45">-&gt;</operator><name pos:start="553:46" pos:end="553:56">v1_codebook</name><index pos:start="553:57" pos:end="553:78">[<expr pos:start="553:58" pos:end="553:77"><name pos:start="553:58" pos:end="553:66">v1_vector</name><operator pos:start="553:67" pos:end="553:67">*</operator><name pos:start="553:68" pos:end="553:77">entry_size</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="555:5" pos:end="558:81"><expr pos:start="555:5" pos:end="558:80"><name pos:start="555:5" pos:end="555:14"><name pos:start="555:5" pos:end="555:8">data</name><index pos:start="555:9" pos:end="555:11">[<expr pos:start="555:10" pos:end="555:10"><literal type="number" pos:start="555:10" pos:end="555:10">0</literal></expr>]</index><index pos:start="555:12" pos:end="555:14">[<expr pos:start="555:13" pos:end="555:13"><literal type="number" pos:start="555:13" pos:end="555:13">2</literal></expr>]</index></name> <operator pos:start="555:16" pos:end="555:16">=</operator>
            <name pos:start="556:13" pos:end="556:22"><name pos:start="556:13" pos:end="556:16">data</name><index pos:start="556:17" pos:end="556:19">[<expr pos:start="556:18" pos:end="556:18"><literal type="number" pos:start="556:18" pos:end="556:18">0</literal></expr>]</index><index pos:start="556:20" pos:end="556:22">[<expr pos:start="556:21" pos:end="556:21"><literal type="number" pos:start="556:21" pos:end="556:21">3</literal></expr>]</index></name> <operator pos:start="556:24" pos:end="556:24">=</operator>
            <name pos:start="557:13" pos:end="557:36"><name pos:start="557:13" pos:end="557:16">data</name><index pos:start="557:17" pos:end="557:19">[<expr pos:start="557:18" pos:end="557:18"><literal type="number" pos:start="557:18" pos:end="557:18">0</literal></expr>]</index><index pos:start="557:20" pos:end="557:36">[<expr pos:start="557:21" pos:end="557:35"><literal type="number" pos:start="557:21" pos:end="557:22">2</literal><operator pos:start="557:22" pos:end="557:22">+</operator>  <name pos:start="557:25" pos:end="557:35"><name pos:start="557:25" pos:end="557:32">linesize</name><index pos:start="557:33" pos:end="557:35">[<expr pos:start="557:34" pos:end="557:34"><literal type="number" pos:start="557:34" pos:end="557:34">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="557:38" pos:end="557:38">=</operator>
            <name pos:start="558:13" pos:end="558:36"><name pos:start="558:13" pos:end="558:16">data</name><index pos:start="558:17" pos:end="558:19">[<expr pos:start="558:18" pos:end="558:18"><literal type="number" pos:start="558:18" pos:end="558:18">0</literal></expr>]</index><index pos:start="558:20" pos:end="558:36">[<expr pos:start="558:21" pos:end="558:35"><literal type="number" pos:start="558:21" pos:end="558:22">3</literal><operator pos:start="558:22" pos:end="558:22">+</operator>  <name pos:start="558:25" pos:end="558:35"><name pos:start="558:25" pos:end="558:32">linesize</name><index pos:start="558:33" pos:end="558:35">[<expr pos:start="558:34" pos:end="558:34"><literal type="number" pos:start="558:34" pos:end="558:34">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="558:38" pos:end="558:38">=</operator> <name pos:start="558:40" pos:end="558:80"><name pos:start="558:40" pos:end="558:43">info</name><operator pos:start="558:44" pos:end="558:45">-&gt;</operator><name pos:start="558:46" pos:end="558:56">v1_codebook</name><index pos:start="558:57" pos:end="558:80">[<expr pos:start="558:58" pos:end="558:79"><name pos:start="558:58" pos:end="558:66">v1_vector</name><operator pos:start="558:67" pos:end="558:67">*</operator><name pos:start="558:68" pos:end="558:77">entry_size</name><operator pos:start="558:78" pos:end="558:78">+</operator><literal type="number" pos:start="558:79" pos:end="558:79">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="560:5" pos:end="563:81"><expr pos:start="560:5" pos:end="563:80"><name pos:start="560:5" pos:end="560:26"><name pos:start="560:5" pos:end="560:8">data</name><index pos:start="560:9" pos:end="560:11">[<expr pos:start="560:10" pos:end="560:10"><literal type="number" pos:start="560:10" pos:end="560:10">0</literal></expr>]</index><index pos:start="560:12" pos:end="560:26">[<expr pos:start="560:13" pos:end="560:25"><literal type="number" pos:start="560:13" pos:end="560:13">2</literal><operator pos:start="560:14" pos:end="560:14">*</operator><name pos:start="560:15" pos:end="560:25"><name pos:start="560:15" pos:end="560:22">linesize</name><index pos:start="560:23" pos:end="560:25">[<expr pos:start="560:24" pos:end="560:24"><literal type="number" pos:start="560:24" pos:end="560:24">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="560:28" pos:end="560:28">=</operator>
            <name pos:start="561:13" pos:end="561:36"><name pos:start="561:13" pos:end="561:16">data</name><index pos:start="561:17" pos:end="561:19">[<expr pos:start="561:18" pos:end="561:18"><literal type="number" pos:start="561:18" pos:end="561:18">0</literal></expr>]</index><index pos:start="561:20" pos:end="561:36">[<expr pos:start="561:21" pos:end="561:35"><literal type="number" pos:start="561:21" pos:end="561:22">1</literal><operator pos:start="561:22" pos:end="561:22">+</operator><literal type="number" pos:start="561:23" pos:end="561:23">2</literal><operator pos:start="561:24" pos:end="561:24">*</operator><name pos:start="561:25" pos:end="561:35"><name pos:start="561:25" pos:end="561:32">linesize</name><index pos:start="561:33" pos:end="561:35">[<expr pos:start="561:34" pos:end="561:34"><literal type="number" pos:start="561:34" pos:end="561:34">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="561:38" pos:end="561:38">=</operator>
            <name pos:start="562:13" pos:end="562:36"><name pos:start="562:13" pos:end="562:16">data</name><index pos:start="562:17" pos:end="562:19">[<expr pos:start="562:18" pos:end="562:18"><literal type="number" pos:start="562:18" pos:end="562:18">0</literal></expr>]</index><index pos:start="562:20" pos:end="562:36">[  <expr pos:start="562:23" pos:end="562:35"><literal type="number" pos:start="562:23" pos:end="562:23">3</literal><operator pos:start="562:24" pos:end="562:24">*</operator><name pos:start="562:25" pos:end="562:35"><name pos:start="562:25" pos:end="562:32">linesize</name><index pos:start="562:33" pos:end="562:35">[<expr pos:start="562:34" pos:end="562:34"><literal type="number" pos:start="562:34" pos:end="562:34">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="562:38" pos:end="562:38">=</operator>
            <name pos:start="563:13" pos:end="563:36"><name pos:start="563:13" pos:end="563:16">data</name><index pos:start="563:17" pos:end="563:19">[<expr pos:start="563:18" pos:end="563:18"><literal type="number" pos:start="563:18" pos:end="563:18">0</literal></expr>]</index><index pos:start="563:20" pos:end="563:36">[<expr pos:start="563:21" pos:end="563:35"><literal type="number" pos:start="563:21" pos:end="563:22">1</literal><operator pos:start="563:22" pos:end="563:22">+</operator><literal type="number" pos:start="563:23" pos:end="563:23">3</literal><operator pos:start="563:24" pos:end="563:24">*</operator><name pos:start="563:25" pos:end="563:35"><name pos:start="563:25" pos:end="563:32">linesize</name><index pos:start="563:33" pos:end="563:35">[<expr pos:start="563:34" pos:end="563:34"><literal type="number" pos:start="563:34" pos:end="563:34">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="563:38" pos:end="563:38">=</operator> <name pos:start="563:40" pos:end="563:80"><name pos:start="563:40" pos:end="563:43">info</name><operator pos:start="563:44" pos:end="563:45">-&gt;</operator><name pos:start="563:46" pos:end="563:56">v1_codebook</name><index pos:start="563:57" pos:end="563:80">[<expr pos:start="563:58" pos:end="563:79"><name pos:start="563:58" pos:end="563:66">v1_vector</name><operator pos:start="563:67" pos:end="563:67">*</operator><name pos:start="563:68" pos:end="563:77">entry_size</name><operator pos:start="563:78" pos:end="563:78">+</operator><literal type="number" pos:start="563:79" pos:end="563:79">2</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="565:5" pos:end="568:81"><expr pos:start="565:5" pos:end="568:80"><name pos:start="565:5" pos:end="565:28"><name pos:start="565:5" pos:end="565:8">data</name><index pos:start="565:9" pos:end="565:11">[<expr pos:start="565:10" pos:end="565:10"><literal type="number" pos:start="565:10" pos:end="565:10">0</literal></expr>]</index><index pos:start="565:12" pos:end="565:28">[<expr pos:start="565:13" pos:end="565:27"><literal type="number" pos:start="565:13" pos:end="565:13">2</literal><operator pos:start="565:14" pos:end="565:14">+</operator><literal type="number" pos:start="565:15" pos:end="565:15">2</literal><operator pos:start="565:16" pos:end="565:16">*</operator><name pos:start="565:17" pos:end="565:27"><name pos:start="565:17" pos:end="565:24">linesize</name><index pos:start="565:25" pos:end="565:27">[<expr pos:start="565:26" pos:end="565:26"><literal type="number" pos:start="565:26" pos:end="565:26">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="565:30" pos:end="565:30">=</operator>
            <name pos:start="566:13" pos:end="566:36"><name pos:start="566:13" pos:end="566:16">data</name><index pos:start="566:17" pos:end="566:19">[<expr pos:start="566:18" pos:end="566:18"><literal type="number" pos:start="566:18" pos:end="566:18">0</literal></expr>]</index><index pos:start="566:20" pos:end="566:36">[<expr pos:start="566:21" pos:end="566:35"><literal type="number" pos:start="566:21" pos:end="566:22">3</literal><operator pos:start="566:22" pos:end="566:22">+</operator><literal type="number" pos:start="566:23" pos:end="566:23">2</literal><operator pos:start="566:24" pos:end="566:24">*</operator><name pos:start="566:25" pos:end="566:35"><name pos:start="566:25" pos:end="566:32">linesize</name><index pos:start="566:33" pos:end="566:35">[<expr pos:start="566:34" pos:end="566:34"><literal type="number" pos:start="566:34" pos:end="566:34">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="566:38" pos:end="566:38">=</operator>
            <name pos:start="567:13" pos:end="567:36"><name pos:start="567:13" pos:end="567:16">data</name><index pos:start="567:17" pos:end="567:19">[<expr pos:start="567:18" pos:end="567:18"><literal type="number" pos:start="567:18" pos:end="567:18">0</literal></expr>]</index><index pos:start="567:20" pos:end="567:36">[<expr pos:start="567:21" pos:end="567:35"><literal type="number" pos:start="567:21" pos:end="567:22">2</literal><operator pos:start="567:22" pos:end="567:22">+</operator><literal type="number" pos:start="567:23" pos:end="567:23">3</literal><operator pos:start="567:24" pos:end="567:24">*</operator><name pos:start="567:25" pos:end="567:35"><name pos:start="567:25" pos:end="567:32">linesize</name><index pos:start="567:33" pos:end="567:35">[<expr pos:start="567:34" pos:end="567:34"><literal type="number" pos:start="567:34" pos:end="567:34">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="567:38" pos:end="567:38">=</operator>
            <name pos:start="568:13" pos:end="568:36"><name pos:start="568:13" pos:end="568:16">data</name><index pos:start="568:17" pos:end="568:19">[<expr pos:start="568:18" pos:end="568:18"><literal type="number" pos:start="568:18" pos:end="568:18">0</literal></expr>]</index><index pos:start="568:20" pos:end="568:36">[<expr pos:start="568:21" pos:end="568:35"><literal type="number" pos:start="568:21" pos:end="568:22">3</literal><operator pos:start="568:22" pos:end="568:22">+</operator><literal type="number" pos:start="568:23" pos:end="568:23">3</literal><operator pos:start="568:24" pos:end="568:24">*</operator><name pos:start="568:25" pos:end="568:35"><name pos:start="568:25" pos:end="568:32">linesize</name><index pos:start="568:33" pos:end="568:35">[<expr pos:start="568:34" pos:end="568:34"><literal type="number" pos:start="568:34" pos:end="568:34">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="568:38" pos:end="568:38">=</operator> <name pos:start="568:40" pos:end="568:80"><name pos:start="568:40" pos:end="568:43">info</name><operator pos:start="568:44" pos:end="568:45">-&gt;</operator><name pos:start="568:46" pos:end="568:56">v1_codebook</name><index pos:start="568:57" pos:end="568:80">[<expr pos:start="568:58" pos:end="568:79"><name pos:start="568:58" pos:end="568:66">v1_vector</name><operator pos:start="568:67" pos:end="568:67">*</operator><name pos:start="568:68" pos:end="568:77">entry_size</name><operator pos:start="568:78" pos:end="568:78">+</operator><literal type="number" pos:start="568:79" pos:end="568:79">3</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="570:5" pos:end="580:5"><if pos:start="570:5" pos:end="580:5">if<condition pos:start="570:7" pos:end="570:38">(<expr pos:start="570:8" pos:end="570:37"><name pos:start="570:8" pos:end="570:17"><name pos:start="570:8" pos:end="570:8">s</name><operator pos:start="570:9" pos:end="570:10">-&gt;</operator><name pos:start="570:11" pos:end="570:17">pix_fmt</name></name> <operator pos:start="570:19" pos:end="570:20">==</operator> <name pos:start="570:22" pos:end="570:37">AV_PIX_FMT_RGB24</name></expr>)</condition> <block pos:start="570:40" pos:end="580:5">{<block_content pos:start="571:9" pos:end="579:81">
        <expr_stmt pos:start="571:9" pos:end="574:81"><expr pos:start="571:9" pos:end="574:80"><name pos:start="571:9" pos:end="571:18"><name pos:start="571:9" pos:end="571:12">data</name><index pos:start="571:13" pos:end="571:15">[<expr pos:start="571:14" pos:end="571:14"><literal type="number" pos:start="571:14" pos:end="571:14">1</literal></expr>]</index><index pos:start="571:16" pos:end="571:18">[<expr pos:start="571:17" pos:end="571:17"><literal type="number" pos:start="571:17" pos:end="571:17">0</literal></expr>]</index></name> <operator pos:start="571:20" pos:end="571:20">=</operator>
            <name pos:start="572:13" pos:end="572:22"><name pos:start="572:13" pos:end="572:16">data</name><index pos:start="572:17" pos:end="572:19">[<expr pos:start="572:18" pos:end="572:18"><literal type="number" pos:start="572:18" pos:end="572:18">1</literal></expr>]</index><index pos:start="572:20" pos:end="572:22">[<expr pos:start="572:21" pos:end="572:21"><literal type="number" pos:start="572:21" pos:end="572:21">1</literal></expr>]</index></name> <operator pos:start="572:24" pos:end="572:24">=</operator>
            <name pos:start="573:13" pos:end="573:36"><name pos:start="573:13" pos:end="573:16">data</name><index pos:start="573:17" pos:end="573:19">[<expr pos:start="573:18" pos:end="573:18"><literal type="number" pos:start="573:18" pos:end="573:18">1</literal></expr>]</index><index pos:start="573:20" pos:end="573:36">[    <expr pos:start="573:25" pos:end="573:35"><name pos:start="573:25" pos:end="573:35"><name pos:start="573:25" pos:end="573:32">linesize</name><index pos:start="573:33" pos:end="573:35">[<expr pos:start="573:34" pos:end="573:34"><literal type="number" pos:start="573:34" pos:end="573:34">1</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="573:38" pos:end="573:38">=</operator>
            <name pos:start="574:13" pos:end="574:36"><name pos:start="574:13" pos:end="574:16">data</name><index pos:start="574:17" pos:end="574:19">[<expr pos:start="574:18" pos:end="574:18"><literal type="number" pos:start="574:18" pos:end="574:18">1</literal></expr>]</index><index pos:start="574:20" pos:end="574:36">[<expr pos:start="574:21" pos:end="574:35"><literal type="number" pos:start="574:21" pos:end="574:22">1</literal><operator pos:start="574:22" pos:end="574:22">+</operator>  <name pos:start="574:25" pos:end="574:35"><name pos:start="574:25" pos:end="574:32">linesize</name><index pos:start="574:33" pos:end="574:35">[<expr pos:start="574:34" pos:end="574:34"><literal type="number" pos:start="574:34" pos:end="574:34">1</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="574:38" pos:end="574:38">=</operator> <name pos:start="574:40" pos:end="574:80"><name pos:start="574:40" pos:end="574:43">info</name><operator pos:start="574:44" pos:end="574:45">-&gt;</operator><name pos:start="574:46" pos:end="574:56">v1_codebook</name><index pos:start="574:57" pos:end="574:80">[<expr pos:start="574:58" pos:end="574:79"><name pos:start="574:58" pos:end="574:66">v1_vector</name><operator pos:start="574:67" pos:end="574:67">*</operator><name pos:start="574:68" pos:end="574:77">entry_size</name><operator pos:start="574:78" pos:end="574:78">+</operator><literal type="number" pos:start="574:79" pos:end="574:79">4</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="576:9" pos:end="579:81"><expr pos:start="576:9" pos:end="579:80"><name pos:start="576:9" pos:end="576:18"><name pos:start="576:9" pos:end="576:12">data</name><index pos:start="576:13" pos:end="576:15">[<expr pos:start="576:14" pos:end="576:14"><literal type="number" pos:start="576:14" pos:end="576:14">2</literal></expr>]</index><index pos:start="576:16" pos:end="576:18">[<expr pos:start="576:17" pos:end="576:17"><literal type="number" pos:start="576:17" pos:end="576:17">0</literal></expr>]</index></name> <operator pos:start="576:20" pos:end="576:20">=</operator>
            <name pos:start="577:13" pos:end="577:22"><name pos:start="577:13" pos:end="577:16">data</name><index pos:start="577:17" pos:end="577:19">[<expr pos:start="577:18" pos:end="577:18"><literal type="number" pos:start="577:18" pos:end="577:18">2</literal></expr>]</index><index pos:start="577:20" pos:end="577:22">[<expr pos:start="577:21" pos:end="577:21"><literal type="number" pos:start="577:21" pos:end="577:21">1</literal></expr>]</index></name> <operator pos:start="577:24" pos:end="577:24">=</operator>
            <name pos:start="578:13" pos:end="578:36"><name pos:start="578:13" pos:end="578:16">data</name><index pos:start="578:17" pos:end="578:19">[<expr pos:start="578:18" pos:end="578:18"><literal type="number" pos:start="578:18" pos:end="578:18">2</literal></expr>]</index><index pos:start="578:20" pos:end="578:36">[    <expr pos:start="578:25" pos:end="578:35"><name pos:start="578:25" pos:end="578:35"><name pos:start="578:25" pos:end="578:32">linesize</name><index pos:start="578:33" pos:end="578:35">[<expr pos:start="578:34" pos:end="578:34"><literal type="number" pos:start="578:34" pos:end="578:34">2</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="578:38" pos:end="578:38">=</operator>
            <name pos:start="579:13" pos:end="579:36"><name pos:start="579:13" pos:end="579:16">data</name><index pos:start="579:17" pos:end="579:19">[<expr pos:start="579:18" pos:end="579:18"><literal type="number" pos:start="579:18" pos:end="579:18">2</literal></expr>]</index><index pos:start="579:20" pos:end="579:36">[<expr pos:start="579:21" pos:end="579:35"><literal type="number" pos:start="579:21" pos:end="579:22">1</literal><operator pos:start="579:22" pos:end="579:22">+</operator>  <name pos:start="579:25" pos:end="579:35"><name pos:start="579:25" pos:end="579:32">linesize</name><index pos:start="579:33" pos:end="579:35">[<expr pos:start="579:34" pos:end="579:34"><literal type="number" pos:start="579:34" pos:end="579:34">2</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="579:38" pos:end="579:38">=</operator> <name pos:start="579:40" pos:end="579:80"><name pos:start="579:40" pos:end="579:43">info</name><operator pos:start="579:44" pos:end="579:45">-&gt;</operator><name pos:start="579:46" pos:end="579:56">v1_codebook</name><index pos:start="579:57" pos:end="579:80">[<expr pos:start="579:58" pos:end="579:79"><name pos:start="579:58" pos:end="579:66">v1_vector</name><operator pos:start="579:67" pos:end="579:67">*</operator><name pos:start="579:68" pos:end="579:77">entry_size</name><operator pos:start="579:78" pos:end="579:78">+</operator><literal type="number" pos:start="579:79" pos:end="579:79">5</literal></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<comment type="line" pos:start="583:1" pos:end="583:65">//decodes the V4 vectors in mb into the 4x4 MB pointed to by data</comment>
<function pos:start="584:1" pos:end="602:1"><type pos:start="584:1" pos:end="584:11"><specifier pos:start="584:1" pos:end="584:6">static</specifier> <name pos:start="584:8" pos:end="584:11">void</name></type> <name pos:start="584:13" pos:end="584:28">decode_v4_vector</name><parameter_list pos:start="584:29" pos:end="585:79">(<parameter pos:start="584:30" pos:end="584:49"><decl pos:start="584:30" pos:end="584:49"><type pos:start="584:30" pos:end="584:49"><name pos:start="584:30" pos:end="584:46">CinepakEncContext</name> <modifier pos:start="584:48" pos:end="584:48">*</modifier></type><name pos:start="584:49" pos:end="584:49">s</name></decl></parameter>, <parameter pos:start="584:52" pos:end="584:67"><decl pos:start="584:52" pos:end="584:67"><type pos:start="584:52" pos:end="584:64"><name pos:start="584:52" pos:end="584:58">uint8_t</name> <modifier pos:start="584:60" pos:end="584:60">*</modifier></type><name pos:start="584:61" pos:end="584:67"><name pos:start="584:61" pos:end="584:64">data</name><index pos:start="584:65" pos:end="584:67">[<expr pos:start="584:66" pos:end="584:66"><literal type="number" pos:start="584:66" pos:end="584:66">4</literal></expr>]</index></name></decl></parameter>,
                             <parameter pos:start="585:30" pos:end="585:44"><decl pos:start="585:30" pos:end="585:44"><type pos:start="585:30" pos:end="585:41"><name pos:start="585:30" pos:end="585:32">int</name></type> <name pos:start="585:34" pos:end="585:44"><name pos:start="585:34" pos:end="585:41">linesize</name><index pos:start="585:42" pos:end="585:44">[<expr pos:start="585:43" pos:end="585:43"><literal type="number" pos:start="585:43" pos:end="585:43">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="585:47" pos:end="585:60"><decl pos:start="585:47" pos:end="585:60"><type pos:start="585:47" pos:end="585:60"><name pos:start="585:47" pos:end="585:49">int</name> <modifier pos:start="585:51" pos:end="585:51">*</modifier></type><name pos:start="585:52" pos:end="585:60">v4_vector</name></decl></parameter>, <parameter pos:start="585:63" pos:end="585:78"><decl pos:start="585:63" pos:end="585:78"><type pos:start="585:63" pos:end="585:78"><name pos:start="585:63" pos:end="585:72">strip_info</name> <modifier pos:start="585:74" pos:end="585:74">*</modifier></type><name pos:start="585:75" pos:end="585:78">info</name></decl></parameter>)</parameter_list>
<block pos:start="586:1" pos:end="602:1">{<block_content pos:start="587:5" pos:end="601:5">
    <decl_stmt pos:start="587:5" pos:end="587:69"><decl pos:start="587:5" pos:end="587:9"><type pos:start="587:5" pos:end="587:7"><name pos:start="587:5" pos:end="587:7">int</name></type> <name pos:start="587:9" pos:end="587:9">i</name></decl>, <decl pos:start="587:12" pos:end="587:12"><type ref="prev" pos:start="587:5" pos:end="587:7"/><name pos:start="587:12" pos:end="587:12">x</name></decl>, <decl pos:start="587:15" pos:end="587:15"><type ref="prev" pos:start="587:5" pos:end="587:7"/><name pos:start="587:15" pos:end="587:15">y</name></decl>, <decl pos:start="587:18" pos:end="587:68"><type ref="prev" pos:start="587:5" pos:end="587:7"/><name pos:start="587:18" pos:end="587:27">entry_size</name> <init pos:start="587:29" pos:end="587:68">= <expr pos:start="587:31" pos:end="587:68"><ternary pos:start="587:31" pos:end="587:68"><condition pos:start="587:31" pos:end="587:62"><expr pos:start="587:31" pos:end="587:60"><name pos:start="587:31" pos:end="587:40"><name pos:start="587:31" pos:end="587:31">s</name><operator pos:start="587:32" pos:end="587:33">-&gt;</operator><name pos:start="587:34" pos:end="587:40">pix_fmt</name></name> <operator pos:start="587:42" pos:end="587:43">==</operator> <name pos:start="587:45" pos:end="587:60">AV_PIX_FMT_RGB24</name></expr> ?</condition><then pos:start="587:64" pos:end="587:64"> <expr pos:start="587:64" pos:end="587:64"><literal type="number" pos:start="587:64" pos:end="587:64">6</literal></expr> </then><else pos:start="587:66" pos:end="587:68">: <expr pos:start="587:68" pos:end="587:68"><literal type="number" pos:start="587:68" pos:end="587:68">4</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <for pos:start="589:5" pos:end="601:5">for<control pos:start="589:8" pos:end="589:33">(<init pos:start="589:9" pos:end="589:18"><expr pos:start="589:9" pos:end="589:17"><name pos:start="589:9" pos:end="589:9">i</name> <operator pos:start="589:11" pos:end="589:11">=</operator> <name pos:start="589:13" pos:end="589:13">y</name> <operator pos:start="589:15" pos:end="589:15">=</operator> <literal type="number" pos:start="589:17" pos:end="589:17">0</literal></expr>;</init> <condition pos:start="589:20" pos:end="589:25"><expr pos:start="589:20" pos:end="589:24"><name pos:start="589:20" pos:end="589:20">y</name> <operator pos:start="589:22" pos:end="589:22">&lt;</operator> <literal type="number" pos:start="589:24" pos:end="589:24">4</literal></expr>;</condition> <incr pos:start="589:27" pos:end="589:32"><expr pos:start="589:27" pos:end="589:32"><name pos:start="589:27" pos:end="589:27">y</name> <operator pos:start="589:29" pos:end="589:30">+=</operator> <literal type="number" pos:start="589:32" pos:end="589:32">2</literal></expr></incr>)</control> <block pos:start="589:35" pos:end="601:5">{<block_content pos:start="590:9" pos:end="600:9">
        <for pos:start="590:9" pos:end="600:9">for<control pos:start="590:12" pos:end="590:38">(<init pos:start="590:13" pos:end="590:18"><expr pos:start="590:13" pos:end="590:17"><name pos:start="590:13" pos:end="590:13">x</name> <operator pos:start="590:15" pos:end="590:15">=</operator> <literal type="number" pos:start="590:17" pos:end="590:17">0</literal></expr>;</init> <condition pos:start="590:20" pos:end="590:25"><expr pos:start="590:20" pos:end="590:24"><name pos:start="590:20" pos:end="590:20">x</name> <operator pos:start="590:22" pos:end="590:22">&lt;</operator> <literal type="number" pos:start="590:24" pos:end="590:24">4</literal></expr>;</condition> <incr pos:start="590:27" pos:end="590:37"><expr pos:start="590:27" pos:end="590:32"><name pos:start="590:27" pos:end="590:27">x</name> <operator pos:start="590:29" pos:end="590:30">+=</operator> <literal type="number" pos:start="590:32" pos:end="590:32">2</literal></expr><operator pos:start="590:33" pos:end="590:33">,</operator> <expr pos:start="590:35" pos:end="590:37"><name pos:start="590:35" pos:end="590:35">i</name><operator pos:start="590:36" pos:end="590:37">++</operator></expr></incr>)</control> <block pos:start="590:40" pos:end="600:9">{<block_content pos:start="591:13" pos:end="599:13">
            <expr_stmt pos:start="591:13" pos:end="591:90"><expr pos:start="591:13" pos:end="591:89"><name pos:start="591:13" pos:end="591:44"><name pos:start="591:13" pos:end="591:16">data</name><index pos:start="591:17" pos:end="591:19">[<expr pos:start="591:18" pos:end="591:18"><literal type="number" pos:start="591:18" pos:end="591:18">0</literal></expr>]</index><index pos:start="591:20" pos:end="591:44">[<expr pos:start="591:21" pos:end="591:43"><name pos:start="591:21" pos:end="591:21">x</name>   <operator pos:start="591:25" pos:end="591:25">+</operator>     <name pos:start="591:31" pos:end="591:31">y</name><operator pos:start="591:32" pos:end="591:32">*</operator><name pos:start="591:33" pos:end="591:43"><name pos:start="591:33" pos:end="591:40">linesize</name><index pos:start="591:41" pos:end="591:43">[<expr pos:start="591:42" pos:end="591:42"><literal type="number" pos:start="591:42" pos:end="591:42">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="591:46" pos:end="591:46">=</operator> <name pos:start="591:48" pos:end="591:89"><name pos:start="591:48" pos:end="591:51">info</name><operator pos:start="591:52" pos:end="591:53">-&gt;</operator><name pos:start="591:54" pos:end="591:64">v4_codebook</name><index pos:start="591:65" pos:end="591:89">[<expr pos:start="591:66" pos:end="591:88"><name pos:start="591:66" pos:end="591:77"><name pos:start="591:66" pos:end="591:74">v4_vector</name><index pos:start="591:75" pos:end="591:77">[<expr pos:start="591:76" pos:end="591:76"><name pos:start="591:76" pos:end="591:76">i</name></expr>]</index></name><operator pos:start="591:78" pos:end="591:78">*</operator><name pos:start="591:79" pos:end="591:88">entry_size</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="592:13" pos:end="592:92"><expr pos:start="592:13" pos:end="592:91"><name pos:start="592:13" pos:end="592:44"><name pos:start="592:13" pos:end="592:16">data</name><index pos:start="592:17" pos:end="592:19">[<expr pos:start="592:18" pos:end="592:18"><literal type="number" pos:start="592:18" pos:end="592:18">0</literal></expr>]</index><index pos:start="592:20" pos:end="592:44">[<expr pos:start="592:21" pos:end="592:43"><name pos:start="592:21" pos:end="592:21">x</name><operator pos:start="592:22" pos:end="592:22">+</operator><literal type="number" pos:start="592:23" pos:end="592:23">1</literal> <operator pos:start="592:25" pos:end="592:25">+</operator>     <name pos:start="592:31" pos:end="592:31">y</name><operator pos:start="592:32" pos:end="592:32">*</operator><name pos:start="592:33" pos:end="592:43"><name pos:start="592:33" pos:end="592:40">linesize</name><index pos:start="592:41" pos:end="592:43">[<expr pos:start="592:42" pos:end="592:42"><literal type="number" pos:start="592:42" pos:end="592:42">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="592:46" pos:end="592:46">=</operator> <name pos:start="592:48" pos:end="592:91"><name pos:start="592:48" pos:end="592:51">info</name><operator pos:start="592:52" pos:end="592:53">-&gt;</operator><name pos:start="592:54" pos:end="592:64">v4_codebook</name><index pos:start="592:65" pos:end="592:91">[<expr pos:start="592:66" pos:end="592:90"><name pos:start="592:66" pos:end="592:77"><name pos:start="592:66" pos:end="592:74">v4_vector</name><index pos:start="592:75" pos:end="592:77">[<expr pos:start="592:76" pos:end="592:76"><name pos:start="592:76" pos:end="592:76">i</name></expr>]</index></name><operator pos:start="592:78" pos:end="592:78">*</operator><name pos:start="592:79" pos:end="592:88">entry_size</name><operator pos:start="592:89" pos:end="592:89">+</operator><literal type="number" pos:start="592:90" pos:end="592:90">1</literal></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="593:13" pos:end="593:92"><expr pos:start="593:13" pos:end="593:91"><name pos:start="593:13" pos:end="593:44"><name pos:start="593:13" pos:end="593:16">data</name><index pos:start="593:17" pos:end="593:19">[<expr pos:start="593:18" pos:end="593:18"><literal type="number" pos:start="593:18" pos:end="593:18">0</literal></expr>]</index><index pos:start="593:20" pos:end="593:44">[<expr pos:start="593:21" pos:end="593:43"><name pos:start="593:21" pos:end="593:21">x</name>   <operator pos:start="593:25" pos:end="593:25">+</operator> <operator pos:start="593:27" pos:end="593:27">(</operator><name pos:start="593:28" pos:end="593:28">y</name><operator pos:start="593:29" pos:end="593:29">+</operator><literal type="number" pos:start="593:30" pos:end="593:30">1</literal><operator pos:start="593:31" pos:end="593:31">)</operator><operator pos:start="593:32" pos:end="593:32">*</operator><name pos:start="593:33" pos:end="593:43"><name pos:start="593:33" pos:end="593:40">linesize</name><index pos:start="593:41" pos:end="593:43">[<expr pos:start="593:42" pos:end="593:42"><literal type="number" pos:start="593:42" pos:end="593:42">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="593:46" pos:end="593:46">=</operator> <name pos:start="593:48" pos:end="593:91"><name pos:start="593:48" pos:end="593:51">info</name><operator pos:start="593:52" pos:end="593:53">-&gt;</operator><name pos:start="593:54" pos:end="593:64">v4_codebook</name><index pos:start="593:65" pos:end="593:91">[<expr pos:start="593:66" pos:end="593:90"><name pos:start="593:66" pos:end="593:77"><name pos:start="593:66" pos:end="593:74">v4_vector</name><index pos:start="593:75" pos:end="593:77">[<expr pos:start="593:76" pos:end="593:76"><name pos:start="593:76" pos:end="593:76">i</name></expr>]</index></name><operator pos:start="593:78" pos:end="593:78">*</operator><name pos:start="593:79" pos:end="593:88">entry_size</name><operator pos:start="593:89" pos:end="593:89">+</operator><literal type="number" pos:start="593:90" pos:end="593:90">2</literal></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="594:13" pos:end="594:92"><expr pos:start="594:13" pos:end="594:91"><name pos:start="594:13" pos:end="594:44"><name pos:start="594:13" pos:end="594:16">data</name><index pos:start="594:17" pos:end="594:19">[<expr pos:start="594:18" pos:end="594:18"><literal type="number" pos:start="594:18" pos:end="594:18">0</literal></expr>]</index><index pos:start="594:20" pos:end="594:44">[<expr pos:start="594:21" pos:end="594:43"><name pos:start="594:21" pos:end="594:21">x</name><operator pos:start="594:22" pos:end="594:22">+</operator><literal type="number" pos:start="594:23" pos:end="594:23">1</literal> <operator pos:start="594:25" pos:end="594:25">+</operator> <operator pos:start="594:27" pos:end="594:27">(</operator><name pos:start="594:28" pos:end="594:28">y</name><operator pos:start="594:29" pos:end="594:29">+</operator><literal type="number" pos:start="594:30" pos:end="594:30">1</literal><operator pos:start="594:31" pos:end="594:31">)</operator><operator pos:start="594:32" pos:end="594:32">*</operator><name pos:start="594:33" pos:end="594:43"><name pos:start="594:33" pos:end="594:40">linesize</name><index pos:start="594:41" pos:end="594:43">[<expr pos:start="594:42" pos:end="594:42"><literal type="number" pos:start="594:42" pos:end="594:42">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="594:46" pos:end="594:46">=</operator> <name pos:start="594:48" pos:end="594:91"><name pos:start="594:48" pos:end="594:51">info</name><operator pos:start="594:52" pos:end="594:53">-&gt;</operator><name pos:start="594:54" pos:end="594:64">v4_codebook</name><index pos:start="594:65" pos:end="594:91">[<expr pos:start="594:66" pos:end="594:90"><name pos:start="594:66" pos:end="594:77"><name pos:start="594:66" pos:end="594:74">v4_vector</name><index pos:start="594:75" pos:end="594:77">[<expr pos:start="594:76" pos:end="594:76"><name pos:start="594:76" pos:end="594:76">i</name></expr>]</index></name><operator pos:start="594:78" pos:end="594:78">*</operator><name pos:start="594:79" pos:end="594:88">entry_size</name><operator pos:start="594:89" pos:end="594:89">+</operator><literal type="number" pos:start="594:90" pos:end="594:90">3</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="596:13" pos:end="599:13"><if pos:start="596:13" pos:end="599:13">if<condition pos:start="596:15" pos:end="596:46">(<expr pos:start="596:16" pos:end="596:45"><name pos:start="596:16" pos:end="596:25"><name pos:start="596:16" pos:end="596:16">s</name><operator pos:start="596:17" pos:end="596:18">-&gt;</operator><name pos:start="596:19" pos:end="596:25">pix_fmt</name></name> <operator pos:start="596:27" pos:end="596:28">==</operator> <name pos:start="596:30" pos:end="596:45">AV_PIX_FMT_RGB24</name></expr>)</condition> <block pos:start="596:48" pos:end="599:13">{<block_content pos:start="597:17" pos:end="598:100">
                <expr_stmt pos:start="597:17" pos:end="597:100"><expr pos:start="597:17" pos:end="597:99"><name pos:start="597:17" pos:end="597:52"><name pos:start="597:17" pos:end="597:20">data</name><index pos:start="597:21" pos:end="597:23">[<expr pos:start="597:22" pos:end="597:22"><literal type="number" pos:start="597:22" pos:end="597:22">1</literal></expr>]</index><index pos:start="597:24" pos:end="597:52">[<expr pos:start="597:25" pos:end="597:51"><operator pos:start="597:25" pos:end="597:25">(</operator><name pos:start="597:26" pos:end="597:26">x</name><operator pos:start="597:27" pos:end="597:28">&gt;&gt;</operator><literal type="number" pos:start="597:29" pos:end="597:29">1</literal><operator pos:start="597:30" pos:end="597:30">)</operator> <operator pos:start="597:32" pos:end="597:32">+</operator> <operator pos:start="597:34" pos:end="597:34">(</operator><name pos:start="597:35" pos:end="597:35">y</name><operator pos:start="597:36" pos:end="597:37">&gt;&gt;</operator><literal type="number" pos:start="597:38" pos:end="597:38">1</literal><operator pos:start="597:39" pos:end="597:39">)</operator><operator pos:start="597:40" pos:end="597:40">*</operator><name pos:start="597:41" pos:end="597:51"><name pos:start="597:41" pos:end="597:48">linesize</name><index pos:start="597:49" pos:end="597:51">[<expr pos:start="597:50" pos:end="597:50"><literal type="number" pos:start="597:50" pos:end="597:50">1</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="597:54" pos:end="597:54">=</operator> <name pos:start="597:56" pos:end="597:99"><name pos:start="597:56" pos:end="597:59">info</name><operator pos:start="597:60" pos:end="597:61">-&gt;</operator><name pos:start="597:62" pos:end="597:72">v4_codebook</name><index pos:start="597:73" pos:end="597:99">[<expr pos:start="597:74" pos:end="597:98"><name pos:start="597:74" pos:end="597:85"><name pos:start="597:74" pos:end="597:82">v4_vector</name><index pos:start="597:83" pos:end="597:85">[<expr pos:start="597:84" pos:end="597:84"><name pos:start="597:84" pos:end="597:84">i</name></expr>]</index></name><operator pos:start="597:86" pos:end="597:86">*</operator><name pos:start="597:87" pos:end="597:96">entry_size</name><operator pos:start="597:97" pos:end="597:97">+</operator><literal type="number" pos:start="597:98" pos:end="597:98">4</literal></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="598:17" pos:end="598:100"><expr pos:start="598:17" pos:end="598:99"><name pos:start="598:17" pos:end="598:52"><name pos:start="598:17" pos:end="598:20">data</name><index pos:start="598:21" pos:end="598:23">[<expr pos:start="598:22" pos:end="598:22"><literal type="number" pos:start="598:22" pos:end="598:22">2</literal></expr>]</index><index pos:start="598:24" pos:end="598:52">[<expr pos:start="598:25" pos:end="598:51"><operator pos:start="598:25" pos:end="598:25">(</operator><name pos:start="598:26" pos:end="598:26">x</name><operator pos:start="598:27" pos:end="598:28">&gt;&gt;</operator><literal type="number" pos:start="598:29" pos:end="598:29">1</literal><operator pos:start="598:30" pos:end="598:30">)</operator> <operator pos:start="598:32" pos:end="598:32">+</operator> <operator pos:start="598:34" pos:end="598:34">(</operator><name pos:start="598:35" pos:end="598:35">y</name><operator pos:start="598:36" pos:end="598:37">&gt;&gt;</operator><literal type="number" pos:start="598:38" pos:end="598:38">1</literal><operator pos:start="598:39" pos:end="598:39">)</operator><operator pos:start="598:40" pos:end="598:40">*</operator><name pos:start="598:41" pos:end="598:51"><name pos:start="598:41" pos:end="598:48">linesize</name><index pos:start="598:49" pos:end="598:51">[<expr pos:start="598:50" pos:end="598:50"><literal type="number" pos:start="598:50" pos:end="598:50">2</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="598:54" pos:end="598:54">=</operator> <name pos:start="598:56" pos:end="598:99"><name pos:start="598:56" pos:end="598:59">info</name><operator pos:start="598:60" pos:end="598:61">-&gt;</operator><name pos:start="598:62" pos:end="598:72">v4_codebook</name><index pos:start="598:73" pos:end="598:99">[<expr pos:start="598:74" pos:end="598:98"><name pos:start="598:74" pos:end="598:85"><name pos:start="598:74" pos:end="598:82">v4_vector</name><index pos:start="598:83" pos:end="598:85">[<expr pos:start="598:84" pos:end="598:84"><name pos:start="598:84" pos:end="598:84">i</name></expr>]</index></name><operator pos:start="598:86" pos:end="598:86">*</operator><name pos:start="598:87" pos:end="598:96">entry_size</name><operator pos:start="598:97" pos:end="598:97">+</operator><literal type="number" pos:start="598:98" pos:end="598:98">5</literal></expr>]</index></name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
</block_content>}</block></function>

<function pos:start="604:1" pos:end="624:1"><type pos:start="604:1" pos:end="604:11"><specifier pos:start="604:1" pos:end="604:6">static</specifier> <name pos:start="604:8" pos:end="604:11">void</name></type> <name pos:start="604:13" pos:end="604:19">copy_mb</name><parameter_list pos:start="604:20" pos:end="606:58">(<parameter pos:start="604:21" pos:end="604:40"><decl pos:start="604:21" pos:end="604:40"><type pos:start="604:21" pos:end="604:40"><name pos:start="604:21" pos:end="604:37">CinepakEncContext</name> <modifier pos:start="604:39" pos:end="604:39">*</modifier></type><name pos:start="604:40" pos:end="604:40">s</name></decl></parameter>,
                    <parameter pos:start="605:21" pos:end="605:38"><decl pos:start="605:21" pos:end="605:38"><type pos:start="605:21" pos:end="605:35"><name pos:start="605:21" pos:end="605:27">uint8_t</name> <modifier pos:start="605:29" pos:end="605:29">*</modifier></type><name pos:start="605:30" pos:end="605:38"><name pos:start="605:30" pos:end="605:35">a_data</name><index pos:start="605:36" pos:end="605:38">[<expr pos:start="605:37" pos:end="605:37"><literal type="number" pos:start="605:37" pos:end="605:37">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="605:41" pos:end="605:57"><decl pos:start="605:41" pos:end="605:57"><type pos:start="605:41" pos:end="605:54"><name pos:start="605:41" pos:end="605:43">int</name></type> <name pos:start="605:45" pos:end="605:57"><name pos:start="605:45" pos:end="605:54">a_linesize</name><index pos:start="605:55" pos:end="605:57">[<expr pos:start="605:56" pos:end="605:56"><literal type="number" pos:start="605:56" pos:end="605:56">4</literal></expr>]</index></name></decl></parameter>,
                    <parameter pos:start="606:21" pos:end="606:38"><decl pos:start="606:21" pos:end="606:38"><type pos:start="606:21" pos:end="606:35"><name pos:start="606:21" pos:end="606:27">uint8_t</name> <modifier pos:start="606:29" pos:end="606:29">*</modifier></type><name pos:start="606:30" pos:end="606:38"><name pos:start="606:30" pos:end="606:35">b_data</name><index pos:start="606:36" pos:end="606:38">[<expr pos:start="606:37" pos:end="606:37"><literal type="number" pos:start="606:37" pos:end="606:37">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="606:41" pos:end="606:57"><decl pos:start="606:41" pos:end="606:57"><type pos:start="606:41" pos:end="606:54"><name pos:start="606:41" pos:end="606:43">int</name></type> <name pos:start="606:45" pos:end="606:57"><name pos:start="606:45" pos:end="606:54">b_linesize</name><index pos:start="606:55" pos:end="606:57">[<expr pos:start="606:56" pos:end="606:56"><literal type="number" pos:start="606:56" pos:end="606:56">4</literal></expr>]</index></name></decl></parameter>)</parameter_list>
<block pos:start="607:1" pos:end="624:1">{<block_content pos:start="608:5" pos:end="623:5">
    <decl_stmt pos:start="608:5" pos:end="608:13"><decl pos:start="608:5" pos:end="608:9"><type pos:start="608:5" pos:end="608:7"><name pos:start="608:5" pos:end="608:7">int</name></type> <name pos:start="608:9" pos:end="608:9">y</name></decl>, <decl pos:start="608:12" pos:end="608:12"><type ref="prev" pos:start="608:5" pos:end="608:7"/><name pos:start="608:12" pos:end="608:12">p</name></decl>;</decl_stmt>

    <for pos:start="610:5" pos:end="613:5">for<control pos:start="610:8" pos:end="610:32">(<init pos:start="610:9" pos:end="610:14"><expr pos:start="610:9" pos:end="610:13"><name pos:start="610:9" pos:end="610:9">y</name> <operator pos:start="610:11" pos:end="610:11">=</operator> <literal type="number" pos:start="610:13" pos:end="610:13">0</literal></expr>;</init> <condition pos:start="610:16" pos:end="610:27"><expr pos:start="610:16" pos:end="610:26"><name pos:start="610:16" pos:end="610:16">y</name> <operator pos:start="610:18" pos:end="610:18">&lt;</operator> <name pos:start="610:20" pos:end="610:26">MB_SIZE</name></expr>;</condition> <incr pos:start="610:29" pos:end="610:31"><expr pos:start="610:29" pos:end="610:31"><name pos:start="610:29" pos:end="610:29">y</name><operator pos:start="610:30" pos:end="610:31">++</operator></expr></incr>)</control> <block pos:start="610:34" pos:end="613:5">{<block_content pos:start="611:9" pos:end="612:24">
        <expr_stmt pos:start="611:9" pos:end="612:24"><expr pos:start="611:9" pos:end="612:23"><call pos:start="611:9" pos:end="612:23"><name pos:start="611:9" pos:end="611:14">memcpy</name><argument_list pos:start="611:15" pos:end="612:23">(<argument pos:start="611:16" pos:end="611:40"><expr pos:start="611:16" pos:end="611:40"><name pos:start="611:16" pos:end="611:24"><name pos:start="611:16" pos:end="611:21">a_data</name><index pos:start="611:22" pos:end="611:24">[<expr pos:start="611:23" pos:end="611:23"><literal type="number" pos:start="611:23" pos:end="611:23">0</literal></expr>]</index></name><operator pos:start="611:25" pos:end="611:25">+</operator><name pos:start="611:26" pos:end="611:26">y</name><operator pos:start="611:27" pos:end="611:27">*</operator><name pos:start="611:28" pos:end="611:40"><name pos:start="611:28" pos:end="611:37">a_linesize</name><index pos:start="611:38" pos:end="611:40">[<expr pos:start="611:39" pos:end="611:39"><literal type="number" pos:start="611:39" pos:end="611:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="611:43" pos:end="611:67"><expr pos:start="611:43" pos:end="611:67"><name pos:start="611:43" pos:end="611:51"><name pos:start="611:43" pos:end="611:48">b_data</name><index pos:start="611:49" pos:end="611:51">[<expr pos:start="611:50" pos:end="611:50"><literal type="number" pos:start="611:50" pos:end="611:50">0</literal></expr>]</index></name><operator pos:start="611:52" pos:end="611:52">+</operator><name pos:start="611:53" pos:end="611:53">y</name><operator pos:start="611:54" pos:end="611:54">*</operator><name pos:start="611:55" pos:end="611:67"><name pos:start="611:55" pos:end="611:64">b_linesize</name><index pos:start="611:65" pos:end="611:67">[<expr pos:start="611:66" pos:end="611:66"><literal type="number" pos:start="611:66" pos:end="611:66">0</literal></expr>]</index></name></expr></argument>,
               <argument pos:start="612:16" pos:end="612:22"><expr pos:start="612:16" pos:end="612:22"><name pos:start="612:16" pos:end="612:22">MB_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <if_stmt pos:start="615:5" pos:end="623:5"><if pos:start="615:5" pos:end="623:5">if<condition pos:start="615:7" pos:end="615:38">(<expr pos:start="615:8" pos:end="615:37"><name pos:start="615:8" pos:end="615:17"><name pos:start="615:8" pos:end="615:8">s</name><operator pos:start="615:9" pos:end="615:10">-&gt;</operator><name pos:start="615:11" pos:end="615:17">pix_fmt</name></name> <operator pos:start="615:19" pos:end="615:20">==</operator> <name pos:start="615:22" pos:end="615:37">AV_PIX_FMT_RGB24</name></expr>)</condition> <block pos:start="615:40" pos:end="623:5">{<block_content pos:start="616:9" pos:end="622:9">
        <for pos:start="616:9" pos:end="622:9">for<control pos:start="616:12" pos:end="616:31">(<init pos:start="616:13" pos:end="616:18"><expr pos:start="616:13" pos:end="616:17"><name pos:start="616:13" pos:end="616:13">p</name> <operator pos:start="616:15" pos:end="616:15">=</operator> <literal type="number" pos:start="616:17" pos:end="616:17">1</literal></expr>;</init> <condition pos:start="616:20" pos:end="616:26"><expr pos:start="616:20" pos:end="616:25"><name pos:start="616:20" pos:end="616:20">p</name> <operator pos:start="616:22" pos:end="616:23">&lt;=</operator> <literal type="number" pos:start="616:25" pos:end="616:25">2</literal></expr>;</condition> <incr pos:start="616:28" pos:end="616:30"><expr pos:start="616:28" pos:end="616:30"><name pos:start="616:28" pos:end="616:28">p</name><operator pos:start="616:29" pos:end="616:30">++</operator></expr></incr>)</control> <block pos:start="616:33" pos:end="622:9">{<block_content pos:start="617:13" pos:end="621:13">
            <for pos:start="617:13" pos:end="621:13">for<control pos:start="617:16" pos:end="617:42">(<init pos:start="617:17" pos:end="617:22"><expr pos:start="617:17" pos:end="617:21"><name pos:start="617:17" pos:end="617:17">y</name> <operator pos:start="617:19" pos:end="617:19">=</operator> <literal type="number" pos:start="617:21" pos:end="617:21">0</literal></expr>;</init> <condition pos:start="617:24" pos:end="617:37"><expr pos:start="617:24" pos:end="617:36"><name pos:start="617:24" pos:end="617:24">y</name> <operator pos:start="617:26" pos:end="617:26">&lt;</operator> <name pos:start="617:28" pos:end="617:34">MB_SIZE</name><operator pos:start="617:35" pos:end="617:35">/</operator><literal type="number" pos:start="617:36" pos:end="617:36">2</literal></expr>;</condition> <incr pos:start="617:39" pos:end="617:41"><expr pos:start="617:39" pos:end="617:41"><name pos:start="617:39" pos:end="617:39">y</name><operator pos:start="617:40" pos:end="617:41">++</operator></expr></incr>)</control> <block pos:start="617:44" pos:end="621:13">{<block_content pos:start="618:17" pos:end="620:34">
                <expr_stmt pos:start="618:17" pos:end="620:34"><expr pos:start="618:17" pos:end="620:33"><call pos:start="618:17" pos:end="620:33"><name pos:start="618:17" pos:end="618:22">memcpy</name><argument_list pos:start="618:23" pos:end="620:33">(<argument pos:start="618:24" pos:end="618:50"><expr pos:start="618:24" pos:end="618:50"><name pos:start="618:24" pos:end="618:32"><name pos:start="618:24" pos:end="618:29">a_data</name><index pos:start="618:30" pos:end="618:32">[<expr pos:start="618:31" pos:end="618:31"><name pos:start="618:31" pos:end="618:31">p</name></expr>]</index></name> <operator pos:start="618:34" pos:end="618:34">+</operator> <name pos:start="618:36" pos:end="618:36">y</name><operator pos:start="618:37" pos:end="618:37">*</operator><name pos:start="618:38" pos:end="618:50"><name pos:start="618:38" pos:end="618:47">a_linesize</name><index pos:start="618:48" pos:end="618:50">[<expr pos:start="618:49" pos:end="618:49"><name pos:start="618:49" pos:end="618:49">p</name></expr>]</index></name></expr></argument>,
                       <argument pos:start="619:24" pos:end="619:50"><expr pos:start="619:24" pos:end="619:50"><name pos:start="619:24" pos:end="619:32"><name pos:start="619:24" pos:end="619:29">b_data</name><index pos:start="619:30" pos:end="619:32">[<expr pos:start="619:31" pos:end="619:31"><name pos:start="619:31" pos:end="619:31">p</name></expr>]</index></name> <operator pos:start="619:34" pos:end="619:34">+</operator> <name pos:start="619:36" pos:end="619:36">y</name><operator pos:start="619:37" pos:end="619:37">*</operator><name pos:start="619:38" pos:end="619:50"><name pos:start="619:38" pos:end="619:47">b_linesize</name><index pos:start="619:48" pos:end="619:50">[<expr pos:start="619:49" pos:end="619:49"><name pos:start="619:49" pos:end="619:49">p</name></expr>]</index></name></expr></argument>,
                       <argument pos:start="620:24" pos:end="620:32"><expr pos:start="620:24" pos:end="620:32"><name pos:start="620:24" pos:end="620:30">MB_SIZE</name><operator pos:start="620:31" pos:end="620:31">/</operator><literal type="number" pos:start="620:32" pos:end="620:32">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block></for>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function pos:start="626:1" pos:end="771:1"><type pos:start="626:1" pos:end="626:10"><specifier pos:start="626:1" pos:end="626:6">static</specifier> <name pos:start="626:8" pos:end="626:10">int</name></type> <name pos:start="626:12" pos:end="626:22">encode_mode</name><parameter_list pos:start="626:23" pos:end="629:60">(<parameter pos:start="626:24" pos:end="626:43"><decl pos:start="626:24" pos:end="626:43"><type pos:start="626:24" pos:end="626:43"><name pos:start="626:24" pos:end="626:40">CinepakEncContext</name> <modifier pos:start="626:42" pos:end="626:42">*</modifier></type><name pos:start="626:43" pos:end="626:43">s</name></decl></parameter>, <parameter pos:start="626:46" pos:end="626:50"><decl pos:start="626:46" pos:end="626:50"><type pos:start="626:46" pos:end="626:50"><name pos:start="626:46" pos:end="626:48">int</name></type> <name pos:start="626:50" pos:end="626:50">h</name></decl></parameter>,
                       <parameter pos:start="627:24" pos:end="627:47"><decl pos:start="627:24" pos:end="627:47"><type pos:start="627:24" pos:end="627:44"><name pos:start="627:24" pos:end="627:30">uint8_t</name> <modifier pos:start="627:32" pos:end="627:32">*</modifier></type><name pos:start="627:33" pos:end="627:47"><name pos:start="627:33" pos:end="627:44">scratch_data</name><index pos:start="627:45" pos:end="627:47">[<expr pos:start="627:46" pos:end="627:46"><literal type="number" pos:start="627:46" pos:end="627:46">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="627:50" pos:end="627:72"><decl pos:start="627:50" pos:end="627:72"><type pos:start="627:50" pos:end="627:69"><name pos:start="627:50" pos:end="627:52">int</name></type> <name pos:start="627:54" pos:end="627:72"><name pos:start="627:54" pos:end="627:69">scratch_linesize</name><index pos:start="627:70" pos:end="627:72">[<expr pos:start="627:71" pos:end="627:71"><literal type="number" pos:start="627:71" pos:end="627:71">4</literal></expr>]</index></name></decl></parameter>,
                       <parameter pos:start="628:24" pos:end="628:44"><decl pos:start="628:24" pos:end="628:44"><type pos:start="628:24" pos:end="628:41"><name pos:start="628:24" pos:end="628:30">uint8_t</name> <modifier pos:start="628:32" pos:end="628:32">*</modifier></type><name pos:start="628:33" pos:end="628:44"><name pos:start="628:33" pos:end="628:41">last_data</name><index pos:start="628:42" pos:end="628:44">[<expr pos:start="628:43" pos:end="628:43"><literal type="number" pos:start="628:43" pos:end="628:43">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="628:47" pos:end="628:66"><decl pos:start="628:47" pos:end="628:66"><type pos:start="628:47" pos:end="628:63"><name pos:start="628:47" pos:end="628:49">int</name></type> <name pos:start="628:51" pos:end="628:66"><name pos:start="628:51" pos:end="628:63">last_linesize</name><index pos:start="628:64" pos:end="628:66">[<expr pos:start="628:65" pos:end="628:65"><literal type="number" pos:start="628:65" pos:end="628:65">4</literal></expr>]</index></name></decl></parameter>,
                       <parameter pos:start="629:24" pos:end="629:39"><decl pos:start="629:24" pos:end="629:39"><type pos:start="629:24" pos:end="629:39"><name pos:start="629:24" pos:end="629:33">strip_info</name> <modifier pos:start="629:35" pos:end="629:35">*</modifier></type><name pos:start="629:36" pos:end="629:39">info</name></decl></parameter>, <parameter pos:start="629:42" pos:end="629:59"><decl pos:start="629:42" pos:end="629:59"><type pos:start="629:42" pos:end="629:59"><name pos:start="629:42" pos:end="629:49">unsigned</name> <name pos:start="629:51" pos:end="629:54">char</name> <modifier pos:start="629:56" pos:end="629:56">*</modifier></type><name pos:start="629:57" pos:end="629:59">buf</name></decl></parameter>)</parameter_list>
<block pos:start="630:1" pos:end="771:1">{<block_content pos:start="631:5" pos:end="770:15">
    <decl_stmt pos:start="631:5" pos:end="631:92"><decl pos:start="631:5" pos:end="631:9"><type pos:start="631:5" pos:end="631:7"><name pos:start="631:5" pos:end="631:7">int</name></type> <name pos:start="631:9" pos:end="631:9">x</name></decl>, <decl pos:start="631:12" pos:end="631:12"><type ref="prev" pos:start="631:5" pos:end="631:7"/><name pos:start="631:12" pos:end="631:12">y</name></decl>, <decl pos:start="631:15" pos:end="631:15"><type ref="prev" pos:start="631:5" pos:end="631:7"/><name pos:start="631:15" pos:end="631:15">z</name></decl>, <decl pos:start="631:18" pos:end="631:22"><type ref="prev" pos:start="631:5" pos:end="631:7"/><name pos:start="631:18" pos:end="631:22">flags</name></decl>, <decl pos:start="631:25" pos:end="631:28"><type ref="prev" pos:start="631:5" pos:end="631:7"/><name pos:start="631:25" pos:end="631:28">bits</name></decl>, <decl pos:start="631:31" pos:end="631:39"><type ref="prev" pos:start="631:5" pos:end="631:7"/><name pos:start="631:31" pos:end="631:39">temp_size</name></decl>, <decl pos:start="631:42" pos:end="631:51"><type ref="prev" pos:start="631:5" pos:end="631:7"/><name pos:start="631:42" pos:end="631:51">header_ofs</name></decl>, <decl pos:start="631:54" pos:end="631:60"><type ref="prev" pos:start="631:5" pos:end="631:7"/><name pos:start="631:54" pos:end="631:56">ret</name> <init pos:start="631:58" pos:end="631:60">= <expr pos:start="631:60" pos:end="631:60"><literal type="number" pos:start="631:60" pos:end="631:60">0</literal></expr></init></decl>, <decl pos:start="631:63" pos:end="631:91"><type ref="prev" pos:start="631:5" pos:end="631:7"/><name pos:start="631:63" pos:end="631:70">mb_count</name> <init pos:start="631:72" pos:end="631:91">= <expr pos:start="631:74" pos:end="631:91"><name pos:start="631:74" pos:end="631:77"><name pos:start="631:74" pos:end="631:74">s</name><operator pos:start="631:75" pos:end="631:76">-&gt;</operator><name pos:start="631:77" pos:end="631:77">w</name></name> <operator pos:start="631:79" pos:end="631:79">*</operator> <name pos:start="631:81" pos:end="631:81">h</name> <operator pos:start="631:83" pos:end="631:83">/</operator> <name pos:start="631:85" pos:end="631:91">MB_AREA</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="632:5" pos:end="632:43"><decl pos:start="632:5" pos:end="632:23"><type pos:start="632:5" pos:end="632:7"><name pos:start="632:5" pos:end="632:7">int</name></type> <name pos:start="632:9" pos:end="632:23">needs_extra_bit</name></decl>, <decl pos:start="632:26" pos:end="632:42"><type ref="prev" pos:start="632:5" pos:end="632:7"/><name pos:start="632:26" pos:end="632:42">should_write_temp</name></decl>;</decl_stmt>
    <decl_stmt pos:start="633:5" pos:end="633:27"><decl pos:start="633:5" pos:end="633:26"><type pos:start="633:5" pos:end="633:17"><name pos:start="633:5" pos:end="633:12">unsigned</name> <name pos:start="633:14" pos:end="633:17">char</name></type> <name pos:start="633:19" pos:end="633:26"><name pos:start="633:19" pos:end="633:22">temp</name><index pos:start="633:23" pos:end="633:26">[<expr pos:start="633:24" pos:end="633:25"><literal type="number" pos:start="633:24" pos:end="633:25">64</literal></expr>]</index></name></decl>;</decl_stmt> <comment type="line" pos:start="633:29" pos:end="633:69">//32/2 = 16 V4 blocks at 4 B each -&gt; 64 B</comment>
    <decl_stmt pos:start="634:5" pos:end="634:16"><decl pos:start="634:5" pos:end="634:15"><type pos:start="634:5" pos:end="634:13"><name pos:start="634:5" pos:end="634:11">mb_info</name> <modifier pos:start="634:13" pos:end="634:13">*</modifier></type><name pos:start="634:14" pos:end="634:15">mb</name></decl>;</decl_stmt>
    <decl_stmt pos:start="635:5" pos:end="635:64"><decl pos:start="635:5" pos:end="635:38"><type pos:start="635:5" pos:end="635:13"><name pos:start="635:5" pos:end="635:11">uint8_t</name> <modifier pos:start="635:13" pos:end="635:13">*</modifier></type><name pos:start="635:14" pos:end="635:32"><name pos:start="635:14" pos:end="635:29">sub_scratch_data</name><index pos:start="635:30" pos:end="635:32">[<expr pos:start="635:31" pos:end="635:31"><literal type="number" pos:start="635:31" pos:end="635:31">4</literal></expr>]</index></name> <init pos:start="635:34" pos:end="635:38">= <expr pos:start="635:36" pos:end="635:38"><block pos:start="635:36" pos:end="635:38">{<expr pos:start="635:37" pos:end="635:37"><literal type="number" pos:start="635:37" pos:end="635:37">0</literal></expr>}</block></expr></init></decl>, <decl pos:start="635:41" pos:end="635:63"><type ref="prev" pos:start="635:5" pos:end="635:13"><modifier pos:start="635:41" pos:end="635:41">*</modifier></type><name pos:start="635:42" pos:end="635:57"><name pos:start="635:42" pos:end="635:54">sub_last_data</name><index pos:start="635:55" pos:end="635:57">[<expr pos:start="635:56" pos:end="635:56"><literal type="number" pos:start="635:56" pos:end="635:56">4</literal></expr>]</index></name> <init pos:start="635:59" pos:end="635:63">= <expr pos:start="635:61" pos:end="635:63"><block pos:start="635:61" pos:end="635:63">{<expr pos:start="635:62" pos:end="635:62"><literal type="number" pos:start="635:62" pos:end="635:62">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="636:5" pos:end="636:66"><decl pos:start="636:5" pos:end="636:37"><type pos:start="636:5" pos:end="636:7"><name pos:start="636:5" pos:end="636:7">int</name></type> <name pos:start="636:9" pos:end="636:31"><name pos:start="636:9" pos:end="636:28">sub_scratch_linesize</name><index pos:start="636:29" pos:end="636:31">[<expr pos:start="636:30" pos:end="636:30"><literal type="number" pos:start="636:30" pos:end="636:30">4</literal></expr>]</index></name> <init pos:start="636:33" pos:end="636:37">= <expr pos:start="636:35" pos:end="636:37"><block pos:start="636:35" pos:end="636:37">{<expr pos:start="636:36" pos:end="636:36"><literal type="number" pos:start="636:36" pos:end="636:36">0</literal></expr>}</block></expr></init></decl>, <decl pos:start="636:40" pos:end="636:65"><type ref="prev" pos:start="636:5" pos:end="636:7"/><name pos:start="636:40" pos:end="636:59"><name pos:start="636:40" pos:end="636:56">sub_last_linesize</name><index pos:start="636:57" pos:end="636:59">[<expr pos:start="636:58" pos:end="636:58"><literal type="number" pos:start="636:58" pos:end="636:58">4</literal></expr>]</index></name> <init pos:start="636:61" pos:end="636:65">= <expr pos:start="636:63" pos:end="636:65"><block pos:start="636:63" pos:end="636:65">{<expr pos:start="636:64" pos:end="636:64"><literal type="number" pos:start="636:64" pos:end="636:64">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:start="638:5" pos:end="638:22">//encode codebooks</comment>
<comment type="line" format="doxygen" pos:start="639:1" pos:end="639:67">////// MacOS vintage decoder compatibility dictates the presence of</comment>
<comment type="line" format="doxygen" pos:start="640:1" pos:end="640:74">////// the codebook chunk even when the codebook is empty - pretty dumb...</comment>
<comment type="line" format="doxygen" pos:start="641:1" pos:end="641:62">////// and also the certain order of the codebook chunks -- rl</comment>
    <if_stmt pos:start="642:5" pos:end="643:91"><if pos:start="642:5" pos:end="643:91">if<condition pos:start="642:7" pos:end="642:42">(<expr pos:start="642:8" pos:end="642:41"><name pos:start="642:8" pos:end="642:20"><name pos:start="642:8" pos:end="642:11">info</name><operator pos:start="642:12" pos:end="642:13">-&gt;</operator><name pos:start="642:14" pos:end="642:20">v4_size</name></name> <operator pos:start="642:22" pos:end="642:23">||</operator> <operator pos:start="642:25" pos:end="642:25">!</operator><name pos:start="642:26" pos:end="642:41"><name pos:start="642:26" pos:end="642:26">s</name><operator pos:start="642:27" pos:end="642:28">-&gt;</operator><name pos:start="642:29" pos:end="642:41">skip_empty_cb</name></name></expr>)</condition><block type="pseudo" pos:start="643:9" pos:end="643:91"><block_content pos:start="643:9" pos:end="643:91">
        <expr_stmt pos:start="643:9" pos:end="643:91"><expr pos:start="643:9" pos:end="643:90"><name pos:start="643:9" pos:end="643:11">ret</name> <operator pos:start="643:13" pos:end="643:14">+=</operator> <call pos:start="643:16" pos:end="643:90"><name pos:start="643:16" pos:end="643:30">encode_codebook</name><argument_list pos:start="643:31" pos:end="643:90">(<argument pos:start="643:32" pos:end="643:32"><expr pos:start="643:32" pos:end="643:32"><name pos:start="643:32" pos:end="643:32">s</name></expr></argument>, <argument pos:start="643:35" pos:end="643:51"><expr pos:start="643:35" pos:end="643:51"><name pos:start="643:35" pos:end="643:51"><name pos:start="643:35" pos:end="643:38">info</name><operator pos:start="643:39" pos:end="643:40">-&gt;</operator><name pos:start="643:41" pos:end="643:51">v4_codebook</name></name></expr></argument>, <argument pos:start="643:54" pos:end="643:66"><expr pos:start="643:54" pos:end="643:66"><name pos:start="643:54" pos:end="643:66"><name pos:start="643:54" pos:end="643:57">info</name><operator pos:start="643:58" pos:end="643:59">-&gt;</operator><name pos:start="643:60" pos:end="643:66">v4_size</name></name></expr></argument>, <argument pos:start="643:69" pos:end="643:72"><expr pos:start="643:69" pos:end="643:72"><literal type="number" pos:start="643:69" pos:end="643:72">0x20</literal></expr></argument>, <argument pos:start="643:75" pos:end="643:78"><expr pos:start="643:75" pos:end="643:78"><literal type="number" pos:start="643:75" pos:end="643:78">0x24</literal></expr></argument>, <argument pos:start="643:81" pos:end="643:89"><expr pos:start="643:81" pos:end="643:89"><name pos:start="643:81" pos:end="643:83">buf</name> <operator pos:start="643:85" pos:end="643:85">+</operator> <name pos:start="643:87" pos:end="643:89">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="645:5" pos:end="646:91"><if pos:start="645:5" pos:end="646:91">if<condition pos:start="645:7" pos:end="645:42">(<expr pos:start="645:8" pos:end="645:41"><name pos:start="645:8" pos:end="645:20"><name pos:start="645:8" pos:end="645:11">info</name><operator pos:start="645:12" pos:end="645:13">-&gt;</operator><name pos:start="645:14" pos:end="645:20">v1_size</name></name> <operator pos:start="645:22" pos:end="645:23">||</operator> <operator pos:start="645:25" pos:end="645:25">!</operator><name pos:start="645:26" pos:end="645:41"><name pos:start="645:26" pos:end="645:26">s</name><operator pos:start="645:27" pos:end="645:28">-&gt;</operator><name pos:start="645:29" pos:end="645:41">skip_empty_cb</name></name></expr>)</condition><block type="pseudo" pos:start="646:9" pos:end="646:91"><block_content pos:start="646:9" pos:end="646:91">
        <expr_stmt pos:start="646:9" pos:end="646:91"><expr pos:start="646:9" pos:end="646:90"><name pos:start="646:9" pos:end="646:11">ret</name> <operator pos:start="646:13" pos:end="646:14">+=</operator> <call pos:start="646:16" pos:end="646:90"><name pos:start="646:16" pos:end="646:30">encode_codebook</name><argument_list pos:start="646:31" pos:end="646:90">(<argument pos:start="646:32" pos:end="646:32"><expr pos:start="646:32" pos:end="646:32"><name pos:start="646:32" pos:end="646:32">s</name></expr></argument>, <argument pos:start="646:35" pos:end="646:51"><expr pos:start="646:35" pos:end="646:51"><name pos:start="646:35" pos:end="646:51"><name pos:start="646:35" pos:end="646:38">info</name><operator pos:start="646:39" pos:end="646:40">-&gt;</operator><name pos:start="646:41" pos:end="646:51">v1_codebook</name></name></expr></argument>, <argument pos:start="646:54" pos:end="646:66"><expr pos:start="646:54" pos:end="646:66"><name pos:start="646:54" pos:end="646:66"><name pos:start="646:54" pos:end="646:57">info</name><operator pos:start="646:58" pos:end="646:59">-&gt;</operator><name pos:start="646:60" pos:end="646:66">v1_size</name></name></expr></argument>, <argument pos:start="646:69" pos:end="646:72"><expr pos:start="646:69" pos:end="646:72"><literal type="number" pos:start="646:69" pos:end="646:72">0x22</literal></expr></argument>, <argument pos:start="646:75" pos:end="646:78"><expr pos:start="646:75" pos:end="646:78"><literal type="number" pos:start="646:75" pos:end="646:78">0x26</literal></expr></argument>, <argument pos:start="646:81" pos:end="646:89"><expr pos:start="646:81" pos:end="646:89"><name pos:start="646:81" pos:end="646:83">buf</name> <operator pos:start="646:85" pos:end="646:85">+</operator> <name pos:start="646:87" pos:end="646:89">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="line" pos:start="648:5" pos:end="648:28">//update scratch picture</comment>
    <for pos:start="649:5" pos:end="669:5">for<control pos:start="649:8" pos:end="649:39">(<init pos:start="649:9" pos:end="649:18"><expr pos:start="649:9" pos:end="649:17"><name pos:start="649:9" pos:end="649:9">z</name> <operator pos:start="649:11" pos:end="649:11">=</operator> <name pos:start="649:13" pos:end="649:13">y</name> <operator pos:start="649:15" pos:end="649:15">=</operator> <literal type="number" pos:start="649:17" pos:end="649:17">0</literal></expr>;</init> <condition pos:start="649:20" pos:end="649:25"><expr pos:start="649:20" pos:end="649:24"><name pos:start="649:20" pos:end="649:20">y</name> <operator pos:start="649:22" pos:end="649:22">&lt;</operator> <name pos:start="649:24" pos:end="649:24">h</name></expr>;</condition> <incr pos:start="649:27" pos:end="649:38"><expr pos:start="649:27" pos:end="649:38"><name pos:start="649:27" pos:end="649:27">y</name> <operator pos:start="649:29" pos:end="649:30">+=</operator> <name pos:start="649:32" pos:end="649:38">MB_SIZE</name></expr></incr>)</control> <block pos:start="649:41" pos:end="669:5">{<block_content pos:start="650:9" pos:end="668:9">
        <for pos:start="650:9" pos:end="668:9">for<control pos:start="650:12" pos:end="650:47">(<init pos:start="650:13" pos:end="650:18"><expr pos:start="650:13" pos:end="650:17"><name pos:start="650:13" pos:end="650:13">x</name> <operator pos:start="650:15" pos:end="650:15">=</operator> <literal type="number" pos:start="650:17" pos:end="650:17">0</literal></expr>;</init> <condition pos:start="650:20" pos:end="650:28"><expr pos:start="650:20" pos:end="650:27"><name pos:start="650:20" pos:end="650:20">x</name> <operator pos:start="650:22" pos:end="650:22">&lt;</operator> <name pos:start="650:24" pos:end="650:27"><name pos:start="650:24" pos:end="650:24">s</name><operator pos:start="650:25" pos:end="650:26">-&gt;</operator><name pos:start="650:27" pos:end="650:27">w</name></name></expr>;</condition> <incr pos:start="650:30" pos:end="650:46"><expr pos:start="650:30" pos:end="650:41"><name pos:start="650:30" pos:end="650:30">x</name> <operator pos:start="650:32" pos:end="650:33">+=</operator> <name pos:start="650:35" pos:end="650:41">MB_SIZE</name></expr><operator pos:start="650:42" pos:end="650:42">,</operator> <expr pos:start="650:44" pos:end="650:46"><name pos:start="650:44" pos:end="650:44">z</name><operator pos:start="650:45" pos:end="650:46">++</operator></expr></incr>)</control> <block pos:start="650:49" pos:end="668:9">{<block_content pos:start="651:13" pos:end="667:54">
            <expr_stmt pos:start="651:13" pos:end="651:27"><expr pos:start="651:13" pos:end="651:26"><name pos:start="651:13" pos:end="651:14">mb</name> <operator pos:start="651:16" pos:end="651:16">=</operator> <operator pos:start="651:18" pos:end="651:18">&amp;</operator><name pos:start="651:19" pos:end="651:26"><name pos:start="651:19" pos:end="651:19">s</name><operator pos:start="651:20" pos:end="651:21">-&gt;</operator><name pos:start="651:22" pos:end="651:23">mb</name><index pos:start="651:24" pos:end="651:26">[<expr pos:start="651:25" pos:end="651:25"><name pos:start="651:25" pos:end="651:25">z</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="653:13" pos:end="654:68"><expr pos:start="653:13" pos:end="654:67"><call pos:start="653:13" pos:end="654:67"><name pos:start="653:13" pos:end="653:27">get_sub_picture</name><argument_list pos:start="653:28" pos:end="654:67">(<argument pos:start="653:29" pos:end="653:29"><expr pos:start="653:29" pos:end="653:29"><name pos:start="653:29" pos:end="653:29">s</name></expr></argument>, <argument pos:start="653:32" pos:end="653:32"><expr pos:start="653:32" pos:end="653:32"><name pos:start="653:32" pos:end="653:32">x</name></expr></argument>, <argument pos:start="653:35" pos:end="653:35"><expr pos:start="653:35" pos:end="653:35"><name pos:start="653:35" pos:end="653:35">y</name></expr></argument>, <argument pos:start="653:38" pos:end="653:49"><expr pos:start="653:38" pos:end="653:49"><name pos:start="653:38" pos:end="653:49">scratch_data</name></expr></argument>, <argument pos:start="653:52" pos:end="653:67"><expr pos:start="653:52" pos:end="653:67"><name pos:start="653:52" pos:end="653:67">scratch_linesize</name></expr></argument>,
                            <argument pos:start="654:29" pos:end="654:44"><expr pos:start="654:29" pos:end="654:44"><name pos:start="654:29" pos:end="654:44">sub_scratch_data</name></expr></argument>, <argument pos:start="654:47" pos:end="654:66"><expr pos:start="654:47" pos:end="654:66"><name pos:start="654:47" pos:end="654:66">sub_scratch_linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="656:13" pos:end="667:54"><if pos:start="656:13" pos:end="662:13">if<condition pos:start="656:15" pos:end="656:70">(<expr pos:start="656:16" pos:end="656:69"><name pos:start="656:16" pos:end="656:25"><name pos:start="656:16" pos:end="656:19">info</name><operator pos:start="656:20" pos:end="656:21">-&gt;</operator><name pos:start="656:22" pos:end="656:25">mode</name></name> <operator pos:start="656:27" pos:end="656:28">==</operator> <name pos:start="656:30" pos:end="656:36">MODE_MC</name> <operator pos:start="656:38" pos:end="656:39">&amp;&amp;</operator> <name pos:start="656:41" pos:end="656:57"><name pos:start="656:41" pos:end="656:42">mb</name><operator pos:start="656:43" pos:end="656:44">-&gt;</operator><name pos:start="656:45" pos:end="656:57">best_encoding</name></name> <operator pos:start="656:59" pos:end="656:60">==</operator> <name pos:start="656:62" pos:end="656:69">ENC_SKIP</name></expr>)</condition> <block pos:start="656:72" pos:end="662:13">{<block_content pos:start="657:17" pos:end="661:58">
                <expr_stmt pos:start="657:17" pos:end="659:66"><expr pos:start="657:17" pos:end="659:65"><call pos:start="657:17" pos:end="659:65"><name pos:start="657:17" pos:end="657:31">get_sub_picture</name><argument_list pos:start="657:32" pos:end="659:65">(<argument pos:start="657:33" pos:end="657:33"><expr pos:start="657:33" pos:end="657:33"><name pos:start="657:33" pos:end="657:33">s</name></expr></argument>, <argument pos:start="657:36" pos:end="657:36"><expr pos:start="657:36" pos:end="657:36"><name pos:start="657:36" pos:end="657:36">x</name></expr></argument>, <argument pos:start="657:39" pos:end="657:39"><expr pos:start="657:39" pos:end="657:39"><name pos:start="657:39" pos:end="657:39">y</name></expr></argument>,
                                <argument pos:start="658:33" pos:end="658:41"><expr pos:start="658:33" pos:end="658:41"><name pos:start="658:33" pos:end="658:41">last_data</name></expr></argument>, <argument pos:start="658:44" pos:end="658:56"><expr pos:start="658:44" pos:end="658:56"><name pos:start="658:44" pos:end="658:56">last_linesize</name></expr></argument>,
                                <argument pos:start="659:33" pos:end="659:45"><expr pos:start="659:33" pos:end="659:45"><name pos:start="659:33" pos:end="659:45">sub_last_data</name></expr></argument>, <argument pos:start="659:48" pos:end="659:64"><expr pos:start="659:48" pos:end="659:64"><name pos:start="659:48" pos:end="659:64">sub_last_linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="660:17" pos:end="661:58"><expr pos:start="660:17" pos:end="661:57"><call pos:start="660:17" pos:end="661:57"><name pos:start="660:17" pos:end="660:23">copy_mb</name><argument_list pos:start="660:24" pos:end="661:57">(<argument pos:start="660:25" pos:end="660:25"><expr pos:start="660:25" pos:end="660:25"><name pos:start="660:25" pos:end="660:25">s</name></expr></argument>, <argument pos:start="660:28" pos:end="660:43"><expr pos:start="660:28" pos:end="660:43"><name pos:start="660:28" pos:end="660:43">sub_scratch_data</name></expr></argument>, <argument pos:start="660:46" pos:end="660:65"><expr pos:start="660:46" pos:end="660:65"><name pos:start="660:46" pos:end="660:65">sub_scratch_linesize</name></expr></argument>,
                        <argument pos:start="661:25" pos:end="661:37"><expr pos:start="661:25" pos:end="661:37"><name pos:start="661:25" pos:end="661:37">sub_last_data</name></expr></argument>, <argument pos:start="661:40" pos:end="661:56"><expr pos:start="661:40" pos:end="661:56"><name pos:start="661:40" pos:end="661:56">sub_last_linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="662:15" pos:end="664:54">else if<condition pos:start="662:22" pos:end="662:80">(<expr pos:start="662:23" pos:end="662:79"><name pos:start="662:23" pos:end="662:32"><name pos:start="662:23" pos:end="662:26">info</name><operator pos:start="662:27" pos:end="662:28">-&gt;</operator><name pos:start="662:29" pos:end="662:32">mode</name></name> <operator pos:start="662:34" pos:end="662:35">==</operator> <name pos:start="662:37" pos:end="662:48">MODE_V1_ONLY</name> <operator pos:start="662:50" pos:end="662:51">||</operator> <name pos:start="662:53" pos:end="662:69"><name pos:start="662:53" pos:end="662:54">mb</name><operator pos:start="662:55" pos:end="662:56">-&gt;</operator><name pos:start="662:57" pos:end="662:69">best_encoding</name></name> <operator pos:start="662:71" pos:end="662:72">==</operator> <name pos:start="662:74" pos:end="662:79">ENC_V1</name></expr>)</condition><block type="pseudo" pos:start="663:17" pos:end="664:54"><block_content pos:start="663:17" pos:end="664:54">
                <expr_stmt pos:start="663:17" pos:end="664:54"><expr pos:start="663:17" pos:end="664:53"><call pos:start="663:17" pos:end="664:53"><name pos:start="663:17" pos:end="663:32">decode_v1_vector</name><argument_list pos:start="663:33" pos:end="664:53">(<argument pos:start="663:34" pos:end="663:34"><expr pos:start="663:34" pos:end="663:34"><name pos:start="663:34" pos:end="663:34">s</name></expr></argument>, <argument pos:start="663:37" pos:end="663:52"><expr pos:start="663:37" pos:end="663:52"><name pos:start="663:37" pos:end="663:52">sub_scratch_data</name></expr></argument>, <argument pos:start="663:55" pos:end="663:74"><expr pos:start="663:55" pos:end="663:74"><name pos:start="663:55" pos:end="663:74">sub_scratch_linesize</name></expr></argument>,
                                 <argument pos:start="664:34" pos:end="664:46"><expr pos:start="664:34" pos:end="664:46"><name pos:start="664:34" pos:end="664:46"><name pos:start="664:34" pos:end="664:35">mb</name><operator pos:start="664:36" pos:end="664:37">-&gt;</operator><name pos:start="664:38" pos:end="664:46">v1_vector</name></name></expr></argument>, <argument pos:start="664:49" pos:end="664:52"><expr pos:start="664:49" pos:end="664:52"><name pos:start="664:49" pos:end="664:52">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
            <else pos:start="665:13" pos:end="667:54">else<block type="pseudo" pos:start="666:17" pos:end="667:54"><block_content pos:start="666:17" pos:end="667:54">
                <expr_stmt pos:start="666:17" pos:end="667:54"><expr pos:start="666:17" pos:end="667:53"><call pos:start="666:17" pos:end="667:53"><name pos:start="666:17" pos:end="666:32">decode_v4_vector</name><argument_list pos:start="666:33" pos:end="667:53">(<argument pos:start="666:34" pos:end="666:34"><expr pos:start="666:34" pos:end="666:34"><name pos:start="666:34" pos:end="666:34">s</name></expr></argument>, <argument pos:start="666:37" pos:end="666:52"><expr pos:start="666:37" pos:end="666:52"><name pos:start="666:37" pos:end="666:52">sub_scratch_data</name></expr></argument>, <argument pos:start="666:55" pos:end="666:74"><expr pos:start="666:55" pos:end="666:74"><name pos:start="666:55" pos:end="666:74">sub_scratch_linesize</name></expr></argument>,
                                 <argument pos:start="667:34" pos:end="667:46"><expr pos:start="667:34" pos:end="667:46"><name pos:start="667:34" pos:end="667:46"><name pos:start="667:34" pos:end="667:35">mb</name><operator pos:start="667:36" pos:end="667:37">-&gt;</operator><name pos:start="667:38" pos:end="667:46">v4_vector</name></name></expr></argument>, <argument pos:start="667:49" pos:end="667:52"><expr pos:start="667:49" pos:end="667:52"><name pos:start="667:49" pos:end="667:52">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>

    <switch pos:start="671:5" pos:end="768:5">switch<condition pos:start="671:11" pos:end="671:22">(<expr pos:start="671:12" pos:end="671:21"><name pos:start="671:12" pos:end="671:21"><name pos:start="671:12" pos:end="671:15">info</name><operator pos:start="671:16" pos:end="671:17">-&gt;</operator><name pos:start="671:18" pos:end="671:21">mode</name></name></expr>)</condition> <block pos:start="671:24" pos:end="768:5">{<block_content pos:start="672:5" pos:end="767:14">
    <case pos:start="672:5" pos:end="672:22">case <expr pos:start="672:10" pos:end="672:21"><name pos:start="672:10" pos:end="672:21">MODE_V1_ONLY</name></expr>:</case>
        <comment type="line" pos:start="673:9" pos:end="673:69">//av_log(s-&gt;avctx, AV_LOG_INFO, "mb_count = %i\n", mb_count);</comment>
        <expr_stmt pos:start="674:9" pos:end="674:61"><expr pos:start="674:9" pos:end="674:60"><name pos:start="674:9" pos:end="674:11">ret</name> <operator pos:start="674:13" pos:end="674:14">+=</operator> <call pos:start="674:16" pos:end="674:60"><name pos:start="674:16" pos:end="674:33">write_chunk_header</name><argument_list pos:start="674:34" pos:end="674:60">(<argument pos:start="674:35" pos:end="674:43"><expr pos:start="674:35" pos:end="674:43"><name pos:start="674:35" pos:end="674:37">buf</name> <operator pos:start="674:39" pos:end="674:39">+</operator> <name pos:start="674:41" pos:end="674:43">ret</name></expr></argument>, <argument pos:start="674:46" pos:end="674:49"><expr pos:start="674:46" pos:end="674:49"><literal type="number" pos:start="674:46" pos:end="674:49">0x32</literal></expr></argument>, <argument pos:start="674:52" pos:end="674:59"><expr pos:start="674:52" pos:end="674:59"><name pos:start="674:52" pos:end="674:59">mb_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="676:9" pos:end="677:44">for<control pos:start="676:12" pos:end="676:37">(<init pos:start="676:13" pos:end="676:18"><expr pos:start="676:13" pos:end="676:17"><name pos:start="676:13" pos:end="676:13">x</name> <operator pos:start="676:15" pos:end="676:15">=</operator> <literal type="number" pos:start="676:17" pos:end="676:17">0</literal></expr>;</init> <condition pos:start="676:20" pos:end="676:32"><expr pos:start="676:20" pos:end="676:31"><name pos:start="676:20" pos:end="676:20">x</name> <operator pos:start="676:22" pos:end="676:22">&lt;</operator> <name pos:start="676:24" pos:end="676:31">mb_count</name></expr>;</condition> <incr pos:start="676:34" pos:end="676:36"><expr pos:start="676:34" pos:end="676:36"><name pos:start="676:34" pos:end="676:34">x</name><operator pos:start="676:35" pos:end="676:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="677:13" pos:end="677:44"><block_content pos:start="677:13" pos:end="677:44">
            <expr_stmt pos:start="677:13" pos:end="677:44"><expr pos:start="677:13" pos:end="677:43"><name pos:start="677:13" pos:end="677:22"><name pos:start="677:13" pos:end="677:15">buf</name><index pos:start="677:16" pos:end="677:22">[<expr pos:start="677:17" pos:end="677:21"><name pos:start="677:17" pos:end="677:19">ret</name><operator pos:start="677:20" pos:end="677:21">++</operator></expr>]</index></name> <operator pos:start="677:24" pos:end="677:24">=</operator> <name pos:start="677:26" pos:end="677:33"><name pos:start="677:26" pos:end="677:26">s</name><operator pos:start="677:27" pos:end="677:28">-&gt;</operator><name pos:start="677:29" pos:end="677:30">mb</name><index pos:start="677:31" pos:end="677:33">[<expr pos:start="677:32" pos:end="677:32"><name pos:start="677:32" pos:end="677:32">x</name></expr>]</index></name><operator pos:start="677:34" pos:end="677:34">.</operator><name pos:start="677:35" pos:end="677:43">v1_vector</name></expr>;</expr_stmt></block_content></block></for>

        <break pos:start="679:9" pos:end="679:14">break;</break>
    <case pos:start="680:5" pos:end="680:20">case <expr pos:start="680:10" pos:end="680:19"><name pos:start="680:10" pos:end="680:19">MODE_V1_V4</name></expr>:</case>
        <comment type="line" pos:start="681:9" pos:end="681:34">//remember header position</comment>
        <expr_stmt pos:start="682:9" pos:end="682:25"><expr pos:start="682:9" pos:end="682:24"><name pos:start="682:9" pos:end="682:18">header_ofs</name> <operator pos:start="682:20" pos:end="682:20">=</operator> <name pos:start="682:22" pos:end="682:24">ret</name></expr>;</expr_stmt>
        <expr_stmt pos:start="683:9" pos:end="683:33"><expr pos:start="683:9" pos:end="683:32"><name pos:start="683:9" pos:end="683:11">ret</name> <operator pos:start="683:13" pos:end="683:14">+=</operator> <name pos:start="683:16" pos:end="683:32">CHUNK_HEADER_SIZE</name></expr>;</expr_stmt>

        <for pos:start="685:9" pos:end="703:9">for<control pos:start="685:12" pos:end="685:41">(<init pos:start="685:13" pos:end="685:18"><expr pos:start="685:13" pos:end="685:17"><name pos:start="685:13" pos:end="685:13">x</name> <operator pos:start="685:15" pos:end="685:15">=</operator> <literal type="number" pos:start="685:17" pos:end="685:17">0</literal></expr>;</init> <condition pos:start="685:20" pos:end="685:32"><expr pos:start="685:20" pos:end="685:31"><name pos:start="685:20" pos:end="685:20">x</name> <operator pos:start="685:22" pos:end="685:22">&lt;</operator> <name pos:start="685:24" pos:end="685:31">mb_count</name></expr>;</condition> <incr pos:start="685:34" pos:end="685:40"><expr pos:start="685:34" pos:end="685:40"><name pos:start="685:34" pos:end="685:34">x</name> <operator pos:start="685:36" pos:end="685:37">+=</operator> <literal type="number" pos:start="685:39" pos:end="685:40">32</literal></expr></incr>)</control> <block pos:start="685:43" pos:end="703:9">{<block_content pos:start="686:13" pos:end="702:13">
            <expr_stmt pos:start="686:13" pos:end="686:22"><expr pos:start="686:13" pos:end="686:21"><name pos:start="686:13" pos:end="686:17">flags</name> <operator pos:start="686:19" pos:end="686:19">=</operator> <literal type="number" pos:start="686:21" pos:end="686:21">0</literal></expr>;</expr_stmt>
            <for pos:start="687:13" pos:end="689:47">for<control pos:start="687:16" pos:end="687:54">(<init pos:start="687:17" pos:end="687:22"><expr pos:start="687:17" pos:end="687:21"><name pos:start="687:17" pos:end="687:17">y</name> <operator pos:start="687:19" pos:end="687:19">=</operator> <name pos:start="687:21" pos:end="687:21">x</name></expr>;</init> <condition pos:start="687:24" pos:end="687:49"><expr pos:start="687:24" pos:end="687:48"><name pos:start="687:24" pos:end="687:24">y</name> <operator pos:start="687:26" pos:end="687:26">&lt;</operator> <call pos:start="687:28" pos:end="687:48"><name pos:start="687:28" pos:end="687:32">FFMIN</name><argument_list pos:start="687:33" pos:end="687:48">(<argument pos:start="687:34" pos:end="687:37"><expr pos:start="687:34" pos:end="687:37"><name pos:start="687:34" pos:end="687:34">x</name><operator pos:start="687:35" pos:end="687:35">+</operator><literal type="number" pos:start="687:36" pos:end="687:37">32</literal></expr></argument>, <argument pos:start="687:40" pos:end="687:47"><expr pos:start="687:40" pos:end="687:47"><name pos:start="687:40" pos:end="687:47">mb_count</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="687:51" pos:end="687:53"><expr pos:start="687:51" pos:end="687:53"><name pos:start="687:51" pos:end="687:51">y</name><operator pos:start="687:52" pos:end="687:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="688:17" pos:end="689:47"><block_content pos:start="688:17" pos:end="689:47">
                <if_stmt pos:start="688:17" pos:end="689:47"><if pos:start="688:17" pos:end="689:47">if<condition pos:start="688:19" pos:end="688:52">(<expr pos:start="688:20" pos:end="688:51"><name pos:start="688:20" pos:end="688:27"><name pos:start="688:20" pos:end="688:20">s</name><operator pos:start="688:21" pos:end="688:22">-&gt;</operator><name pos:start="688:23" pos:end="688:24">mb</name><index pos:start="688:25" pos:end="688:27">[<expr pos:start="688:26" pos:end="688:26"><name pos:start="688:26" pos:end="688:26">y</name></expr>]</index></name><operator pos:start="688:28" pos:end="688:28">.</operator><name pos:start="688:29" pos:end="688:41">best_encoding</name> <operator pos:start="688:43" pos:end="688:44">==</operator> <name pos:start="688:46" pos:end="688:51">ENC_V4</name></expr>)</condition><block type="pseudo" pos:start="689:21" pos:end="689:47"><block_content pos:start="689:21" pos:end="689:47">
                    <expr_stmt pos:start="689:21" pos:end="689:47"><expr pos:start="689:21" pos:end="689:46"><name pos:start="689:21" pos:end="689:25">flags</name> <operator pos:start="689:27" pos:end="689:28">|=</operator> <literal type="number" pos:start="689:30" pos:end="689:30">1</literal> <operator pos:start="689:32" pos:end="689:33">&lt;&lt;</operator> <operator pos:start="689:35" pos:end="689:35">(</operator><literal type="number" pos:start="689:36" pos:end="689:39">31</literal> <operator pos:start="689:39" pos:end="689:39">-</operator> <name pos:start="689:41" pos:end="689:41">y</name> <operator pos:start="689:43" pos:end="689:43">+</operator> <name pos:start="689:45" pos:end="689:45">x</name><operator pos:start="689:46" pos:end="689:46">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

            <expr_stmt pos:start="691:13" pos:end="691:38"><expr pos:start="691:13" pos:end="691:37"><call pos:start="691:13" pos:end="691:37"><name pos:start="691:13" pos:end="691:19">AV_WB32</name><argument_list pos:start="691:20" pos:end="691:37">(<argument pos:start="691:21" pos:end="691:29"><expr pos:start="691:21" pos:end="691:29"><operator pos:start="691:21" pos:end="691:21">&amp;</operator><name pos:start="691:22" pos:end="691:29"><name pos:start="691:22" pos:end="691:24">buf</name><index pos:start="691:25" pos:end="691:29">[<expr pos:start="691:26" pos:end="691:28"><name pos:start="691:26" pos:end="691:28">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="691:32" pos:end="691:36"><expr pos:start="691:32" pos:end="691:36"><name pos:start="691:32" pos:end="691:36">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="692:13" pos:end="692:21"><expr pos:start="692:13" pos:end="692:20"><name pos:start="692:13" pos:end="692:15">ret</name> <operator pos:start="692:17" pos:end="692:18">+=</operator> <literal type="number" pos:start="692:20" pos:end="692:20">4</literal></expr>;</expr_stmt>

            <for pos:start="694:13" pos:end="702:13">for<control pos:start="694:16" pos:end="694:54">(<init pos:start="694:17" pos:end="694:22"><expr pos:start="694:17" pos:end="694:21"><name pos:start="694:17" pos:end="694:17">y</name> <operator pos:start="694:19" pos:end="694:19">=</operator> <name pos:start="694:21" pos:end="694:21">x</name></expr>;</init> <condition pos:start="694:24" pos:end="694:49"><expr pos:start="694:24" pos:end="694:48"><name pos:start="694:24" pos:end="694:24">y</name> <operator pos:start="694:26" pos:end="694:26">&lt;</operator> <call pos:start="694:28" pos:end="694:48"><name pos:start="694:28" pos:end="694:32">FFMIN</name><argument_list pos:start="694:33" pos:end="694:48">(<argument pos:start="694:34" pos:end="694:37"><expr pos:start="694:34" pos:end="694:37"><name pos:start="694:34" pos:end="694:34">x</name><operator pos:start="694:35" pos:end="694:35">+</operator><literal type="number" pos:start="694:36" pos:end="694:37">32</literal></expr></argument>, <argument pos:start="694:40" pos:end="694:47"><expr pos:start="694:40" pos:end="694:47"><name pos:start="694:40" pos:end="694:47">mb_count</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="694:51" pos:end="694:53"><expr pos:start="694:51" pos:end="694:53"><name pos:start="694:51" pos:end="694:51">y</name><operator pos:start="694:52" pos:end="694:53">++</operator></expr></incr>)</control> <block pos:start="694:56" pos:end="702:13">{<block_content pos:start="695:17" pos:end="701:54">
                <expr_stmt pos:start="695:17" pos:end="695:31"><expr pos:start="695:17" pos:end="695:30"><name pos:start="695:17" pos:end="695:18">mb</name> <operator pos:start="695:20" pos:end="695:20">=</operator> <operator pos:start="695:22" pos:end="695:22">&amp;</operator><name pos:start="695:23" pos:end="695:30"><name pos:start="695:23" pos:end="695:23">s</name><operator pos:start="695:24" pos:end="695:25">-&gt;</operator><name pos:start="695:26" pos:end="695:27">mb</name><index pos:start="695:28" pos:end="695:30">[<expr pos:start="695:29" pos:end="695:29"><name pos:start="695:29" pos:end="695:29">y</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="697:17" pos:end="701:54"><if pos:start="697:17" pos:end="698:47">if<condition pos:start="697:19" pos:end="697:47">(<expr pos:start="697:20" pos:end="697:46"><name pos:start="697:20" pos:end="697:36"><name pos:start="697:20" pos:end="697:21">mb</name><operator pos:start="697:22" pos:end="697:23">-&gt;</operator><name pos:start="697:24" pos:end="697:36">best_encoding</name></name> <operator pos:start="697:38" pos:end="697:39">==</operator> <name pos:start="697:41" pos:end="697:46">ENC_V1</name></expr>)</condition><block type="pseudo" pos:start="698:21" pos:end="698:47"><block_content pos:start="698:21" pos:end="698:47">
                    <expr_stmt pos:start="698:21" pos:end="698:47"><expr pos:start="698:21" pos:end="698:46"><name pos:start="698:21" pos:end="698:30"><name pos:start="698:21" pos:end="698:23">buf</name><index pos:start="698:24" pos:end="698:30">[<expr pos:start="698:25" pos:end="698:29"><name pos:start="698:25" pos:end="698:27">ret</name><operator pos:start="698:28" pos:end="698:29">++</operator></expr>]</index></name> <operator pos:start="698:32" pos:end="698:32">=</operator> <name pos:start="698:34" pos:end="698:46"><name pos:start="698:34" pos:end="698:35">mb</name><operator pos:start="698:36" pos:end="698:37">-&gt;</operator><name pos:start="698:38" pos:end="698:46">v1_vector</name></name></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="699:17" pos:end="701:54">else<block type="pseudo" pos:start="700:21" pos:end="701:54"><block_content pos:start="700:21" pos:end="701:54">
                    <for pos:start="700:21" pos:end="701:54">for<control pos:start="700:24" pos:end="700:42">(<init pos:start="700:25" pos:end="700:30"><expr pos:start="700:25" pos:end="700:29"><name pos:start="700:25" pos:end="700:25">z</name> <operator pos:start="700:27" pos:end="700:27">=</operator> <literal type="number" pos:start="700:29" pos:end="700:29">0</literal></expr>;</init> <condition pos:start="700:32" pos:end="700:37"><expr pos:start="700:32" pos:end="700:36"><name pos:start="700:32" pos:end="700:32">z</name> <operator pos:start="700:34" pos:end="700:34">&lt;</operator> <literal type="number" pos:start="700:36" pos:end="700:36">4</literal></expr>;</condition> <incr pos:start="700:39" pos:end="700:41"><expr pos:start="700:39" pos:end="700:41"><name pos:start="700:39" pos:end="700:39">z</name><operator pos:start="700:40" pos:end="700:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="701:25" pos:end="701:54"><block_content pos:start="701:25" pos:end="701:54">
                        <expr_stmt pos:start="701:25" pos:end="701:54"><expr pos:start="701:25" pos:end="701:53"><name pos:start="701:25" pos:end="701:34"><name pos:start="701:25" pos:end="701:27">buf</name><index pos:start="701:28" pos:end="701:34">[<expr pos:start="701:29" pos:end="701:33"><name pos:start="701:29" pos:end="701:31">ret</name><operator pos:start="701:32" pos:end="701:33">++</operator></expr>]</index></name> <operator pos:start="701:36" pos:end="701:36">=</operator> <name pos:start="701:38" pos:end="701:53"><name pos:start="701:38" pos:end="701:39">mb</name><operator pos:start="701:40" pos:end="701:41">-&gt;</operator><name pos:start="701:42" pos:end="701:50">v4_vector</name><index pos:start="701:51" pos:end="701:53">[<expr pos:start="701:52" pos:end="701:52"><name pos:start="701:52" pos:end="701:52">z</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></else></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></for>

        <expr_stmt pos:start="705:9" pos:end="705:89"><expr pos:start="705:9" pos:end="705:88"><call pos:start="705:9" pos:end="705:88"><name pos:start="705:9" pos:end="705:26">write_chunk_header</name><argument_list pos:start="705:27" pos:end="705:88">(<argument pos:start="705:28" pos:end="705:43"><expr pos:start="705:28" pos:end="705:43"><name pos:start="705:28" pos:end="705:30">buf</name> <operator pos:start="705:32" pos:end="705:32">+</operator> <name pos:start="705:34" pos:end="705:43">header_ofs</name></expr></argument>, <argument pos:start="705:46" pos:end="705:49"><expr pos:start="705:46" pos:end="705:49"><literal type="number" pos:start="705:46" pos:end="705:49">0x30</literal></expr></argument>, <argument pos:start="705:52" pos:end="705:87"><expr pos:start="705:52" pos:end="705:87"><name pos:start="705:52" pos:end="705:54">ret</name> <operator pos:start="705:56" pos:end="705:56">-</operator> <name pos:start="705:58" pos:end="705:67">header_ofs</name> <operator pos:start="705:69" pos:end="705:69">-</operator> <name pos:start="705:71" pos:end="705:87">CHUNK_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="707:9" pos:end="707:14">break;</break>
    <case pos:start="708:5" pos:end="708:17">case <expr pos:start="708:10" pos:end="708:16"><name pos:start="708:10" pos:end="708:16">MODE_MC</name></expr>:</case>
        <comment type="line" pos:start="709:9" pos:end="709:34">//remember header position</comment>
        <expr_stmt pos:start="710:9" pos:end="710:25"><expr pos:start="710:9" pos:end="710:24"><name pos:start="710:9" pos:end="710:18">header_ofs</name> <operator pos:start="710:20" pos:end="710:20">=</operator> <name pos:start="710:22" pos:end="710:24">ret</name></expr>;</expr_stmt>
        <expr_stmt pos:start="711:9" pos:end="711:33"><expr pos:start="711:9" pos:end="711:32"><name pos:start="711:9" pos:end="711:11">ret</name> <operator pos:start="711:13" pos:end="711:14">+=</operator> <name pos:start="711:16" pos:end="711:32">CHUNK_HEADER_SIZE</name></expr>;</expr_stmt>
        <expr_stmt pos:start="712:9" pos:end="712:37"><expr pos:start="712:9" pos:end="712:36"><name pos:start="712:9" pos:end="712:13">flags</name> <operator pos:start="712:15" pos:end="712:15">=</operator> <name pos:start="712:17" pos:end="712:20">bits</name> <operator pos:start="712:22" pos:end="712:22">=</operator> <name pos:start="712:24" pos:end="712:32">temp_size</name> <operator pos:start="712:34" pos:end="712:34">=</operator> <literal type="number" pos:start="712:36" pos:end="712:36">0</literal></expr>;</expr_stmt>

        <for pos:start="714:9" pos:end="756:9">for<control pos:start="714:12" pos:end="714:37">(<init pos:start="714:13" pos:end="714:18"><expr pos:start="714:13" pos:end="714:17"><name pos:start="714:13" pos:end="714:13">x</name> <operator pos:start="714:15" pos:end="714:15">=</operator> <literal type="number" pos:start="714:17" pos:end="714:17">0</literal></expr>;</init> <condition pos:start="714:20" pos:end="714:32"><expr pos:start="714:20" pos:end="714:31"><name pos:start="714:20" pos:end="714:20">x</name> <operator pos:start="714:22" pos:end="714:22">&lt;</operator> <name pos:start="714:24" pos:end="714:31">mb_count</name></expr>;</condition> <incr pos:start="714:34" pos:end="714:36"><expr pos:start="714:34" pos:end="714:36"><name pos:start="714:34" pos:end="714:34">x</name><operator pos:start="714:35" pos:end="714:36">++</operator></expr></incr>)</control> <block pos:start="714:39" pos:end="756:9">{<block_content pos:start="715:13" pos:end="755:13">
            <expr_stmt pos:start="715:13" pos:end="715:27"><expr pos:start="715:13" pos:end="715:26"><name pos:start="715:13" pos:end="715:14">mb</name> <operator pos:start="715:16" pos:end="715:16">=</operator> <operator pos:start="715:18" pos:end="715:18">&amp;</operator><name pos:start="715:19" pos:end="715:26"><name pos:start="715:19" pos:end="715:19">s</name><operator pos:start="715:20" pos:end="715:21">-&gt;</operator><name pos:start="715:22" pos:end="715:23">mb</name><index pos:start="715:24" pos:end="715:26">[<expr pos:start="715:25" pos:end="715:25"><name pos:start="715:25" pos:end="715:25">x</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="716:13" pos:end="716:70"><expr pos:start="716:13" pos:end="716:69"><name pos:start="716:13" pos:end="716:17">flags</name> <operator pos:start="716:19" pos:end="716:20">|=</operator> <operator pos:start="716:22" pos:end="716:22">(</operator><name pos:start="716:23" pos:end="716:39"><name pos:start="716:23" pos:end="716:24">mb</name><operator pos:start="716:25" pos:end="716:26">-&gt;</operator><name pos:start="716:27" pos:end="716:39">best_encoding</name></name> <operator pos:start="716:41" pos:end="716:42">!=</operator> <name pos:start="716:44" pos:end="716:51">ENC_SKIP</name><operator pos:start="716:52" pos:end="716:52">)</operator> <operator pos:start="716:54" pos:end="716:55">&lt;&lt;</operator> <operator pos:start="716:57" pos:end="716:57">(</operator><literal type="number" pos:start="716:58" pos:end="716:61">31</literal> <operator pos:start="716:61" pos:end="716:61">-</operator> <name pos:start="716:63" pos:end="716:66">bits</name><operator pos:start="716:67" pos:end="716:68">++</operator><operator pos:start="716:69" pos:end="716:69">)</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="717:13" pos:end="717:32"><expr pos:start="717:13" pos:end="717:31"><name pos:start="717:13" pos:end="717:27">needs_extra_bit</name> <operator pos:start="717:29" pos:end="717:29">=</operator> <literal type="number" pos:start="717:31" pos:end="717:31">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="718:13" pos:end="718:34"><expr pos:start="718:13" pos:end="718:33"><name pos:start="718:13" pos:end="718:29">should_write_temp</name> <operator pos:start="718:31" pos:end="718:31">=</operator> <literal type="number" pos:start="718:33" pos:end="718:33">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="720:13" pos:end="725:13"><if pos:start="720:13" pos:end="725:13">if<condition pos:start="720:15" pos:end="720:45">(<expr pos:start="720:16" pos:end="720:44"><name pos:start="720:16" pos:end="720:32"><name pos:start="720:16" pos:end="720:17">mb</name><operator pos:start="720:18" pos:end="720:19">-&gt;</operator><name pos:start="720:20" pos:end="720:32">best_encoding</name></name> <operator pos:start="720:34" pos:end="720:35">!=</operator> <name pos:start="720:37" pos:end="720:44">ENC_SKIP</name></expr>)</condition> <block pos:start="720:47" pos:end="725:13">{<block_content pos:start="721:17" pos:end="724:40">
                <if_stmt pos:start="721:17" pos:end="724:40"><if pos:start="721:17" pos:end="722:76">if<condition pos:start="721:19" pos:end="721:29">(<expr pos:start="721:20" pos:end="721:28"><name pos:start="721:20" pos:end="721:23">bits</name> <operator pos:start="721:25" pos:end="721:25">&lt;</operator> <literal type="number" pos:start="721:27" pos:end="721:28">32</literal></expr>)</condition><block type="pseudo" pos:start="722:21" pos:end="722:76"><block_content pos:start="722:21" pos:end="722:76">
                    <expr_stmt pos:start="722:21" pos:end="722:76"><expr pos:start="722:21" pos:end="722:75"><name pos:start="722:21" pos:end="722:25">flags</name> <operator pos:start="722:27" pos:end="722:28">|=</operator> <operator pos:start="722:30" pos:end="722:30">(</operator><name pos:start="722:31" pos:end="722:47"><name pos:start="722:31" pos:end="722:32">mb</name><operator pos:start="722:33" pos:end="722:34">-&gt;</operator><name pos:start="722:35" pos:end="722:47">best_encoding</name></name> <operator pos:start="722:49" pos:end="722:50">==</operator> <name pos:start="722:52" pos:end="722:57">ENC_V4</name><operator pos:start="722:58" pos:end="722:58">)</operator> <operator pos:start="722:60" pos:end="722:61">&lt;&lt;</operator> <operator pos:start="722:63" pos:end="722:63">(</operator><literal type="number" pos:start="722:64" pos:end="722:67">31</literal> <operator pos:start="722:67" pos:end="722:67">-</operator> <name pos:start="722:69" pos:end="722:72">bits</name><operator pos:start="722:73" pos:end="722:74">++</operator><operator pos:start="722:75" pos:end="722:75">)</operator></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="723:17" pos:end="724:40">else<block type="pseudo" pos:start="724:21" pos:end="724:40"><block_content pos:start="724:21" pos:end="724:40">
                    <expr_stmt pos:start="724:21" pos:end="724:40"><expr pos:start="724:21" pos:end="724:39"><name pos:start="724:21" pos:end="724:35">needs_extra_bit</name> <operator pos:start="724:37" pos:end="724:37">=</operator> <literal type="number" pos:start="724:39" pos:end="724:39">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="727:13" pos:end="738:13"><if pos:start="727:13" pos:end="738:13">if<condition pos:start="727:15" pos:end="727:26">(<expr pos:start="727:16" pos:end="727:25"><name pos:start="727:16" pos:end="727:19">bits</name> <operator pos:start="727:21" pos:end="727:22">==</operator> <literal type="number" pos:start="727:24" pos:end="727:25">32</literal></expr>)</condition> <block pos:start="727:28" pos:end="738:13">{<block_content pos:start="728:17" pos:end="737:42">
                <expr_stmt pos:start="728:17" pos:end="728:42"><expr pos:start="728:17" pos:end="728:41"><call pos:start="728:17" pos:end="728:41"><name pos:start="728:17" pos:end="728:23">AV_WB32</name><argument_list pos:start="728:24" pos:end="728:41">(<argument pos:start="728:25" pos:end="728:33"><expr pos:start="728:25" pos:end="728:33"><operator pos:start="728:25" pos:end="728:25">&amp;</operator><name pos:start="728:26" pos:end="728:33"><name pos:start="728:26" pos:end="728:28">buf</name><index pos:start="728:29" pos:end="728:33">[<expr pos:start="728:30" pos:end="728:32"><name pos:start="728:30" pos:end="728:32">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="728:36" pos:end="728:40"><expr pos:start="728:36" pos:end="728:40"><name pos:start="728:36" pos:end="728:40">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="729:17" pos:end="729:25"><expr pos:start="729:17" pos:end="729:24"><name pos:start="729:17" pos:end="729:19">ret</name> <operator pos:start="729:21" pos:end="729:22">+=</operator> <literal type="number" pos:start="729:24" pos:end="729:24">4</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="730:17" pos:end="730:33"><expr pos:start="730:17" pos:end="730:32"><name pos:start="730:17" pos:end="730:21">flags</name> <operator pos:start="730:23" pos:end="730:23">=</operator> <name pos:start="730:25" pos:end="730:28">bits</name> <operator pos:start="730:30" pos:end="730:30">=</operator> <literal type="number" pos:start="730:32" pos:end="730:32">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="732:17" pos:end="737:42"><if pos:start="732:17" pos:end="736:17">if<condition pos:start="732:19" pos:end="732:68">(<expr pos:start="732:20" pos:end="732:67"><name pos:start="732:20" pos:end="732:36"><name pos:start="732:20" pos:end="732:21">mb</name><operator pos:start="732:22" pos:end="732:23">-&gt;</operator><name pos:start="732:24" pos:end="732:36">best_encoding</name></name> <operator pos:start="732:38" pos:end="732:39">==</operator> <name pos:start="732:41" pos:end="732:48">ENC_SKIP</name> <operator pos:start="732:50" pos:end="732:51">||</operator> <name pos:start="732:53" pos:end="732:67">needs_extra_bit</name></expr>)</condition> <block pos:start="732:70" pos:end="736:17">{<block_content pos:start="733:21" pos:end="735:34">
                    <expr_stmt pos:start="733:21" pos:end="733:55"><expr pos:start="733:21" pos:end="733:54"><call pos:start="733:21" pos:end="733:54"><name pos:start="733:21" pos:end="733:26">memcpy</name><argument_list pos:start="733:27" pos:end="733:54">(<argument pos:start="733:28" pos:end="733:36"><expr pos:start="733:28" pos:end="733:36"><operator pos:start="733:28" pos:end="733:28">&amp;</operator><name pos:start="733:29" pos:end="733:36"><name pos:start="733:29" pos:end="733:31">buf</name><index pos:start="733:32" pos:end="733:36">[<expr pos:start="733:33" pos:end="733:35"><name pos:start="733:33" pos:end="733:35">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="733:39" pos:end="733:42"><expr pos:start="733:39" pos:end="733:42"><name pos:start="733:39" pos:end="733:42">temp</name></expr></argument>, <argument pos:start="733:45" pos:end="733:53"><expr pos:start="733:45" pos:end="733:53"><name pos:start="733:45" pos:end="733:53">temp_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="734:21" pos:end="734:37"><expr pos:start="734:21" pos:end="734:36"><name pos:start="734:21" pos:end="734:23">ret</name> <operator pos:start="734:25" pos:end="734:26">+=</operator> <name pos:start="734:28" pos:end="734:36">temp_size</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="735:21" pos:end="735:34"><expr pos:start="735:21" pos:end="735:33"><name pos:start="735:21" pos:end="735:29">temp_size</name> <operator pos:start="735:31" pos:end="735:31">=</operator> <literal type="number" pos:start="735:33" pos:end="735:33">0</literal></expr>;</expr_stmt>
                </block_content>}</block></if> <else pos:start="736:19" pos:end="737:42">else<block type="pseudo" pos:start="737:21" pos:end="737:42"><block_content pos:start="737:21" pos:end="737:42">
                    <expr_stmt pos:start="737:21" pos:end="737:42"><expr pos:start="737:21" pos:end="737:41"><name pos:start="737:21" pos:end="737:37">should_write_temp</name> <operator pos:start="737:39" pos:end="737:39">=</operator> <literal type="number" pos:start="737:41" pos:end="737:41">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="740:13" pos:end="743:13"><if pos:start="740:13" pos:end="743:13">if<condition pos:start="740:15" pos:end="740:31">(<expr pos:start="740:16" pos:end="740:30"><name pos:start="740:16" pos:end="740:30">needs_extra_bit</name></expr>)</condition> <block pos:start="740:33" pos:end="743:13">{<block_content pos:start="741:17" pos:end="742:25">
                <expr_stmt pos:start="741:17" pos:end="741:60"><expr pos:start="741:17" pos:end="741:59"><name pos:start="741:17" pos:end="741:21">flags</name> <operator pos:start="741:23" pos:end="741:23">=</operator> <operator pos:start="741:25" pos:end="741:25">(</operator><name pos:start="741:26" pos:end="741:42"><name pos:start="741:26" pos:end="741:27">mb</name><operator pos:start="741:28" pos:end="741:29">-&gt;</operator><name pos:start="741:30" pos:end="741:42">best_encoding</name></name> <operator pos:start="741:44" pos:end="741:45">==</operator> <name pos:start="741:47" pos:end="741:52">ENC_V4</name><operator pos:start="741:53" pos:end="741:53">)</operator> <operator pos:start="741:55" pos:end="741:56">&lt;&lt;</operator> <literal type="number" pos:start="741:58" pos:end="741:59">31</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="742:17" pos:end="742:25"><expr pos:start="742:17" pos:end="742:24"><name pos:start="742:17" pos:end="742:20">bits</name> <operator pos:start="742:22" pos:end="742:22">=</operator> <literal type="number" pos:start="742:24" pos:end="742:24">1</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="745:13" pos:end="749:57"><if pos:start="745:13" pos:end="746:50">if<condition pos:start="745:15" pos:end="745:43">(<expr pos:start="745:16" pos:end="745:42"><name pos:start="745:16" pos:end="745:32"><name pos:start="745:16" pos:end="745:17">mb</name><operator pos:start="745:18" pos:end="745:19">-&gt;</operator><name pos:start="745:20" pos:end="745:32">best_encoding</name></name> <operator pos:start="745:34" pos:end="745:35">==</operator> <name pos:start="745:37" pos:end="745:42">ENC_V1</name></expr>)</condition><block type="pseudo" pos:start="746:17" pos:end="746:50"><block_content pos:start="746:17" pos:end="746:50">
                <expr_stmt pos:start="746:17" pos:end="746:50"><expr pos:start="746:17" pos:end="746:49"><name pos:start="746:17" pos:end="746:33"><name pos:start="746:17" pos:end="746:20">temp</name><index pos:start="746:21" pos:end="746:33">[<expr pos:start="746:22" pos:end="746:32"><name pos:start="746:22" pos:end="746:30">temp_size</name><operator pos:start="746:31" pos:end="746:32">++</operator></expr>]</index></name> <operator pos:start="746:35" pos:end="746:35">=</operator> <name pos:start="746:37" pos:end="746:49"><name pos:start="746:37" pos:end="746:38">mb</name><operator pos:start="746:39" pos:end="746:40">-&gt;</operator><name pos:start="746:41" pos:end="746:49">v1_vector</name></name></expr>;</expr_stmt></block_content></block></if>
            <if type="elseif" pos:start="747:13" pos:end="749:57">else if<condition pos:start="747:20" pos:end="747:48">(<expr pos:start="747:21" pos:end="747:47"><name pos:start="747:21" pos:end="747:37"><name pos:start="747:21" pos:end="747:22">mb</name><operator pos:start="747:23" pos:end="747:24">-&gt;</operator><name pos:start="747:25" pos:end="747:37">best_encoding</name></name> <operator pos:start="747:39" pos:end="747:40">==</operator> <name pos:start="747:42" pos:end="747:47">ENC_V4</name></expr>)</condition><block type="pseudo" pos:start="748:17" pos:end="749:57"><block_content pos:start="748:17" pos:end="749:57">
                <for pos:start="748:17" pos:end="749:57">for<control pos:start="748:20" pos:end="748:38">(<init pos:start="748:21" pos:end="748:26"><expr pos:start="748:21" pos:end="748:25"><name pos:start="748:21" pos:end="748:21">z</name> <operator pos:start="748:23" pos:end="748:23">=</operator> <literal type="number" pos:start="748:25" pos:end="748:25">0</literal></expr>;</init> <condition pos:start="748:28" pos:end="748:33"><expr pos:start="748:28" pos:end="748:32"><name pos:start="748:28" pos:end="748:28">z</name> <operator pos:start="748:30" pos:end="748:30">&lt;</operator> <literal type="number" pos:start="748:32" pos:end="748:32">4</literal></expr>;</condition> <incr pos:start="748:35" pos:end="748:37"><expr pos:start="748:35" pos:end="748:37"><name pos:start="748:35" pos:end="748:35">z</name><operator pos:start="748:36" pos:end="748:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="749:21" pos:end="749:57"><block_content pos:start="749:21" pos:end="749:57">
                    <expr_stmt pos:start="749:21" pos:end="749:57"><expr pos:start="749:21" pos:end="749:56"><name pos:start="749:21" pos:end="749:37"><name pos:start="749:21" pos:end="749:24">temp</name><index pos:start="749:25" pos:end="749:37">[<expr pos:start="749:26" pos:end="749:36"><name pos:start="749:26" pos:end="749:34">temp_size</name><operator pos:start="749:35" pos:end="749:36">++</operator></expr>]</index></name> <operator pos:start="749:39" pos:end="749:39">=</operator> <name pos:start="749:41" pos:end="749:56"><name pos:start="749:41" pos:end="749:42">mb</name><operator pos:start="749:43" pos:end="749:44">-&gt;</operator><name pos:start="749:45" pos:end="749:53">v4_vector</name><index pos:start="749:54" pos:end="749:56">[<expr pos:start="749:55" pos:end="749:55"><name pos:start="749:55" pos:end="749:55">z</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

            <if_stmt pos:start="751:13" pos:end="755:13"><if pos:start="751:13" pos:end="755:13">if<condition pos:start="751:15" pos:end="751:33">(<expr pos:start="751:16" pos:end="751:32"><name pos:start="751:16" pos:end="751:32">should_write_temp</name></expr>)</condition> <block pos:start="751:35" pos:end="755:13">{<block_content pos:start="752:17" pos:end="754:30">
                <expr_stmt pos:start="752:17" pos:end="752:51"><expr pos:start="752:17" pos:end="752:50"><call pos:start="752:17" pos:end="752:50"><name pos:start="752:17" pos:end="752:22">memcpy</name><argument_list pos:start="752:23" pos:end="752:50">(<argument pos:start="752:24" pos:end="752:32"><expr pos:start="752:24" pos:end="752:32"><operator pos:start="752:24" pos:end="752:24">&amp;</operator><name pos:start="752:25" pos:end="752:32"><name pos:start="752:25" pos:end="752:27">buf</name><index pos:start="752:28" pos:end="752:32">[<expr pos:start="752:29" pos:end="752:31"><name pos:start="752:29" pos:end="752:31">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="752:35" pos:end="752:38"><expr pos:start="752:35" pos:end="752:38"><name pos:start="752:35" pos:end="752:38">temp</name></expr></argument>, <argument pos:start="752:41" pos:end="752:49"><expr pos:start="752:41" pos:end="752:49"><name pos:start="752:41" pos:end="752:49">temp_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="753:17" pos:end="753:33"><expr pos:start="753:17" pos:end="753:32"><name pos:start="753:17" pos:end="753:19">ret</name> <operator pos:start="753:21" pos:end="753:22">+=</operator> <name pos:start="753:24" pos:end="753:32">temp_size</name></expr>;</expr_stmt>
                <expr_stmt pos:start="754:17" pos:end="754:30"><expr pos:start="754:17" pos:end="754:29"><name pos:start="754:17" pos:end="754:25">temp_size</name> <operator pos:start="754:27" pos:end="754:27">=</operator> <literal type="number" pos:start="754:29" pos:end="754:29">0</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>

        <if_stmt pos:start="758:9" pos:end="763:9"><if pos:start="758:9" pos:end="763:9">if<condition pos:start="758:11" pos:end="758:20">(<expr pos:start="758:12" pos:end="758:19"><name pos:start="758:12" pos:end="758:15">bits</name> <operator pos:start="758:17" pos:end="758:17">&gt;</operator> <literal type="number" pos:start="758:19" pos:end="758:19">0</literal></expr>)</condition> <block pos:start="758:22" pos:end="763:9">{<block_content pos:start="759:13" pos:end="762:29">
            <expr_stmt pos:start="759:13" pos:end="759:38"><expr pos:start="759:13" pos:end="759:37"><call pos:start="759:13" pos:end="759:37"><name pos:start="759:13" pos:end="759:19">AV_WB32</name><argument_list pos:start="759:20" pos:end="759:37">(<argument pos:start="759:21" pos:end="759:29"><expr pos:start="759:21" pos:end="759:29"><operator pos:start="759:21" pos:end="759:21">&amp;</operator><name pos:start="759:22" pos:end="759:29"><name pos:start="759:22" pos:end="759:24">buf</name><index pos:start="759:25" pos:end="759:29">[<expr pos:start="759:26" pos:end="759:28"><name pos:start="759:26" pos:end="759:28">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="759:32" pos:end="759:36"><expr pos:start="759:32" pos:end="759:36"><name pos:start="759:32" pos:end="759:36">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="760:13" pos:end="760:21"><expr pos:start="760:13" pos:end="760:20"><name pos:start="760:13" pos:end="760:15">ret</name> <operator pos:start="760:17" pos:end="760:18">+=</operator> <literal type="number" pos:start="760:20" pos:end="760:20">4</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="761:13" pos:end="761:47"><expr pos:start="761:13" pos:end="761:46"><call pos:start="761:13" pos:end="761:46"><name pos:start="761:13" pos:end="761:18">memcpy</name><argument_list pos:start="761:19" pos:end="761:46">(<argument pos:start="761:20" pos:end="761:28"><expr pos:start="761:20" pos:end="761:28"><operator pos:start="761:20" pos:end="761:20">&amp;</operator><name pos:start="761:21" pos:end="761:28"><name pos:start="761:21" pos:end="761:23">buf</name><index pos:start="761:24" pos:end="761:28">[<expr pos:start="761:25" pos:end="761:27"><name pos:start="761:25" pos:end="761:27">ret</name></expr>]</index></name></expr></argument>, <argument pos:start="761:31" pos:end="761:34"><expr pos:start="761:31" pos:end="761:34"><name pos:start="761:31" pos:end="761:34">temp</name></expr></argument>, <argument pos:start="761:37" pos:end="761:45"><expr pos:start="761:37" pos:end="761:45"><name pos:start="761:37" pos:end="761:45">temp_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="762:13" pos:end="762:29"><expr pos:start="762:13" pos:end="762:28"><name pos:start="762:13" pos:end="762:15">ret</name> <operator pos:start="762:17" pos:end="762:18">+=</operator> <name pos:start="762:20" pos:end="762:28">temp_size</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="765:9" pos:end="765:89"><expr pos:start="765:9" pos:end="765:88"><call pos:start="765:9" pos:end="765:88"><name pos:start="765:9" pos:end="765:26">write_chunk_header</name><argument_list pos:start="765:27" pos:end="765:88">(<argument pos:start="765:28" pos:end="765:43"><expr pos:start="765:28" pos:end="765:43"><name pos:start="765:28" pos:end="765:30">buf</name> <operator pos:start="765:32" pos:end="765:32">+</operator> <name pos:start="765:34" pos:end="765:43">header_ofs</name></expr></argument>, <argument pos:start="765:46" pos:end="765:49"><expr pos:start="765:46" pos:end="765:49"><literal type="number" pos:start="765:46" pos:end="765:49">0x31</literal></expr></argument>, <argument pos:start="765:52" pos:end="765:87"><expr pos:start="765:52" pos:end="765:87"><name pos:start="765:52" pos:end="765:54">ret</name> <operator pos:start="765:56" pos:end="765:56">-</operator> <name pos:start="765:58" pos:end="765:67">header_ofs</name> <operator pos:start="765:69" pos:end="765:69">-</operator> <name pos:start="765:71" pos:end="765:87">CHUNK_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="767:9" pos:end="767:14">break;</break>
    </block_content>}</block></switch>

    <return pos:start="770:5" pos:end="770:15">return <expr pos:start="770:12" pos:end="770:14"><name pos:start="770:12" pos:end="770:14">ret</name></expr>;</return>
</block_content>}</block></function>

<comment type="line" pos:start="773:1" pos:end="773:50">//computes distortion of 4x4 MB in b compared to a</comment>
<function pos:start="774:1" pos:end="803:0"><type pos:start="774:1" pos:end="774:10"><specifier pos:start="774:1" pos:end="774:6">static</specifier> <name pos:start="774:8" pos:end="774:10">int</name></type> <name pos:start="774:12" pos:end="774:32">compute_mb_distortion</name><parameter_list pos:start="774:33" pos:end="776:71">(<parameter pos:start="774:34" pos:end="774:53"><decl pos:start="774:34" pos:end="774:53"><type pos:start="774:34" pos:end="774:53"><name pos:start="774:34" pos:end="774:50">CinepakEncContext</name> <modifier pos:start="774:52" pos:end="774:52">*</modifier></type><name pos:start="774:53" pos:end="774:53">s</name></decl></parameter>,
                                 <parameter pos:start="775:34" pos:end="775:51"><decl pos:start="775:34" pos:end="775:51"><type pos:start="775:34" pos:end="775:48"><name pos:start="775:34" pos:end="775:40">uint8_t</name> <modifier pos:start="775:42" pos:end="775:42">*</modifier></type><name pos:start="775:43" pos:end="775:51"><name pos:start="775:43" pos:end="775:48">a_data</name><index pos:start="775:49" pos:end="775:51">[<expr pos:start="775:50" pos:end="775:50"><literal type="number" pos:start="775:50" pos:end="775:50">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="775:54" pos:end="775:70"><decl pos:start="775:54" pos:end="775:70"><type pos:start="775:54" pos:end="775:67"><name pos:start="775:54" pos:end="775:56">int</name></type> <name pos:start="775:58" pos:end="775:70"><name pos:start="775:58" pos:end="775:67">a_linesize</name><index pos:start="775:68" pos:end="775:70">[<expr pos:start="775:69" pos:end="775:69"><literal type="number" pos:start="775:69" pos:end="775:69">4</literal></expr>]</index></name></decl></parameter>,
                                 <parameter pos:start="776:34" pos:end="776:51"><decl pos:start="776:34" pos:end="776:51"><type pos:start="776:34" pos:end="776:48"><name pos:start="776:34" pos:end="776:40">uint8_t</name> <modifier pos:start="776:42" pos:end="776:42">*</modifier></type><name pos:start="776:43" pos:end="776:51"><name pos:start="776:43" pos:end="776:48">b_data</name><index pos:start="776:49" pos:end="776:51">[<expr pos:start="776:50" pos:end="776:50"><literal type="number" pos:start="776:50" pos:end="776:50">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="776:54" pos:end="776:70"><decl pos:start="776:54" pos:end="776:70"><type pos:start="776:54" pos:end="776:67"><name pos:start="776:54" pos:end="776:56">int</name></type> <name pos:start="776:58" pos:end="776:70"><name pos:start="776:58" pos:end="776:67">b_linesize</name><index pos:start="776:68" pos:end="776:70">[<expr pos:start="776:69" pos:end="776:69"><literal type="number" pos:start="776:69" pos:end="776:69">4</literal></expr>]</index></name></decl></parameter>)</parameter_list>
<block pos:start="777:1" pos:end="803:0">{<block_content pos:start="778:5" pos:end="798:15">
    <decl_stmt pos:start="778:5" pos:end="778:28"><decl pos:start="778:5" pos:end="778:9"><type pos:start="778:5" pos:end="778:7"><name pos:start="778:5" pos:end="778:7">int</name></type> <name pos:start="778:9" pos:end="778:9">x</name></decl>, <decl pos:start="778:12" pos:end="778:12"><type ref="prev" pos:start="778:5" pos:end="778:7"/><name pos:start="778:12" pos:end="778:12">y</name></decl>, <decl pos:start="778:15" pos:end="778:15"><type ref="prev" pos:start="778:5" pos:end="778:7"/><name pos:start="778:15" pos:end="778:15">p</name></decl>, <decl pos:start="778:18" pos:end="778:18"><type ref="prev" pos:start="778:5" pos:end="778:7"/><name pos:start="778:18" pos:end="778:18">d</name></decl>, <decl pos:start="778:21" pos:end="778:27"><type ref="prev" pos:start="778:5" pos:end="778:7"/><name pos:start="778:21" pos:end="778:23">ret</name> <init pos:start="778:25" pos:end="778:27">= <expr pos:start="778:27" pos:end="778:27"><literal type="number" pos:start="778:27" pos:end="778:27">0</literal></expr></init></decl>;</decl_stmt>

    <for pos:start="780:5" pos:end="785:5">for<control pos:start="780:8" pos:end="780:32">(<init pos:start="780:9" pos:end="780:14"><expr pos:start="780:9" pos:end="780:13"><name pos:start="780:9" pos:end="780:9">y</name> <operator pos:start="780:11" pos:end="780:11">=</operator> <literal type="number" pos:start="780:13" pos:end="780:13">0</literal></expr>;</init> <condition pos:start="780:16" pos:end="780:27"><expr pos:start="780:16" pos:end="780:26"><name pos:start="780:16" pos:end="780:16">y</name> <operator pos:start="780:18" pos:end="780:18">&lt;</operator> <name pos:start="780:20" pos:end="780:26">MB_SIZE</name></expr>;</condition> <incr pos:start="780:29" pos:end="780:31"><expr pos:start="780:29" pos:end="780:31"><name pos:start="780:29" pos:end="780:29">y</name><operator pos:start="780:30" pos:end="780:31">++</operator></expr></incr>)</control> <block pos:start="780:34" pos:end="785:5">{<block_content pos:start="781:9" pos:end="784:9">
        <for pos:start="781:9" pos:end="784:9">for<control pos:start="781:12" pos:end="781:36">(<init pos:start="781:13" pos:end="781:18"><expr pos:start="781:13" pos:end="781:17"><name pos:start="781:13" pos:end="781:13">x</name> <operator pos:start="781:15" pos:end="781:15">=</operator> <literal type="number" pos:start="781:17" pos:end="781:17">0</literal></expr>;</init> <condition pos:start="781:20" pos:end="781:31"><expr pos:start="781:20" pos:end="781:30"><name pos:start="781:20" pos:end="781:20">x</name> <operator pos:start="781:22" pos:end="781:22">&lt;</operator> <name pos:start="781:24" pos:end="781:30">MB_SIZE</name></expr>;</condition> <incr pos:start="781:33" pos:end="781:35"><expr pos:start="781:33" pos:end="781:35"><name pos:start="781:33" pos:end="781:33">x</name><operator pos:start="781:34" pos:end="781:35">++</operator></expr></incr>)</control> <block pos:start="781:38" pos:end="784:9">{<block_content pos:start="782:13" pos:end="783:23">
            <expr_stmt pos:start="782:13" pos:end="782:80"><expr pos:start="782:13" pos:end="782:79"><name pos:start="782:13" pos:end="782:13">d</name> <operator pos:start="782:15" pos:end="782:15">=</operator> <name pos:start="782:17" pos:end="782:46"><name pos:start="782:17" pos:end="782:22">a_data</name><index pos:start="782:23" pos:end="782:25">[<expr pos:start="782:24" pos:end="782:24"><literal type="number" pos:start="782:24" pos:end="782:24">0</literal></expr>]</index><index pos:start="782:26" pos:end="782:46">[<expr pos:start="782:27" pos:end="782:45"><name pos:start="782:27" pos:end="782:27">x</name> <operator pos:start="782:29" pos:end="782:29">+</operator> <name pos:start="782:31" pos:end="782:31">y</name><operator pos:start="782:32" pos:end="782:32">*</operator><name pos:start="782:33" pos:end="782:45"><name pos:start="782:33" pos:end="782:42">a_linesize</name><index pos:start="782:43" pos:end="782:45">[<expr pos:start="782:44" pos:end="782:44"><literal type="number" pos:start="782:44" pos:end="782:44">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="782:48" pos:end="782:48">-</operator> <name pos:start="782:50" pos:end="782:79"><name pos:start="782:50" pos:end="782:55">b_data</name><index pos:start="782:56" pos:end="782:58">[<expr pos:start="782:57" pos:end="782:57"><literal type="number" pos:start="782:57" pos:end="782:57">0</literal></expr>]</index><index pos:start="782:59" pos:end="782:79">[<expr pos:start="782:60" pos:end="782:78"><name pos:start="782:60" pos:end="782:60">x</name> <operator pos:start="782:62" pos:end="782:62">+</operator> <name pos:start="782:64" pos:end="782:64">y</name><operator pos:start="782:65" pos:end="782:65">*</operator><name pos:start="782:66" pos:end="782:78"><name pos:start="782:66" pos:end="782:75">b_linesize</name><index pos:start="782:76" pos:end="782:78">[<expr pos:start="782:77" pos:end="782:77"><literal type="number" pos:start="782:77" pos:end="782:77">0</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="783:13" pos:end="783:23"><expr pos:start="783:13" pos:end="783:22"><name pos:start="783:13" pos:end="783:15">ret</name> <operator pos:start="783:17" pos:end="783:18">+=</operator> <name pos:start="783:20" pos:end="783:20">d</name><operator pos:start="783:21" pos:end="783:21">*</operator><name pos:start="783:22" pos:end="783:22">d</name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>

    <if_stmt pos:start="787:5" pos:end="796:5"><if pos:start="787:5" pos:end="796:5">if<condition pos:start="787:7" pos:end="787:38">(<expr pos:start="787:8" pos:end="787:37"><name pos:start="787:8" pos:end="787:17"><name pos:start="787:8" pos:end="787:8">s</name><operator pos:start="787:9" pos:end="787:10">-&gt;</operator><name pos:start="787:11" pos:end="787:17">pix_fmt</name></name> <operator pos:start="787:19" pos:end="787:20">==</operator> <name pos:start="787:22" pos:end="787:37">AV_PIX_FMT_RGB24</name></expr>)</condition> <block pos:start="787:40" pos:end="796:5">{<block_content pos:start="788:9" pos:end="795:9">
        <for pos:start="788:9" pos:end="795:9">for<control pos:start="788:12" pos:end="788:31">(<init pos:start="788:13" pos:end="788:18"><expr pos:start="788:13" pos:end="788:17"><name pos:start="788:13" pos:end="788:13">p</name> <operator pos:start="788:15" pos:end="788:15">=</operator> <literal type="number" pos:start="788:17" pos:end="788:17">1</literal></expr>;</init> <condition pos:start="788:20" pos:end="788:26"><expr pos:start="788:20" pos:end="788:25"><name pos:start="788:20" pos:end="788:20">p</name> <operator pos:start="788:22" pos:end="788:23">&lt;=</operator> <literal type="number" pos:start="788:25" pos:end="788:25">2</literal></expr>;</condition> <incr pos:start="788:28" pos:end="788:30"><expr pos:start="788:28" pos:end="788:30"><name pos:start="788:28" pos:end="788:28">p</name><operator pos:start="788:29" pos:end="788:30">++</operator></expr></incr>)</control> <block pos:start="788:33" pos:end="795:9">{<block_content pos:start="789:13" pos:end="794:13">
            <for pos:start="789:13" pos:end="794:13">for<control pos:start="789:16" pos:end="789:42">(<init pos:start="789:17" pos:end="789:22"><expr pos:start="789:17" pos:end="789:21"><name pos:start="789:17" pos:end="789:17">y</name> <operator pos:start="789:19" pos:end="789:19">=</operator> <literal type="number" pos:start="789:21" pos:end="789:21">0</literal></expr>;</init> <condition pos:start="789:24" pos:end="789:37"><expr pos:start="789:24" pos:end="789:36"><name pos:start="789:24" pos:end="789:24">y</name> <operator pos:start="789:26" pos:end="789:26">&lt;</operator> <name pos:start="789:28" pos:end="789:34">MB_SIZE</name><operator pos:start="789:35" pos:end="789:35">/</operator><literal type="number" pos:start="789:36" pos:end="789:36">2</literal></expr>;</condition> <incr pos:start="789:39" pos:end="789:41"><expr pos:start="789:39" pos:end="789:41"><name pos:start="789:39" pos:end="789:39">y</name><operator pos:start="789:40" pos:end="789:41">++</operator></expr></incr>)</control> <block pos:start="789:44" pos:end="794:13">{<block_content pos:start="790:17" pos:end="793:17">
                <for pos:start="790:17" pos:end="793:17">for<control pos:start="790:20" pos:end="790:46">(<init pos:start="790:21" pos:end="790:26"><expr pos:start="790:21" pos:end="790:25"><name pos:start="790:21" pos:end="790:21">x</name> <operator pos:start="790:23" pos:end="790:23">=</operator> <literal type="number" pos:start="790:25" pos:end="790:25">0</literal></expr>;</init> <condition pos:start="790:28" pos:end="790:41"><expr pos:start="790:28" pos:end="790:40"><name pos:start="790:28" pos:end="790:28">x</name> <operator pos:start="790:30" pos:end="790:30">&lt;</operator> <name pos:start="790:32" pos:end="790:38">MB_SIZE</name><operator pos:start="790:39" pos:end="790:39">/</operator><literal type="number" pos:start="790:40" pos:end="790:40">2</literal></expr>;</condition> <incr pos:start="790:43" pos:end="790:45"><expr pos:start="790:43" pos:end="790:45"><name pos:start="790:43" pos:end="790:43">x</name><operator pos:start="790:44" pos:end="790:45">++</operator></expr></incr>)</control> <block pos:start="790:48" pos:end="793:17">{<block_content pos:start="791:21" pos:end="792:31">
                    <expr_stmt pos:start="791:21" pos:end="791:88"><expr pos:start="791:21" pos:end="791:87"><name pos:start="791:21" pos:end="791:21">d</name> <operator pos:start="791:23" pos:end="791:23">=</operator> <name pos:start="791:25" pos:end="791:54"><name pos:start="791:25" pos:end="791:30">a_data</name><index pos:start="791:31" pos:end="791:33">[<expr pos:start="791:32" pos:end="791:32"><name pos:start="791:32" pos:end="791:32">p</name></expr>]</index><index pos:start="791:34" pos:end="791:54">[<expr pos:start="791:35" pos:end="791:53"><name pos:start="791:35" pos:end="791:35">x</name> <operator pos:start="791:37" pos:end="791:37">+</operator> <name pos:start="791:39" pos:end="791:39">y</name><operator pos:start="791:40" pos:end="791:40">*</operator><name pos:start="791:41" pos:end="791:53"><name pos:start="791:41" pos:end="791:50">a_linesize</name><index pos:start="791:51" pos:end="791:53">[<expr pos:start="791:52" pos:end="791:52"><name pos:start="791:52" pos:end="791:52">p</name></expr>]</index></name></expr>]</index></name> <operator pos:start="791:56" pos:end="791:56">-</operator> <name pos:start="791:58" pos:end="791:87"><name pos:start="791:58" pos:end="791:63">b_data</name><index pos:start="791:64" pos:end="791:66">[<expr pos:start="791:65" pos:end="791:65"><name pos:start="791:65" pos:end="791:65">p</name></expr>]</index><index pos:start="791:67" pos:end="791:87">[<expr pos:start="791:68" pos:end="791:86"><name pos:start="791:68" pos:end="791:68">x</name> <operator pos:start="791:70" pos:end="791:70">+</operator> <name pos:start="791:72" pos:end="791:72">y</name><operator pos:start="791:73" pos:end="791:73">*</operator><name pos:start="791:74" pos:end="791:86"><name pos:start="791:74" pos:end="791:83">b_linesize</name><index pos:start="791:84" pos:end="791:86">[<expr pos:start="791:85" pos:end="791:85"><name pos:start="791:85" pos:end="791:85">p</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="792:21" pos:end="792:31"><expr pos:start="792:21" pos:end="792:30"><name pos:start="792:21" pos:end="792:23">ret</name> <operator pos:start="792:25" pos:end="792:26">+=</operator> <name pos:start="792:28" pos:end="792:28">d</name><operator pos:start="792:29" pos:end="792:29">*</operator><name pos:start="792:30" pos:end="792:30">d</name></expr>;</expr_stmt>
                </block_content>}</block></for>
            </block_content>}</block></for>
        </block_content>}</block></for>
    </block_content>}</block></if></if_stmt>

    <return pos:start="798:5" pos:end="798:15">return <expr pos:start="798:12" pos:end="798:14"><name pos:start="798:12" pos:end="798:14">ret</name></expr>;</return>
</block_content>}</block></function>

<comment type="line" pos:start="801:1" pos:end="801:52">// return the possibly adjusted size of the codebook</comment>
<cpp:define pos:start="802:1" pos:end="802:39">#<cpp:directive pos:start="802:2" pos:end="802:7">define</cpp:directive> <cpp:macro pos:start="802:9" pos:end="802:18"><name pos:start="802:9" pos:end="802:15">CERTAIN</name><parameter_list pos:start="802:16" pos:end="802:18">(<parameter pos:start="802:17" pos:end="802:17"><type pos:start="802:17" pos:end="802:17"><name pos:start="802:17" pos:end="802:17">x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="802:20" pos:end="802:39">((x)!=ENC_UNCERTAIN)</cpp:value></cpp:define>
<function pos:start="803:1" pos:end="925:1"><type pos:start="803:1" pos:end="803:10"><specifier pos:start="803:1" pos:end="803:6">static</specifier> <name pos:start="803:8" pos:end="803:10">int</name></type> <name pos:start="803:12" pos:end="803:19">quantize</name><parameter_list pos:start="803:20" pos:end="806:41">(<parameter pos:start="803:21" pos:end="803:40"><decl pos:start="803:21" pos:end="803:40"><type pos:start="803:21" pos:end="803:40"><name pos:start="803:21" pos:end="803:37">CinepakEncContext</name> <modifier pos:start="803:39" pos:end="803:39">*</modifier></type><name pos:start="803:40" pos:end="803:40">s</name></decl></parameter>, <parameter pos:start="803:43" pos:end="803:47"><decl pos:start="803:43" pos:end="803:47"><type pos:start="803:43" pos:end="803:47"><name pos:start="803:43" pos:end="803:45">int</name></type> <name pos:start="803:47" pos:end="803:47">h</name></decl></parameter>,
                    <parameter pos:start="804:21" pos:end="804:36"><decl pos:start="804:21" pos:end="804:36"><type pos:start="804:21" pos:end="804:33"><name pos:start="804:21" pos:end="804:27">uint8_t</name> <modifier pos:start="804:29" pos:end="804:29">*</modifier></type><name pos:start="804:30" pos:end="804:36"><name pos:start="804:30" pos:end="804:33">data</name><index pos:start="804:34" pos:end="804:36">[<expr pos:start="804:35" pos:end="804:35"><literal type="number" pos:start="804:35" pos:end="804:35">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="804:39" pos:end="804:53"><decl pos:start="804:39" pos:end="804:53"><type pos:start="804:39" pos:end="804:50"><name pos:start="804:39" pos:end="804:41">int</name></type> <name pos:start="804:43" pos:end="804:53"><name pos:start="804:43" pos:end="804:50">linesize</name><index pos:start="804:51" pos:end="804:53">[<expr pos:start="804:52" pos:end="804:52"><literal type="number" pos:start="804:52" pos:end="804:52">4</literal></expr>]</index></name></decl></parameter>,
                    <parameter pos:start="805:21" pos:end="805:30"><decl pos:start="805:21" pos:end="805:30"><type pos:start="805:21" pos:end="805:30"><name pos:start="805:21" pos:end="805:23">int</name></type> <name pos:start="805:25" pos:end="805:30">v1mode</name></decl></parameter>, <parameter pos:start="805:33" pos:end="805:48"><decl pos:start="805:33" pos:end="805:48"><type pos:start="805:33" pos:end="805:48"><name pos:start="805:33" pos:end="805:42">strip_info</name> <modifier pos:start="805:44" pos:end="805:44">*</modifier></type><name pos:start="805:45" pos:end="805:48">info</name></decl></parameter>,
                    <parameter pos:start="806:21" pos:end="806:40"><decl pos:start="806:21" pos:end="806:40"><type pos:start="806:21" pos:end="806:40"><name pos:start="806:21" pos:end="806:31">mb_encoding</name></type> <name pos:start="806:33" pos:end="806:40">encoding</name></decl></parameter>)</parameter_list>
<block pos:start="807:1" pos:end="925:1">{<block_content pos:start="808:5" pos:end="924:16">
    <decl_stmt pos:start="808:5" pos:end="808:57"><decl pos:start="808:5" pos:end="808:9"><type pos:start="808:5" pos:end="808:7"><name pos:start="808:5" pos:end="808:7">int</name></type> <name pos:start="808:9" pos:end="808:9">x</name></decl>, <decl pos:start="808:12" pos:end="808:12"><type ref="prev" pos:start="808:5" pos:end="808:7"/><name pos:start="808:12" pos:end="808:12">y</name></decl>, <decl pos:start="808:15" pos:end="808:15"><type ref="prev" pos:start="808:5" pos:end="808:7"/><name pos:start="808:15" pos:end="808:15">i</name></decl>, <decl pos:start="808:18" pos:end="808:18"><type ref="prev" pos:start="808:5" pos:end="808:7"/><name pos:start="808:18" pos:end="808:18">j</name></decl>, <decl pos:start="808:21" pos:end="808:21"><type ref="prev" pos:start="808:5" pos:end="808:7"/><name pos:start="808:21" pos:end="808:21">k</name></decl>, <decl pos:start="808:24" pos:end="808:25"><type ref="prev" pos:start="808:5" pos:end="808:7"/><name pos:start="808:24" pos:end="808:25">x2</name></decl>, <decl pos:start="808:28" pos:end="808:29"><type ref="prev" pos:start="808:5" pos:end="808:7"/><name pos:start="808:28" pos:end="808:29">y2</name></decl>, <decl pos:start="808:32" pos:end="808:33"><type ref="prev" pos:start="808:5" pos:end="808:7"/><name pos:start="808:32" pos:end="808:33">x3</name></decl>, <decl pos:start="808:36" pos:end="808:37"><type ref="prev" pos:start="808:5" pos:end="808:7"/><name pos:start="808:36" pos:end="808:37">y3</name></decl>, <decl pos:start="808:40" pos:end="808:44"><type ref="prev" pos:start="808:5" pos:end="808:7"/><name pos:start="808:40" pos:end="808:44">plane</name></decl>, <decl pos:start="808:47" pos:end="808:51"><type ref="prev" pos:start="808:5" pos:end="808:7"/><name pos:start="808:47" pos:end="808:51">shift</name></decl>, <decl pos:start="808:54" pos:end="808:56"><type ref="prev" pos:start="808:5" pos:end="808:7"/><name pos:start="808:54" pos:end="808:56">mbn</name></decl>;</decl_stmt>
    <decl_stmt pos:start="809:5" pos:end="809:60"><decl pos:start="809:5" pos:end="809:59"><type pos:start="809:5" pos:end="809:7"><name pos:start="809:5" pos:end="809:7">int</name></type> <name pos:start="809:9" pos:end="809:18">entry_size</name> <init pos:start="809:20" pos:end="809:59">= <expr pos:start="809:22" pos:end="809:59"><ternary pos:start="809:22" pos:end="809:59"><condition pos:start="809:22" pos:end="809:53"><expr pos:start="809:22" pos:end="809:51"><name pos:start="809:22" pos:end="809:31"><name pos:start="809:22" pos:end="809:22">s</name><operator pos:start="809:23" pos:end="809:24">-&gt;</operator><name pos:start="809:25" pos:end="809:31">pix_fmt</name></name> <operator pos:start="809:33" pos:end="809:34">==</operator> <name pos:start="809:36" pos:end="809:51">AV_PIX_FMT_RGB24</name></expr> ?</condition><then pos:start="809:55" pos:end="809:55"> <expr pos:start="809:55" pos:end="809:55"><literal type="number" pos:start="809:55" pos:end="809:55">6</literal></expr> </then><else pos:start="809:57" pos:end="809:59">: <expr pos:start="809:59" pos:end="809:59"><literal type="number" pos:start="809:59" pos:end="809:59">4</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="810:5" pos:end="810:67"><decl pos:start="810:5" pos:end="810:66"><type pos:start="810:5" pos:end="810:9"><name pos:start="810:5" pos:end="810:7">int</name> <modifier pos:start="810:9" pos:end="810:9">*</modifier></type><name pos:start="810:10" pos:end="810:17">codebook</name> <init pos:start="810:19" pos:end="810:66">= <expr pos:start="810:21" pos:end="810:66"><ternary pos:start="810:21" pos:end="810:66"><condition pos:start="810:21" pos:end="810:28"><expr pos:start="810:21" pos:end="810:26"><name pos:start="810:21" pos:end="810:26">v1mode</name></expr> ?</condition><then pos:start="810:30" pos:end="810:46"> <expr pos:start="810:30" pos:end="810:46"><name pos:start="810:30" pos:end="810:46"><name pos:start="810:30" pos:end="810:33">info</name><operator pos:start="810:34" pos:end="810:35">-&gt;</operator><name pos:start="810:36" pos:end="810:46">v1_codebook</name></name></expr> </then><else pos:start="810:48" pos:end="810:66">: <expr pos:start="810:50" pos:end="810:66"><name pos:start="810:50" pos:end="810:66"><name pos:start="810:50" pos:end="810:53">info</name><operator pos:start="810:54" pos:end="810:55">-&gt;</operator><name pos:start="810:56" pos:end="810:66">v4_codebook</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="811:5" pos:end="811:54"><decl pos:start="811:5" pos:end="811:53"><type pos:start="811:5" pos:end="811:7"><name pos:start="811:5" pos:end="811:7">int</name></type> <name pos:start="811:9" pos:end="811:12">size</name> <init pos:start="811:14" pos:end="811:53">= <expr pos:start="811:16" pos:end="811:53"><ternary pos:start="811:16" pos:end="811:53"><condition pos:start="811:16" pos:end="811:23"><expr pos:start="811:16" pos:end="811:21"><name pos:start="811:16" pos:end="811:21">v1mode</name></expr> ?</condition><then pos:start="811:25" pos:end="811:37"> <expr pos:start="811:25" pos:end="811:37"><name pos:start="811:25" pos:end="811:37"><name pos:start="811:25" pos:end="811:28">info</name><operator pos:start="811:29" pos:end="811:30">-&gt;</operator><name pos:start="811:31" pos:end="811:37">v1_size</name></name></expr> </then><else pos:start="811:39" pos:end="811:53">: <expr pos:start="811:41" pos:end="811:53"><name pos:start="811:41" pos:end="811:53"><name pos:start="811:41" pos:end="811:44">info</name><operator pos:start="811:45" pos:end="811:46">-&gt;</operator><name pos:start="811:47" pos:end="811:53">v4_size</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="812:5" pos:end="812:28"><decl pos:start="812:5" pos:end="812:27"><type pos:start="812:5" pos:end="812:11"><name pos:start="812:5" pos:end="812:11">int64_t</name></type> <name pos:start="812:13" pos:end="812:23">total_error</name> <init pos:start="812:25" pos:end="812:27">= <expr pos:start="812:27" pos:end="812:27"><literal type="number" pos:start="812:27" pos:end="812:27">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="813:5" pos:end="813:39"><decl pos:start="813:5" pos:end="813:38"><type pos:start="813:5" pos:end="813:11"><name pos:start="813:5" pos:end="813:11">uint8_t</name></type> <name pos:start="813:13" pos:end="813:38"><name pos:start="813:13" pos:end="813:23">vq_pict_buf</name><index pos:start="813:24" pos:end="813:38">[<expr pos:start="813:25" pos:end="813:37"><operator pos:start="813:25" pos:end="813:25">(</operator><name pos:start="813:26" pos:end="813:32">MB_AREA</name><operator pos:start="813:33" pos:end="813:33">*</operator><literal type="number" pos:start="813:34" pos:end="813:34">3</literal><operator pos:start="813:35" pos:end="813:35">)</operator><operator pos:start="813:36" pos:end="813:36">/</operator><literal type="number" pos:start="813:37" pos:end="813:37">2</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="814:5" pos:end="814:46"><decl pos:start="814:5" pos:end="814:28"><type pos:start="814:5" pos:end="814:13"><name pos:start="814:5" pos:end="814:11">uint8_t</name> <modifier pos:start="814:13" pos:end="814:13">*</modifier></type><name pos:start="814:14" pos:end="814:28"><name pos:start="814:14" pos:end="814:21">sub_data</name>    <index pos:start="814:26" pos:end="814:28">[<expr pos:start="814:27" pos:end="814:27"><literal type="number" pos:start="814:27" pos:end="814:27">4</literal></expr>]</index></name></decl>, <decl pos:start="814:31" pos:end="814:45"><type ref="prev" pos:start="814:5" pos:end="814:13"><modifier pos:start="814:31" pos:end="814:31">*</modifier></type><name pos:start="814:32" pos:end="814:45"><name pos:start="814:32" pos:end="814:38">vq_data</name>    <index pos:start="814:43" pos:end="814:45">[<expr pos:start="814:44" pos:end="814:44"><literal type="number" pos:start="814:44" pos:end="814:44">4</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="815:5" pos:end="815:46"><decl pos:start="815:5" pos:end="815:28"><type pos:start="815:5" pos:end="815:7"><name pos:start="815:5" pos:end="815:7">int</name></type>      <name pos:start="815:14" pos:end="815:28"><name pos:start="815:14" pos:end="815:25">sub_linesize</name><index pos:start="815:26" pos:end="815:28">[<expr pos:start="815:27" pos:end="815:27"><literal type="number" pos:start="815:27" pos:end="815:27">4</literal></expr>]</index></name></decl>,  <decl pos:start="815:32" pos:end="815:45"><type ref="prev" pos:start="815:5" pos:end="815:7"/><name pos:start="815:32" pos:end="815:45"><name pos:start="815:32" pos:end="815:42">vq_linesize</name><index pos:start="815:43" pos:end="815:45">[<expr pos:start="815:44" pos:end="815:44"><literal type="number" pos:start="815:44" pos:end="815:44">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <for pos:start="817:5" pos:end="863:5">for<control pos:start="817:8" pos:end="817:45">(<init pos:start="817:9" pos:end="817:24"><expr pos:start="817:9" pos:end="817:23"><name pos:start="817:9" pos:end="817:11">mbn</name> <operator pos:start="817:13" pos:end="817:13">=</operator> <name pos:start="817:15" pos:end="817:15">i</name> <operator pos:start="817:17" pos:end="817:17">=</operator> <name pos:start="817:19" pos:end="817:19">y</name> <operator pos:start="817:21" pos:end="817:21">=</operator> <literal type="number" pos:start="817:23" pos:end="817:23">0</literal></expr>;</init> <condition pos:start="817:26" pos:end="817:31"><expr pos:start="817:26" pos:end="817:30"><name pos:start="817:26" pos:end="817:26">y</name> <operator pos:start="817:28" pos:end="817:28">&lt;</operator> <name pos:start="817:30" pos:end="817:30">h</name></expr>;</condition> <incr pos:start="817:33" pos:end="817:44"><expr pos:start="817:33" pos:end="817:44"><name pos:start="817:33" pos:end="817:33">y</name> <operator pos:start="817:35" pos:end="817:36">+=</operator> <name pos:start="817:38" pos:end="817:44">MB_SIZE</name></expr></incr>)</control> <block pos:start="817:47" pos:end="863:5">{<block_content pos:start="818:9" pos:end="862:9">
        <for pos:start="818:9" pos:end="862:9">for<control pos:start="818:12" pos:end="818:49">(<init pos:start="818:13" pos:end="818:18"><expr pos:start="818:13" pos:end="818:17"><name pos:start="818:13" pos:end="818:13">x</name> <operator pos:start="818:15" pos:end="818:15">=</operator> <literal type="number" pos:start="818:17" pos:end="818:17">0</literal></expr>;</init> <condition pos:start="818:20" pos:end="818:28"><expr pos:start="818:20" pos:end="818:27"><name pos:start="818:20" pos:end="818:20">x</name> <operator pos:start="818:22" pos:end="818:22">&lt;</operator> <name pos:start="818:24" pos:end="818:27"><name pos:start="818:24" pos:end="818:24">s</name><operator pos:start="818:25" pos:end="818:26">-&gt;</operator><name pos:start="818:27" pos:end="818:27">w</name></name></expr>;</condition> <incr pos:start="818:30" pos:end="818:48"><expr pos:start="818:30" pos:end="818:41"><name pos:start="818:30" pos:end="818:30">x</name> <operator pos:start="818:32" pos:end="818:33">+=</operator> <name pos:start="818:35" pos:end="818:41">MB_SIZE</name></expr><operator pos:start="818:42" pos:end="818:42">,</operator> <expr pos:start="818:44" pos:end="818:48"><operator pos:start="818:44" pos:end="818:45">++</operator><name pos:start="818:46" pos:end="818:48">mbn</name></expr></incr>)</control> <block pos:start="818:51" pos:end="862:9">{<block_content pos:start="819:13" pos:end="861:32">
            <decl_stmt pos:start="819:13" pos:end="819:22"><decl pos:start="819:13" pos:end="819:21"><type pos:start="819:13" pos:end="819:17"><name pos:start="819:13" pos:end="819:15">int</name> <modifier pos:start="819:17" pos:end="819:17">*</modifier></type><name pos:start="819:18" pos:end="819:21">base</name></decl>;</decl_stmt>

            <if_stmt pos:start="821:13" pos:end="824:13"><if pos:start="821:13" pos:end="824:13">if<condition pos:start="821:15" pos:end="821:33">(<expr pos:start="821:16" pos:end="821:32"><call pos:start="821:16" pos:end="821:32"><name pos:start="821:16" pos:end="821:22">CERTAIN</name><argument_list pos:start="821:23" pos:end="821:32">(<argument pos:start="821:24" pos:end="821:31"><expr pos:start="821:24" pos:end="821:31"><name pos:start="821:24" pos:end="821:31">encoding</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="821:35" pos:end="824:13">{<block_content pos:start="823:16" pos:end="823:65">
<comment type="line" pos:start="822:1" pos:end="822:73">// use for the training only the blocks known to be to be encoded [sic:-]</comment>
               <if_stmt pos:start="823:16" pos:end="823:65"><if pos:start="823:16" pos:end="823:65">if<condition pos:start="823:18" pos:end="823:55">(<expr pos:start="823:19" pos:end="823:54"><name pos:start="823:19" pos:end="823:28"><name pos:start="823:19" pos:end="823:19">s</name><operator pos:start="823:20" pos:end="823:21">-&gt;</operator><name pos:start="823:22" pos:end="823:23">mb</name><index pos:start="823:24" pos:end="823:28">[<expr pos:start="823:25" pos:end="823:27"><name pos:start="823:25" pos:end="823:27">mbn</name></expr>]</index></name><operator pos:start="823:29" pos:end="823:29">.</operator><name pos:start="823:30" pos:end="823:42">best_encoding</name> <operator pos:start="823:44" pos:end="823:45">!=</operator> <name pos:start="823:47" pos:end="823:54">encoding</name></expr>)</condition><block type="pseudo" pos:start="823:57" pos:end="823:65"><block_content pos:start="823:57" pos:end="823:65"> <continue pos:start="823:57" pos:end="823:65">continue;</continue></block_content></block></if></if_stmt>
            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="826:13" pos:end="826:52"><expr pos:start="826:13" pos:end="826:51"><name pos:start="826:13" pos:end="826:16">base</name> <operator pos:start="826:18" pos:end="826:18">=</operator> <name pos:start="826:20" pos:end="826:36"><name pos:start="826:20" pos:end="826:20">s</name><operator pos:start="826:21" pos:end="826:22">-&gt;</operator><name pos:start="826:23" pos:end="826:36">codebook_input</name></name> <operator pos:start="826:38" pos:end="826:38">+</operator> <name pos:start="826:40" pos:end="826:40">i</name><operator pos:start="826:41" pos:end="826:41">*</operator><name pos:start="826:42" pos:end="826:51">entry_size</name></expr>;</expr_stmt>
            <if_stmt pos:start="827:13" pos:end="860:13"><if pos:start="827:13" pos:end="841:13">if<condition pos:start="827:15" pos:end="827:22">(<expr pos:start="827:16" pos:end="827:21"><name pos:start="827:16" pos:end="827:21">v1mode</name></expr>)</condition> <block pos:start="827:24" pos:end="841:13">{<block_content pos:start="829:17" pos:end="840:17">
                <comment type="line" pos:start="828:17" pos:end="828:27">//subsample</comment>
                <for pos:start="829:17" pos:end="840:17">for<control pos:start="829:20" pos:end="829:57">(<init pos:start="829:21" pos:end="829:31"><expr pos:start="829:21" pos:end="829:30"><name pos:start="829:21" pos:end="829:21">j</name> <operator pos:start="829:23" pos:end="829:23">=</operator> <name pos:start="829:25" pos:end="829:26">y2</name> <operator pos:start="829:28" pos:end="829:28">=</operator> <literal type="number" pos:start="829:30" pos:end="829:30">0</literal></expr>;</init> <condition pos:start="829:33" pos:end="829:48"><expr pos:start="829:33" pos:end="829:47"><name pos:start="829:33" pos:end="829:34">y2</name> <operator pos:start="829:36" pos:end="829:36">&lt;</operator> <name pos:start="829:38" pos:end="829:47">entry_size</name></expr>;</condition> <incr pos:start="829:50" pos:end="829:56"><expr pos:start="829:50" pos:end="829:56"><name pos:start="829:50" pos:end="829:51">y2</name> <operator pos:start="829:53" pos:end="829:54">+=</operator> <literal type="number" pos:start="829:56" pos:end="829:56">2</literal></expr></incr>)</control> <block pos:start="829:59" pos:end="840:17">{<block_content pos:start="830:21" pos:end="839:21">
                    <for pos:start="830:21" pos:end="839:21">for<control pos:start="830:24" pos:end="830:53">(<init pos:start="830:25" pos:end="830:31"><expr pos:start="830:25" pos:end="830:30"><name pos:start="830:25" pos:end="830:26">x2</name> <operator pos:start="830:28" pos:end="830:28">=</operator> <literal type="number" pos:start="830:30" pos:end="830:30">0</literal></expr>;</init> <condition pos:start="830:33" pos:end="830:39"><expr pos:start="830:33" pos:end="830:38"><name pos:start="830:33" pos:end="830:34">x2</name> <operator pos:start="830:36" pos:end="830:36">&lt;</operator> <literal type="number" pos:start="830:38" pos:end="830:38">4</literal></expr>;</condition> <incr pos:start="830:41" pos:end="830:52"><expr pos:start="830:41" pos:end="830:47"><name pos:start="830:41" pos:end="830:42">x2</name> <operator pos:start="830:44" pos:end="830:45">+=</operator> <literal type="number" pos:start="830:47" pos:end="830:47">2</literal></expr><operator pos:start="830:48" pos:end="830:48">,</operator> <expr pos:start="830:50" pos:end="830:52"><name pos:start="830:50" pos:end="830:50">j</name><operator pos:start="830:51" pos:end="830:52">++</operator></expr></incr>)</control> <block pos:start="830:55" pos:end="839:21">{<block_content pos:start="831:25" pos:end="838:120">
                        <expr_stmt pos:start="831:25" pos:end="831:59"><expr pos:start="831:25" pos:end="831:58"><name pos:start="831:25" pos:end="831:29">plane</name> <operator pos:start="831:31" pos:end="831:31">=</operator> <ternary pos:start="831:33" pos:end="831:58"><condition pos:start="831:33" pos:end="831:40"><expr pos:start="831:33" pos:end="831:38"><name pos:start="831:33" pos:end="831:34">y2</name> <operator pos:start="831:36" pos:end="831:36">&lt;</operator> <literal type="number" pos:start="831:38" pos:end="831:38">4</literal></expr> ?</condition><then pos:start="831:42" pos:end="831:42"> <expr pos:start="831:42" pos:end="831:42"><literal type="number" pos:start="831:42" pos:end="831:42">0</literal></expr> </then><else pos:start="831:44" pos:end="831:58">: <expr pos:start="831:46" pos:end="831:58"><literal type="number" pos:start="831:46" pos:end="831:48">1</literal> <operator pos:start="831:48" pos:end="831:48">+</operator> <operator pos:start="831:50" pos:end="831:50">(</operator><name pos:start="831:51" pos:end="831:52">x2</name> <operator pos:start="831:54" pos:end="831:55">&gt;&gt;</operator> <literal type="number" pos:start="831:57" pos:end="831:57">1</literal><operator pos:start="831:58" pos:end="831:58">)</operator></expr></else></ternary></expr>;</expr_stmt>
                        <expr_stmt pos:start="832:25" pos:end="832:47"><expr pos:start="832:25" pos:end="832:46"><name pos:start="832:25" pos:end="832:29">shift</name> <operator pos:start="832:31" pos:end="832:31">=</operator> <ternary pos:start="832:33" pos:end="832:46"><condition pos:start="832:33" pos:end="832:40"><expr pos:start="832:33" pos:end="832:38"><name pos:start="832:33" pos:end="832:34">y2</name> <operator pos:start="832:36" pos:end="832:36">&lt;</operator> <literal type="number" pos:start="832:38" pos:end="832:38">4</literal></expr> ?</condition><then pos:start="832:42" pos:end="832:42"> <expr pos:start="832:42" pos:end="832:42"><literal type="number" pos:start="832:42" pos:end="832:42">0</literal></expr> </then><else pos:start="832:44" pos:end="832:46">: <expr pos:start="832:46" pos:end="832:46"><literal type="number" pos:start="832:46" pos:end="832:46">1</literal></expr></else></ternary></expr>;</expr_stmt>
                        <expr_stmt pos:start="833:25" pos:end="833:44"><expr pos:start="833:25" pos:end="833:43"><name pos:start="833:25" pos:end="833:26">x3</name> <operator pos:start="833:28" pos:end="833:28">=</operator> <ternary pos:start="833:30" pos:end="833:43"><condition pos:start="833:30" pos:end="833:36"><expr pos:start="833:30" pos:end="833:34"><name pos:start="833:30" pos:end="833:34">shift</name></expr> ?</condition><then pos:start="833:38" pos:end="833:38"> <expr pos:start="833:38" pos:end="833:38"><literal type="number" pos:start="833:38" pos:end="833:38">0</literal></expr> </then><else pos:start="833:40" pos:end="833:43">: <expr pos:start="833:42" pos:end="833:43"><name pos:start="833:42" pos:end="833:43">x2</name></expr></else></ternary></expr>;</expr_stmt>
                        <expr_stmt pos:start="834:25" pos:end="834:44"><expr pos:start="834:25" pos:end="834:43"><name pos:start="834:25" pos:end="834:26">y3</name> <operator pos:start="834:28" pos:end="834:28">=</operator> <ternary pos:start="834:30" pos:end="834:43"><condition pos:start="834:30" pos:end="834:36"><expr pos:start="834:30" pos:end="834:34"><name pos:start="834:30" pos:end="834:34">shift</name></expr> ?</condition><then pos:start="834:38" pos:end="834:38"> <expr pos:start="834:38" pos:end="834:38"><literal type="number" pos:start="834:38" pos:end="834:38">0</literal></expr> </then><else pos:start="834:40" pos:end="834:43">: <expr pos:start="834:42" pos:end="834:43"><name pos:start="834:42" pos:end="834:43">y2</name></expr></else></ternary></expr>;</expr_stmt>
                        <expr_stmt pos:start="835:25" pos:end="838:120"><expr pos:start="835:25" pos:end="838:119"><name pos:start="835:25" pos:end="835:31"><name pos:start="835:25" pos:end="835:28">base</name><index pos:start="835:29" pos:end="835:31">[<expr pos:start="835:30" pos:end="835:30"><name pos:start="835:30" pos:end="835:30">j</name></expr>]</index></name> <operator pos:start="835:33" pos:end="835:33">=</operator> <operator pos:start="835:35" pos:end="835:35">(</operator><name pos:start="835:36" pos:end="835:113"><name pos:start="835:36" pos:end="835:39">data</name><index pos:start="835:40" pos:end="835:46">[<expr pos:start="835:41" pos:end="835:45"><name pos:start="835:41" pos:end="835:45">plane</name></expr>]</index><index pos:start="835:47" pos:end="835:113">[<expr pos:start="835:48" pos:end="835:112"><operator pos:start="835:48" pos:end="835:48">(</operator><operator pos:start="835:49" pos:end="835:49">(</operator><name pos:start="835:50" pos:end="835:50">x</name><operator pos:start="835:51" pos:end="835:51">+</operator><name pos:start="835:52" pos:end="835:53">x3</name><operator pos:start="835:54" pos:end="835:54">)</operator> <operator pos:start="835:56" pos:end="835:57">&gt;&gt;</operator> <name pos:start="835:59" pos:end="835:63">shift</name><operator pos:start="835:64" pos:end="835:64">)</operator> <operator pos:start="835:66" pos:end="835:66">+</operator>      <operator pos:start="835:73" pos:end="835:73">(</operator><operator pos:start="835:74" pos:end="835:74">(</operator><name pos:start="835:75" pos:end="835:75">y</name><operator pos:start="835:76" pos:end="835:76">+</operator><name pos:start="835:77" pos:end="835:78">y3</name><operator pos:start="835:79" pos:end="835:79">)</operator> <operator pos:start="835:81" pos:end="835:82">&gt;&gt;</operator> <name pos:start="835:84" pos:end="835:88">shift</name><operator pos:start="835:89" pos:end="835:89">)</operator>      <operator pos:start="835:96" pos:end="835:96">*</operator> <name pos:start="835:98" pos:end="835:112"><name pos:start="835:98" pos:end="835:105">linesize</name><index pos:start="835:106" pos:end="835:112">[<expr pos:start="835:107" pos:end="835:111"><name pos:start="835:107" pos:end="835:111">plane</name></expr>]</index></name></expr>]</index></name> <operator pos:start="835:115" pos:end="835:115">+</operator>
                                   <name pos:start="836:36" pos:end="836:113"><name pos:start="836:36" pos:end="836:39">data</name><index pos:start="836:40" pos:end="836:46">[<expr pos:start="836:41" pos:end="836:45"><name pos:start="836:41" pos:end="836:45">plane</name></expr>]</index><index pos:start="836:47" pos:end="836:113">[<expr pos:start="836:48" pos:end="836:112"><operator pos:start="836:48" pos:end="836:48">(</operator><operator pos:start="836:49" pos:end="836:49">(</operator><name pos:start="836:50" pos:end="836:50">x</name><operator pos:start="836:51" pos:end="836:51">+</operator><name pos:start="836:52" pos:end="836:53">x3</name><operator pos:start="836:54" pos:end="836:54">)</operator> <operator pos:start="836:56" pos:end="836:57">&gt;&gt;</operator> <name pos:start="836:59" pos:end="836:63">shift</name><operator pos:start="836:64" pos:end="836:64">)</operator> <operator pos:start="836:66" pos:end="836:66">+</operator> <literal type="number" pos:start="836:68" pos:end="836:70">1</literal> <operator pos:start="836:70" pos:end="836:70">+</operator>  <operator pos:start="836:73" pos:end="836:73">(</operator><operator pos:start="836:74" pos:end="836:74">(</operator><name pos:start="836:75" pos:end="836:75">y</name><operator pos:start="836:76" pos:end="836:76">+</operator><name pos:start="836:77" pos:end="836:78">y3</name><operator pos:start="836:79" pos:end="836:79">)</operator> <operator pos:start="836:81" pos:end="836:82">&gt;&gt;</operator> <name pos:start="836:84" pos:end="836:88">shift</name><operator pos:start="836:89" pos:end="836:89">)</operator>      <operator pos:start="836:96" pos:end="836:96">*</operator> <name pos:start="836:98" pos:end="836:112"><name pos:start="836:98" pos:end="836:105">linesize</name><index pos:start="836:106" pos:end="836:112">[<expr pos:start="836:107" pos:end="836:111"><name pos:start="836:107" pos:end="836:111">plane</name></expr>]</index></name></expr>]</index></name> <operator pos:start="836:115" pos:end="836:115">+</operator>
                                   <name pos:start="837:36" pos:end="837:113"><name pos:start="837:36" pos:end="837:39">data</name><index pos:start="837:40" pos:end="837:46">[<expr pos:start="837:41" pos:end="837:45"><name pos:start="837:41" pos:end="837:45">plane</name></expr>]</index><index pos:start="837:47" pos:end="837:113">[<expr pos:start="837:48" pos:end="837:112"><operator pos:start="837:48" pos:end="837:48">(</operator><operator pos:start="837:49" pos:end="837:49">(</operator><name pos:start="837:50" pos:end="837:50">x</name><operator pos:start="837:51" pos:end="837:51">+</operator><name pos:start="837:52" pos:end="837:53">x3</name><operator pos:start="837:54" pos:end="837:54">)</operator> <operator pos:start="837:56" pos:end="837:57">&gt;&gt;</operator> <name pos:start="837:59" pos:end="837:63">shift</name><operator pos:start="837:64" pos:end="837:64">)</operator> <operator pos:start="837:66" pos:end="837:66">+</operator>     <operator pos:start="837:72" pos:end="837:72">(</operator><operator pos:start="837:73" pos:end="837:73">(</operator><operator pos:start="837:74" pos:end="837:74">(</operator><name pos:start="837:75" pos:end="837:75">y</name><operator pos:start="837:76" pos:end="837:76">+</operator><name pos:start="837:77" pos:end="837:78">y3</name><operator pos:start="837:79" pos:end="837:79">)</operator> <operator pos:start="837:81" pos:end="837:82">&gt;&gt;</operator> <name pos:start="837:84" pos:end="837:88">shift</name><operator pos:start="837:89" pos:end="837:89">)</operator> <operator pos:start="837:91" pos:end="837:91">+</operator> <literal type="number" pos:start="837:93" pos:end="837:93">1</literal><operator pos:start="837:94" pos:end="837:94">)</operator> <operator pos:start="837:96" pos:end="837:96">*</operator> <name pos:start="837:98" pos:end="837:112"><name pos:start="837:98" pos:end="837:105">linesize</name><index pos:start="837:106" pos:end="837:112">[<expr pos:start="837:107" pos:end="837:111"><name pos:start="837:107" pos:end="837:111">plane</name></expr>]</index></name></expr>]</index></name> <operator pos:start="837:115" pos:end="837:115">+</operator>
                                   <name pos:start="838:36" pos:end="838:113"><name pos:start="838:36" pos:end="838:39">data</name><index pos:start="838:40" pos:end="838:46">[<expr pos:start="838:41" pos:end="838:45"><name pos:start="838:41" pos:end="838:45">plane</name></expr>]</index><index pos:start="838:47" pos:end="838:113">[<expr pos:start="838:48" pos:end="838:112"><operator pos:start="838:48" pos:end="838:48">(</operator><operator pos:start="838:49" pos:end="838:49">(</operator><name pos:start="838:50" pos:end="838:50">x</name><operator pos:start="838:51" pos:end="838:51">+</operator><name pos:start="838:52" pos:end="838:53">x3</name><operator pos:start="838:54" pos:end="838:54">)</operator> <operator pos:start="838:56" pos:end="838:57">&gt;&gt;</operator> <name pos:start="838:59" pos:end="838:63">shift</name><operator pos:start="838:64" pos:end="838:64">)</operator> <operator pos:start="838:66" pos:end="838:66">+</operator> <literal type="number" pos:start="838:68" pos:end="838:70">1</literal> <operator pos:start="838:70" pos:end="838:70">+</operator> <operator pos:start="838:72" pos:end="838:72">(</operator><operator pos:start="838:73" pos:end="838:73">(</operator><operator pos:start="838:74" pos:end="838:74">(</operator><name pos:start="838:75" pos:end="838:75">y</name><operator pos:start="838:76" pos:end="838:76">+</operator><name pos:start="838:77" pos:end="838:78">y3</name><operator pos:start="838:79" pos:end="838:79">)</operator> <operator pos:start="838:81" pos:end="838:82">&gt;&gt;</operator> <name pos:start="838:84" pos:end="838:88">shift</name><operator pos:start="838:89" pos:end="838:89">)</operator> <operator pos:start="838:91" pos:end="838:91">+</operator> <literal type="number" pos:start="838:93" pos:end="838:93">1</literal><operator pos:start="838:94" pos:end="838:94">)</operator> <operator pos:start="838:96" pos:end="838:96">*</operator> <name pos:start="838:98" pos:end="838:112"><name pos:start="838:98" pos:end="838:105">linesize</name><index pos:start="838:106" pos:end="838:112">[<expr pos:start="838:107" pos:end="838:111"><name pos:start="838:107" pos:end="838:111">plane</name></expr>]</index></name></expr>]</index></name><operator pos:start="838:114" pos:end="838:114">)</operator> <operator pos:start="838:116" pos:end="838:117">&gt;&gt;</operator> <literal type="number" pos:start="838:119" pos:end="838:119">2</literal></expr>;</expr_stmt>
                    </block_content>}</block></for>
                </block_content>}</block></for>
            </block_content>}</block></if> <else pos:start="841:15" pos:end="860:13">else <block pos:start="841:20" pos:end="860:13">{<block_content pos:start="843:17" pos:end="859:17">
                <comment type="line" pos:start="842:17" pos:end="842:22">//copy</comment>
                <for pos:start="843:17" pos:end="859:17">for<control pos:start="843:20" pos:end="843:54">(<init pos:start="843:21" pos:end="843:31"><expr pos:start="843:21" pos:end="843:30"><name pos:start="843:21" pos:end="843:21">j</name> <operator pos:start="843:23" pos:end="843:23">=</operator> <name pos:start="843:25" pos:end="843:26">y2</name> <operator pos:start="843:28" pos:end="843:28">=</operator> <literal type="number" pos:start="843:30" pos:end="843:30">0</literal></expr>;</init> <condition pos:start="843:33" pos:end="843:45"><expr pos:start="843:33" pos:end="843:44"><name pos:start="843:33" pos:end="843:34">y2</name> <operator pos:start="843:36" pos:end="843:36">&lt;</operator> <name pos:start="843:38" pos:end="843:44">MB_SIZE</name></expr>;</condition> <incr pos:start="843:47" pos:end="843:53"><expr pos:start="843:47" pos:end="843:53"><name pos:start="843:47" pos:end="843:48">y2</name> <operator pos:start="843:50" pos:end="843:51">+=</operator> <literal type="number" pos:start="843:53" pos:end="843:53">2</literal></expr></incr>)</control> <block pos:start="843:56" pos:end="859:17">{<block_content pos:start="844:21" pos:end="858:21">
                    <for pos:start="844:21" pos:end="858:21">for<control pos:start="844:24" pos:end="844:54">(<init pos:start="844:25" pos:end="844:31"><expr pos:start="844:25" pos:end="844:30"><name pos:start="844:25" pos:end="844:26">x2</name> <operator pos:start="844:28" pos:end="844:28">=</operator> <literal type="number" pos:start="844:30" pos:end="844:30">0</literal></expr>;</init> <condition pos:start="844:33" pos:end="844:45"><expr pos:start="844:33" pos:end="844:44"><name pos:start="844:33" pos:end="844:34">x2</name> <operator pos:start="844:36" pos:end="844:36">&lt;</operator> <name pos:start="844:38" pos:end="844:44">MB_SIZE</name></expr>;</condition> <incr pos:start="844:47" pos:end="844:53"><expr pos:start="844:47" pos:end="844:53"><name pos:start="844:47" pos:end="844:48">x2</name> <operator pos:start="844:50" pos:end="844:51">+=</operator> <literal type="number" pos:start="844:53" pos:end="844:53">2</literal></expr></incr>)</control> <block pos:start="844:56" pos:end="858:21">{<block_content pos:start="845:25" pos:end="857:25">
                        <for pos:start="845:25" pos:end="857:25">for<control pos:start="845:28" pos:end="845:60">(<init pos:start="845:29" pos:end="845:34"><expr pos:start="845:29" pos:end="845:33"><name pos:start="845:29" pos:end="845:29">k</name> <operator pos:start="845:31" pos:end="845:31">=</operator> <literal type="number" pos:start="845:33" pos:end="845:33">0</literal></expr>;</init> <condition pos:start="845:36" pos:end="845:50"><expr pos:start="845:36" pos:end="845:49"><name pos:start="845:36" pos:end="845:36">k</name> <operator pos:start="845:38" pos:end="845:38">&lt;</operator> <name pos:start="845:40" pos:end="845:49">entry_size</name></expr>;</condition> <incr pos:start="845:52" pos:end="845:59"><expr pos:start="845:52" pos:end="845:54"><name pos:start="845:52" pos:end="845:52">k</name><operator pos:start="845:53" pos:end="845:54">++</operator></expr><operator pos:start="845:55" pos:end="845:55">,</operator> <expr pos:start="845:57" pos:end="845:59"><name pos:start="845:57" pos:end="845:57">j</name><operator pos:start="845:58" pos:end="845:59">++</operator></expr></incr>)</control> <block pos:start="845:62" pos:end="857:25">{<block_content pos:start="846:29" pos:end="856:75">
                            <expr_stmt pos:start="846:29" pos:end="846:55"><expr pos:start="846:29" pos:end="846:54"><name pos:start="846:29" pos:end="846:33">plane</name> <operator pos:start="846:35" pos:end="846:35">=</operator> <ternary pos:start="846:37" pos:end="846:54"><condition pos:start="846:37" pos:end="846:44"><expr pos:start="846:37" pos:end="846:42"><name pos:start="846:37" pos:end="846:37">k</name> <operator pos:start="846:39" pos:end="846:40">&gt;=</operator> <literal type="number" pos:start="846:42" pos:end="846:42">4</literal></expr> ?</condition><then pos:start="846:46" pos:end="846:50"> <expr pos:start="846:46" pos:end="846:50"><name pos:start="846:46" pos:end="846:46">k</name> <operator pos:start="846:48" pos:end="846:48">-</operator> <literal type="number" pos:start="846:50" pos:end="846:50">3</literal></expr> </then><else pos:start="846:52" pos:end="846:54">: <expr pos:start="846:54" pos:end="846:54"><literal type="number" pos:start="846:54" pos:end="846:54">0</literal></expr></else></ternary></expr>;</expr_stmt>

                            <if_stmt pos:start="848:29" pos:end="854:29"><if pos:start="848:29" pos:end="851:29">if<condition pos:start="848:31" pos:end="848:38">(<expr pos:start="848:32" pos:end="848:37"><name pos:start="848:32" pos:end="848:32">k</name> <operator pos:start="848:34" pos:end="848:35">&gt;=</operator> <literal type="number" pos:start="848:37" pos:end="848:37">4</literal></expr>)</condition> <block pos:start="848:40" pos:end="851:29">{<block_content pos:start="849:33" pos:end="850:49">
                                <expr_stmt pos:start="849:33" pos:end="849:49"><expr pos:start="849:33" pos:end="849:48"><name pos:start="849:33" pos:end="849:34">x3</name> <operator pos:start="849:36" pos:end="849:36">=</operator> <operator pos:start="849:38" pos:end="849:38">(</operator><name pos:start="849:39" pos:end="849:39">x</name><operator pos:start="849:40" pos:end="849:40">+</operator><name pos:start="849:41" pos:end="849:42">x2</name><operator pos:start="849:43" pos:end="849:43">)</operator> <operator pos:start="849:45" pos:end="849:46">&gt;&gt;</operator> <literal type="number" pos:start="849:48" pos:end="849:48">1</literal></expr>;</expr_stmt>
                                <expr_stmt pos:start="850:33" pos:end="850:49"><expr pos:start="850:33" pos:end="850:48"><name pos:start="850:33" pos:end="850:34">y3</name> <operator pos:start="850:36" pos:end="850:36">=</operator> <operator pos:start="850:38" pos:end="850:38">(</operator><name pos:start="850:39" pos:end="850:39">y</name><operator pos:start="850:40" pos:end="850:40">+</operator><name pos:start="850:41" pos:end="850:42">y2</name><operator pos:start="850:43" pos:end="850:43">)</operator> <operator pos:start="850:45" pos:end="850:46">&gt;&gt;</operator> <literal type="number" pos:start="850:48" pos:end="850:48">1</literal></expr>;</expr_stmt>
                            </block_content>}</block></if> <else pos:start="851:31" pos:end="854:29">else <block pos:start="851:36" pos:end="854:29">{<block_content pos:start="852:33" pos:end="853:55">
                                <expr_stmt pos:start="852:33" pos:end="852:54"><expr pos:start="852:33" pos:end="852:53"><name pos:start="852:33" pos:end="852:34">x3</name> <operator pos:start="852:36" pos:end="852:36">=</operator> <name pos:start="852:38" pos:end="852:38">x</name> <operator pos:start="852:40" pos:end="852:40">+</operator> <name pos:start="852:42" pos:end="852:43">x2</name> <operator pos:start="852:45" pos:end="852:45">+</operator> <operator pos:start="852:47" pos:end="852:47">(</operator><name pos:start="852:48" pos:end="852:48">k</name> <operator pos:start="852:50" pos:end="852:50">&amp;</operator> <literal type="number" pos:start="852:52" pos:end="852:52">1</literal><operator pos:start="852:53" pos:end="852:53">)</operator></expr>;</expr_stmt>
                                <expr_stmt pos:start="853:33" pos:end="853:55"><expr pos:start="853:33" pos:end="853:54"><name pos:start="853:33" pos:end="853:34">y3</name> <operator pos:start="853:36" pos:end="853:36">=</operator> <name pos:start="853:38" pos:end="853:38">y</name> <operator pos:start="853:40" pos:end="853:40">+</operator> <name pos:start="853:42" pos:end="853:43">y2</name> <operator pos:start="853:45" pos:end="853:45">+</operator> <operator pos:start="853:47" pos:end="853:47">(</operator><name pos:start="853:48" pos:end="853:48">k</name> <operator pos:start="853:50" pos:end="853:51">&gt;&gt;</operator> <literal type="number" pos:start="853:53" pos:end="853:53">1</literal><operator pos:start="853:54" pos:end="853:54">)</operator></expr>;</expr_stmt>
                            </block_content>}</block></else></if_stmt>

                            <expr_stmt pos:start="856:29" pos:end="856:75"><expr pos:start="856:29" pos:end="856:74"><name pos:start="856:29" pos:end="856:35"><name pos:start="856:29" pos:end="856:32">base</name><index pos:start="856:33" pos:end="856:35">[<expr pos:start="856:34" pos:end="856:34"><name pos:start="856:34" pos:end="856:34">j</name></expr>]</index></name> <operator pos:start="856:37" pos:end="856:37">=</operator> <name pos:start="856:39" pos:end="856:74"><name pos:start="856:39" pos:end="856:42">data</name><index pos:start="856:43" pos:end="856:49">[<expr pos:start="856:44" pos:end="856:48"><name pos:start="856:44" pos:end="856:48">plane</name></expr>]</index><index pos:start="856:50" pos:end="856:74">[<expr pos:start="856:51" pos:end="856:73"><name pos:start="856:51" pos:end="856:52">x3</name> <operator pos:start="856:54" pos:end="856:54">+</operator> <name pos:start="856:56" pos:end="856:57">y3</name><operator pos:start="856:58" pos:end="856:58">*</operator><name pos:start="856:59" pos:end="856:73"><name pos:start="856:59" pos:end="856:66">linesize</name><index pos:start="856:67" pos:end="856:73">[<expr pos:start="856:68" pos:end="856:72"><name pos:start="856:68" pos:end="856:72">plane</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>
                        </block_content>}</block></for>
                    </block_content>}</block></for>
                </block_content>}</block></for>
            </block_content>}</block></else></if_stmt>
            <expr_stmt pos:start="861:13" pos:end="861:32"><expr pos:start="861:13" pos:end="861:31"><name pos:start="861:13" pos:end="861:13">i</name> <operator pos:start="861:15" pos:end="861:16">+=</operator> <ternary pos:start="861:18" pos:end="861:31"><condition pos:start="861:18" pos:end="861:25"><expr pos:start="861:18" pos:end="861:23"><name pos:start="861:18" pos:end="861:23">v1mode</name></expr> ?</condition><then pos:start="861:27" pos:end="861:27"> <expr pos:start="861:27" pos:end="861:27"><literal type="number" pos:start="861:27" pos:end="861:27">1</literal></expr> </then><else pos:start="861:29" pos:end="861:31">: <expr pos:start="861:31" pos:end="861:31"><literal type="number" pos:start="861:31" pos:end="861:31">4</literal></expr></else></ternary></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
<comment type="line" pos:start="864:1" pos:end="864:36">//    if(i &lt; mbn*(v1mode ? 1 : 4)) {</comment>
<comment type="line" pos:start="865:1" pos:end="865:155">//        av_log(s-&gt;avctx, AV_LOG_INFO, "reducing training set for %s from %i to %i (encoding %i)\n", v1mode?"v1":"v4", mbn*(v1mode ? 1 : 4), i, encoding);</comment>
<comment type="line" pos:start="866:1" pos:end="866:7">//    }</comment>

    <if_stmt pos:start="868:5" pos:end="869:17"><if pos:start="868:5" pos:end="869:17">if<condition pos:start="868:7" pos:end="868:14">(<expr pos:start="868:8" pos:end="868:13"><name pos:start="868:8" pos:end="868:8">i</name> <operator pos:start="868:10" pos:end="868:11">==</operator> <literal type="number" pos:start="868:13" pos:end="868:13">0</literal></expr>)</condition><block type="pseudo" pos:start="869:9" pos:end="869:17"><block_content pos:start="869:9" pos:end="869:17"> <comment type="line" pos:start="868:16" pos:end="868:51">// empty training set, nothing to do</comment>
        <return pos:start="869:9" pos:end="869:17">return <expr pos:start="869:16" pos:end="869:16"><literal type="number" pos:start="869:16" pos:end="869:16">0</literal></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="870:5" pos:end="873:5"><if pos:start="870:5" pos:end="873:5">if<condition pos:start="870:7" pos:end="870:16">(<expr pos:start="870:8" pos:end="870:15"><name pos:start="870:8" pos:end="870:8">i</name> <operator pos:start="870:10" pos:end="870:10">&lt;</operator> <name pos:start="870:12" pos:end="870:15">size</name></expr>)</condition> <block pos:start="870:18" pos:end="873:5">{<block_content pos:start="872:9" pos:end="872:17">
        <comment type="line" pos:start="871:9" pos:end="871:192">//av_log(s-&gt;avctx, (CERTAIN(encoding) ? AV_LOG_ERROR : AV_LOG_INFO), "WOULD WASTE: %s cbsize %i bigger than training set size %i (encoding %i)\n", v1mode?"v1":"v4", size, i, encoding);</comment>
        <expr_stmt pos:start="872:9" pos:end="872:17"><expr pos:start="872:9" pos:end="872:16"><name pos:start="872:9" pos:end="872:12">size</name> <operator pos:start="872:14" pos:end="872:14">=</operator> <name pos:start="872:16" pos:end="872:16">i</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="875:5" pos:end="875:108"><expr pos:start="875:5" pos:end="875:107"><call pos:start="875:5" pos:end="875:107"><name pos:start="875:5" pos:end="875:20">avpriv_init_elbg</name><argument_list pos:start="875:21" pos:end="875:107">(<argument pos:start="875:22" pos:end="875:38"><expr pos:start="875:22" pos:end="875:38"><name pos:start="875:22" pos:end="875:38"><name pos:start="875:22" pos:end="875:22">s</name><operator pos:start="875:23" pos:end="875:24">-&gt;</operator><name pos:start="875:25" pos:end="875:38">codebook_input</name></name></expr></argument>, <argument pos:start="875:41" pos:end="875:50"><expr pos:start="875:41" pos:end="875:50"><name pos:start="875:41" pos:end="875:50">entry_size</name></expr></argument>, <argument pos:start="875:53" pos:end="875:53"><expr pos:start="875:53" pos:end="875:53"><name pos:start="875:53" pos:end="875:53">i</name></expr></argument>, <argument pos:start="875:56" pos:end="875:63"><expr pos:start="875:56" pos:end="875:63"><name pos:start="875:56" pos:end="875:63">codebook</name></expr></argument>, <argument pos:start="875:66" pos:end="875:69"><expr pos:start="875:66" pos:end="875:69"><name pos:start="875:66" pos:end="875:69">size</name></expr></argument>, <argument pos:start="875:72" pos:end="875:72"><expr pos:start="875:72" pos:end="875:72"><literal type="number" pos:start="875:72" pos:end="875:72">1</literal></expr></argument>, <argument pos:start="875:75" pos:end="875:93"><expr pos:start="875:75" pos:end="875:93"><name pos:start="875:75" pos:end="875:93"><name pos:start="875:75" pos:end="875:75">s</name><operator pos:start="875:76" pos:end="875:77">-&gt;</operator><name pos:start="875:78" pos:end="875:93">codebook_closest</name></name></expr></argument>, <argument pos:start="875:96" pos:end="875:106"><expr pos:start="875:96" pos:end="875:106"><operator pos:start="875:96" pos:end="875:96">&amp;</operator><name pos:start="875:97" pos:end="875:106"><name pos:start="875:97" pos:end="875:97">s</name><operator pos:start="875:98" pos:end="875:99">-&gt;</operator><name pos:start="875:100" pos:end="875:106">randctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="876:5" pos:end="876:106"><expr pos:start="876:5" pos:end="876:105"><call pos:start="876:5" pos:end="876:105"><name pos:start="876:5" pos:end="876:18">avpriv_do_elbg</name><argument_list pos:start="876:19" pos:end="876:105">(<argument pos:start="876:20" pos:end="876:36"><expr pos:start="876:20" pos:end="876:36"><name pos:start="876:20" pos:end="876:36"><name pos:start="876:20" pos:end="876:20">s</name><operator pos:start="876:21" pos:end="876:22">-&gt;</operator><name pos:start="876:23" pos:end="876:36">codebook_input</name></name></expr></argument>, <argument pos:start="876:39" pos:end="876:48"><expr pos:start="876:39" pos:end="876:48"><name pos:start="876:39" pos:end="876:48">entry_size</name></expr></argument>, <argument pos:start="876:51" pos:end="876:51"><expr pos:start="876:51" pos:end="876:51"><name pos:start="876:51" pos:end="876:51">i</name></expr></argument>, <argument pos:start="876:54" pos:end="876:61"><expr pos:start="876:54" pos:end="876:61"><name pos:start="876:54" pos:end="876:61">codebook</name></expr></argument>, <argument pos:start="876:64" pos:end="876:67"><expr pos:start="876:64" pos:end="876:67"><name pos:start="876:64" pos:end="876:67">size</name></expr></argument>, <argument pos:start="876:70" pos:end="876:70"><expr pos:start="876:70" pos:end="876:70"><literal type="number" pos:start="876:70" pos:end="876:70">1</literal></expr></argument>, <argument pos:start="876:73" pos:end="876:91"><expr pos:start="876:73" pos:end="876:91"><name pos:start="876:73" pos:end="876:91"><name pos:start="876:73" pos:end="876:73">s</name><operator pos:start="876:74" pos:end="876:75">-&gt;</operator><name pos:start="876:76" pos:end="876:91">codebook_closest</name></name></expr></argument>, <argument pos:start="876:94" pos:end="876:104"><expr pos:start="876:94" pos:end="876:104"><operator pos:start="876:94" pos:end="876:94">&amp;</operator><name pos:start="876:95" pos:end="876:104"><name pos:start="876:95" pos:end="876:95">s</name><operator pos:start="876:96" pos:end="876:97">-&gt;</operator><name pos:start="876:98" pos:end="876:104">randctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="878:5" pos:end="878:47">//setup vq_data, which contains a single MB</comment>
    <expr_stmt pos:start="879:5" pos:end="879:29"><expr pos:start="879:5" pos:end="879:28"><name pos:start="879:5" pos:end="879:14"><name pos:start="879:5" pos:end="879:11">vq_data</name><index pos:start="879:12" pos:end="879:14">[<expr pos:start="879:13" pos:end="879:13"><literal type="number" pos:start="879:13" pos:end="879:13">0</literal></expr>]</index></name> <operator pos:start="879:16" pos:end="879:16">=</operator> <name pos:start="879:18" pos:end="879:28">vq_pict_buf</name></expr>;</expr_stmt>
    <expr_stmt pos:start="880:5" pos:end="880:29"><expr pos:start="880:5" pos:end="880:28"><name pos:start="880:5" pos:end="880:18"><name pos:start="880:5" pos:end="880:15">vq_linesize</name><index pos:start="880:16" pos:end="880:18">[<expr pos:start="880:17" pos:end="880:17"><literal type="number" pos:start="880:17" pos:end="880:17">0</literal></expr>]</index></name> <operator pos:start="880:20" pos:end="880:20">=</operator> <name pos:start="880:22" pos:end="880:28">MB_SIZE</name></expr>;</expr_stmt>
    <expr_stmt pos:start="881:5" pos:end="881:39"><expr pos:start="881:5" pos:end="881:38"><name pos:start="881:5" pos:end="881:14"><name pos:start="881:5" pos:end="881:11">vq_data</name><index pos:start="881:12" pos:end="881:14">[<expr pos:start="881:13" pos:end="881:13"><literal type="number" pos:start="881:13" pos:end="881:13">1</literal></expr>]</index></name> <operator pos:start="881:16" pos:end="881:16">=</operator> <operator pos:start="881:18" pos:end="881:18">&amp;</operator><name pos:start="881:19" pos:end="881:38"><name pos:start="881:19" pos:end="881:29">vq_pict_buf</name><index pos:start="881:30" pos:end="881:38">[<expr pos:start="881:31" pos:end="881:37"><name pos:start="881:31" pos:end="881:37">MB_AREA</name></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="882:5" pos:end="882:45"><expr pos:start="882:5" pos:end="882:44"><name pos:start="882:5" pos:end="882:14"><name pos:start="882:5" pos:end="882:11">vq_data</name><index pos:start="882:12" pos:end="882:14">[<expr pos:start="882:13" pos:end="882:13"><literal type="number" pos:start="882:13" pos:end="882:13">2</literal></expr>]</index></name> <operator pos:start="882:16" pos:end="882:16">=</operator> <name pos:start="882:18" pos:end="882:27"><name pos:start="882:18" pos:end="882:24">vq_data</name><index pos:start="882:25" pos:end="882:27">[<expr pos:start="882:26" pos:end="882:26"><literal type="number" pos:start="882:26" pos:end="882:26">1</literal></expr>]</index></name> <operator pos:start="882:29" pos:end="882:29">+</operator> <operator pos:start="882:31" pos:end="882:31">(</operator><name pos:start="882:32" pos:end="882:38">MB_AREA</name> <operator pos:start="882:40" pos:end="882:41">&gt;&gt;</operator> <literal type="number" pos:start="882:43" pos:end="882:43">2</literal><operator pos:start="882:44" pos:end="882:44">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="883:5" pos:end="883:51"><expr pos:start="883:5" pos:end="883:50"><name pos:start="883:5" pos:end="883:18"><name pos:start="883:5" pos:end="883:15">vq_linesize</name><index pos:start="883:16" pos:end="883:18">[<expr pos:start="883:17" pos:end="883:17"><literal type="number" pos:start="883:17" pos:end="883:17">1</literal></expr>]</index></name> <operator pos:start="883:20" pos:end="883:20">=</operator> <name pos:start="883:22" pos:end="883:35"><name pos:start="883:22" pos:end="883:32">vq_linesize</name><index pos:start="883:33" pos:end="883:35">[<expr pos:start="883:34" pos:end="883:34"><literal type="number" pos:start="883:34" pos:end="883:34">2</literal></expr>]</index></name> <operator pos:start="883:37" pos:end="883:37">=</operator> <name pos:start="883:39" pos:end="883:45">MB_SIZE</name> <operator pos:start="883:47" pos:end="883:48">&gt;&gt;</operator> <literal type="number" pos:start="883:50" pos:end="883:50">1</literal></expr>;</expr_stmt>

    <comment type="line" pos:start="885:5" pos:end="885:18">//copy indices</comment>
    <for pos:start="886:5" pos:end="918:5">for<control pos:start="886:8" pos:end="886:43">(<init pos:start="886:9" pos:end="886:22"><expr pos:start="886:9" pos:end="886:21"><name pos:start="886:9" pos:end="886:9">i</name> <operator pos:start="886:11" pos:end="886:11">=</operator> <name pos:start="886:13" pos:end="886:13">j</name> <operator pos:start="886:15" pos:end="886:15">=</operator> <name pos:start="886:17" pos:end="886:17">y</name> <operator pos:start="886:19" pos:end="886:19">=</operator> <literal type="number" pos:start="886:21" pos:end="886:21">0</literal></expr>;</init> <condition pos:start="886:24" pos:end="886:29"><expr pos:start="886:24" pos:end="886:28"><name pos:start="886:24" pos:end="886:24">y</name> <operator pos:start="886:26" pos:end="886:26">&lt;</operator> <name pos:start="886:28" pos:end="886:28">h</name></expr>;</condition> <incr pos:start="886:31" pos:end="886:42"><expr pos:start="886:31" pos:end="886:42"><name pos:start="886:31" pos:end="886:31">y</name> <operator pos:start="886:33" pos:end="886:34">+=</operator> <name pos:start="886:36" pos:end="886:42">MB_SIZE</name></expr></incr>)</control> <block pos:start="886:45" pos:end="918:5">{<block_content pos:start="887:9" pos:end="917:9">
        <for pos:start="887:9" pos:end="917:9">for<control pos:start="887:12" pos:end="887:47">(<init pos:start="887:13" pos:end="887:18"><expr pos:start="887:13" pos:end="887:17"><name pos:start="887:13" pos:end="887:13">x</name> <operator pos:start="887:15" pos:end="887:15">=</operator> <literal type="number" pos:start="887:17" pos:end="887:17">0</literal></expr>;</init> <condition pos:start="887:20" pos:end="887:28"><expr pos:start="887:20" pos:end="887:27"><name pos:start="887:20" pos:end="887:20">x</name> <operator pos:start="887:22" pos:end="887:22">&lt;</operator> <name pos:start="887:24" pos:end="887:27"><name pos:start="887:24" pos:end="887:24">s</name><operator pos:start="887:25" pos:end="887:26">-&gt;</operator><name pos:start="887:27" pos:end="887:27">w</name></name></expr>;</condition> <incr pos:start="887:30" pos:end="887:46"><expr pos:start="887:30" pos:end="887:41"><name pos:start="887:30" pos:end="887:30">x</name> <operator pos:start="887:32" pos:end="887:33">+=</operator> <name pos:start="887:35" pos:end="887:41">MB_SIZE</name></expr><operator pos:start="887:42" pos:end="887:42">,</operator> <expr pos:start="887:44" pos:end="887:46"><name pos:start="887:44" pos:end="887:44">j</name><operator pos:start="887:45" pos:end="887:46">++</operator></expr></incr>)</control> <block pos:start="887:49" pos:end="917:9">{<block_content pos:start="888:13" pos:end="916:32">
            <decl_stmt pos:start="888:13" pos:end="888:36"><decl pos:start="888:13" pos:end="888:35"><type pos:start="888:13" pos:end="888:21"><name pos:start="888:13" pos:end="888:19">mb_info</name> <modifier pos:start="888:21" pos:end="888:21">*</modifier></type><name pos:start="888:22" pos:end="888:23">mb</name> <init pos:start="888:25" pos:end="888:35">= <expr pos:start="888:27" pos:end="888:35"><operator pos:start="888:27" pos:end="888:27">&amp;</operator><name pos:start="888:28" pos:end="888:35"><name pos:start="888:28" pos:end="888:28">s</name><operator pos:start="888:29" pos:end="888:30">-&gt;</operator><name pos:start="888:31" pos:end="888:32">mb</name><index pos:start="888:33" pos:end="888:35">[<expr pos:start="888:34" pos:end="888:34"><name pos:start="888:34" pos:end="888:34">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<comment type="line" pos:start="889:1" pos:end="889:64">// skip uninteresting blocks if we know their preferred encoding</comment>
            <if_stmt pos:start="890:13" pos:end="891:25"><if pos:start="890:13" pos:end="891:25">if<condition pos:start="890:15" pos:end="890:66">(<expr pos:start="890:16" pos:end="890:65"><call pos:start="890:16" pos:end="890:32"><name pos:start="890:16" pos:end="890:22">CERTAIN</name><argument_list pos:start="890:23" pos:end="890:32">(<argument pos:start="890:24" pos:end="890:31"><expr pos:start="890:24" pos:end="890:31"><name pos:start="890:24" pos:end="890:31">encoding</name></expr></argument>)</argument_list></call> <operator pos:start="890:34" pos:end="890:35">&amp;&amp;</operator> <name pos:start="890:37" pos:end="890:53"><name pos:start="890:37" pos:end="890:38">mb</name><operator pos:start="890:39" pos:end="890:40">-&gt;</operator><name pos:start="890:41" pos:end="890:53">best_encoding</name></name> <operator pos:start="890:55" pos:end="890:56">!=</operator> <name pos:start="890:58" pos:end="890:65">encoding</name></expr>)</condition><block type="pseudo" pos:start="891:17" pos:end="891:25"><block_content pos:start="891:17" pos:end="891:25">
                <continue pos:start="891:17" pos:end="891:25">continue;</continue></block_content></block></if></if_stmt>

            <comment type="line" pos:start="893:13" pos:end="893:42">//point sub_data to current MB</comment>
            <expr_stmt pos:start="894:13" pos:end="894:77"><expr pos:start="894:13" pos:end="894:76"><call pos:start="894:13" pos:end="894:76"><name pos:start="894:13" pos:end="894:27">get_sub_picture</name><argument_list pos:start="894:28" pos:end="894:76">(<argument pos:start="894:29" pos:end="894:29"><expr pos:start="894:29" pos:end="894:29"><name pos:start="894:29" pos:end="894:29">s</name></expr></argument>, <argument pos:start="894:32" pos:end="894:32"><expr pos:start="894:32" pos:end="894:32"><name pos:start="894:32" pos:end="894:32">x</name></expr></argument>, <argument pos:start="894:35" pos:end="894:35"><expr pos:start="894:35" pos:end="894:35"><name pos:start="894:35" pos:end="894:35">y</name></expr></argument>, <argument pos:start="894:38" pos:end="894:41"><expr pos:start="894:38" pos:end="894:41"><name pos:start="894:38" pos:end="894:41">data</name></expr></argument>, <argument pos:start="894:44" pos:end="894:51"><expr pos:start="894:44" pos:end="894:51"><name pos:start="894:44" pos:end="894:51">linesize</name></expr></argument>, <argument pos:start="894:54" pos:end="894:61"><expr pos:start="894:54" pos:end="894:61"><name pos:start="894:54" pos:end="894:61">sub_data</name></expr></argument>, <argument pos:start="894:64" pos:end="894:75"><expr pos:start="894:64" pos:end="894:75"><name pos:start="894:64" pos:end="894:75">sub_linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="896:13" pos:end="915:13"><if pos:start="896:13" pos:end="905:13">if<condition pos:start="896:15" pos:end="896:22">(<expr pos:start="896:16" pos:end="896:21"><name pos:start="896:16" pos:end="896:21">v1mode</name></expr>)</condition> <block pos:start="896:24" pos:end="905:13">{<block_content pos:start="897:17" pos:end="904:44">
                <expr_stmt pos:start="897:17" pos:end="897:55"><expr pos:start="897:17" pos:end="897:54"><name pos:start="897:17" pos:end="897:29"><name pos:start="897:17" pos:end="897:18">mb</name><operator pos:start="897:19" pos:end="897:20">-&gt;</operator><name pos:start="897:21" pos:end="897:29">v1_vector</name></name> <operator pos:start="897:31" pos:end="897:31">=</operator> <name pos:start="897:33" pos:end="897:54"><name pos:start="897:33" pos:end="897:33">s</name><operator pos:start="897:34" pos:end="897:35">-&gt;</operator><name pos:start="897:36" pos:end="897:51">codebook_closest</name><index pos:start="897:52" pos:end="897:54">[<expr pos:start="897:53" pos:end="897:53"><name pos:start="897:53" pos:end="897:53">i</name></expr>]</index></name></expr>;</expr_stmt>

                <comment type="line" pos:start="899:17" pos:end="899:46">//fill in vq_data with V1 data</comment>
                <expr_stmt pos:start="900:17" pos:end="900:79"><expr pos:start="900:17" pos:end="900:78"><call pos:start="900:17" pos:end="900:78"><name pos:start="900:17" pos:end="900:32">decode_v1_vector</name><argument_list pos:start="900:33" pos:end="900:78">(<argument pos:start="900:34" pos:end="900:34"><expr pos:start="900:34" pos:end="900:34"><name pos:start="900:34" pos:end="900:34">s</name></expr></argument>, <argument pos:start="900:37" pos:end="900:43"><expr pos:start="900:37" pos:end="900:43"><name pos:start="900:37" pos:end="900:43">vq_data</name></expr></argument>, <argument pos:start="900:46" pos:end="900:56"><expr pos:start="900:46" pos:end="900:56"><name pos:start="900:46" pos:end="900:56">vq_linesize</name></expr></argument>, <argument pos:start="900:59" pos:end="900:71"><expr pos:start="900:59" pos:end="900:71"><name pos:start="900:59" pos:end="900:71"><name pos:start="900:59" pos:end="900:60">mb</name><operator pos:start="900:61" pos:end="900:62">-&gt;</operator><name pos:start="900:63" pos:end="900:71">v1_vector</name></name></expr></argument>, <argument pos:start="900:74" pos:end="900:77"><expr pos:start="900:74" pos:end="900:77"><name pos:start="900:74" pos:end="900:77">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="902:17" pos:end="903:75"><expr pos:start="902:17" pos:end="903:74"><name pos:start="902:17" pos:end="902:28"><name pos:start="902:17" pos:end="902:18">mb</name><operator pos:start="902:19" pos:end="902:20">-&gt;</operator><name pos:start="902:21" pos:end="902:28">v1_error</name></name> <operator pos:start="902:30" pos:end="902:30">=</operator> <call pos:start="902:32" pos:end="903:74"><name pos:start="902:32" pos:end="902:52">compute_mb_distortion</name><argument_list pos:start="902:53" pos:end="903:74">(<argument pos:start="902:54" pos:end="902:54"><expr pos:start="902:54" pos:end="902:54"><name pos:start="902:54" pos:end="902:54">s</name></expr></argument>, <argument pos:start="902:57" pos:end="902:64"><expr pos:start="902:57" pos:end="902:64"><name pos:start="902:57" pos:end="902:64">sub_data</name></expr></argument>, <argument pos:start="902:67" pos:end="902:78"><expr pos:start="902:67" pos:end="902:78"><name pos:start="902:67" pos:end="902:78">sub_linesize</name></expr></argument>,
                                                     <argument pos:start="903:54" pos:end="903:60"><expr pos:start="903:54" pos:end="903:60"><name pos:start="903:54" pos:end="903:60">vq_data</name></expr></argument>, <argument pos:start="903:63" pos:end="903:73"><expr pos:start="903:63" pos:end="903:73"><name pos:start="903:63" pos:end="903:73">vq_linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="904:17" pos:end="904:44"><expr pos:start="904:17" pos:end="904:43"><name pos:start="904:17" pos:end="904:27">total_error</name> <operator pos:start="904:29" pos:end="904:30">+=</operator> <name pos:start="904:32" pos:end="904:43"><name pos:start="904:32" pos:end="904:33">mb</name><operator pos:start="904:34" pos:end="904:35">-&gt;</operator><name pos:start="904:36" pos:end="904:43">v1_error</name></name></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="905:15" pos:end="915:13">else <block pos:start="905:20" pos:end="915:13">{<block_content pos:start="906:17" pos:end="914:44">
                <for pos:start="906:17" pos:end="907:64">for<control pos:start="906:20" pos:end="906:38">(<init pos:start="906:21" pos:end="906:26"><expr pos:start="906:21" pos:end="906:25"><name pos:start="906:21" pos:end="906:21">k</name> <operator pos:start="906:23" pos:end="906:23">=</operator> <literal type="number" pos:start="906:25" pos:end="906:25">0</literal></expr>;</init> <condition pos:start="906:28" pos:end="906:33"><expr pos:start="906:28" pos:end="906:32"><name pos:start="906:28" pos:end="906:28">k</name> <operator pos:start="906:30" pos:end="906:30">&lt;</operator> <literal type="number" pos:start="906:32" pos:end="906:32">4</literal></expr>;</condition> <incr pos:start="906:35" pos:end="906:37"><expr pos:start="906:35" pos:end="906:37"><name pos:start="906:35" pos:end="906:35">k</name><operator pos:start="906:36" pos:end="906:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="907:21" pos:end="907:64"><block_content pos:start="907:21" pos:end="907:64">
                    <expr_stmt pos:start="907:21" pos:end="907:64"><expr pos:start="907:21" pos:end="907:63"><name pos:start="907:21" pos:end="907:36"><name pos:start="907:21" pos:end="907:22">mb</name><operator pos:start="907:23" pos:end="907:24">-&gt;</operator><name pos:start="907:25" pos:end="907:33">v4_vector</name><index pos:start="907:34" pos:end="907:36">[<expr pos:start="907:35" pos:end="907:35"><name pos:start="907:35" pos:end="907:35">k</name></expr>]</index></name> <operator pos:start="907:38" pos:end="907:38">=</operator> <name pos:start="907:40" pos:end="907:63"><name pos:start="907:40" pos:end="907:40">s</name><operator pos:start="907:41" pos:end="907:42">-&gt;</operator><name pos:start="907:43" pos:end="907:58">codebook_closest</name><index pos:start="907:59" pos:end="907:63">[<expr pos:start="907:60" pos:end="907:62"><name pos:start="907:60" pos:end="907:60">i</name><operator pos:start="907:61" pos:end="907:61">+</operator><name pos:start="907:62" pos:end="907:62">k</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <comment type="line" pos:start="909:17" pos:end="909:46">//fill in vq_data with V4 data</comment>
                <expr_stmt pos:start="910:17" pos:end="910:79"><expr pos:start="910:17" pos:end="910:78"><call pos:start="910:17" pos:end="910:78"><name pos:start="910:17" pos:end="910:32">decode_v4_vector</name><argument_list pos:start="910:33" pos:end="910:78">(<argument pos:start="910:34" pos:end="910:34"><expr pos:start="910:34" pos:end="910:34"><name pos:start="910:34" pos:end="910:34">s</name></expr></argument>, <argument pos:start="910:37" pos:end="910:43"><expr pos:start="910:37" pos:end="910:43"><name pos:start="910:37" pos:end="910:43">vq_data</name></expr></argument>, <argument pos:start="910:46" pos:end="910:56"><expr pos:start="910:46" pos:end="910:56"><name pos:start="910:46" pos:end="910:56">vq_linesize</name></expr></argument>, <argument pos:start="910:59" pos:end="910:71"><expr pos:start="910:59" pos:end="910:71"><name pos:start="910:59" pos:end="910:71"><name pos:start="910:59" pos:end="910:60">mb</name><operator pos:start="910:61" pos:end="910:62">-&gt;</operator><name pos:start="910:63" pos:end="910:71">v4_vector</name></name></expr></argument>, <argument pos:start="910:74" pos:end="910:77"><expr pos:start="910:74" pos:end="910:77"><name pos:start="910:74" pos:end="910:77">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="912:17" pos:end="913:75"><expr pos:start="912:17" pos:end="913:74"><name pos:start="912:17" pos:end="912:28"><name pos:start="912:17" pos:end="912:18">mb</name><operator pos:start="912:19" pos:end="912:20">-&gt;</operator><name pos:start="912:21" pos:end="912:28">v4_error</name></name> <operator pos:start="912:30" pos:end="912:30">=</operator> <call pos:start="912:32" pos:end="913:74"><name pos:start="912:32" pos:end="912:52">compute_mb_distortion</name><argument_list pos:start="912:53" pos:end="913:74">(<argument pos:start="912:54" pos:end="912:54"><expr pos:start="912:54" pos:end="912:54"><name pos:start="912:54" pos:end="912:54">s</name></expr></argument>, <argument pos:start="912:57" pos:end="912:64"><expr pos:start="912:57" pos:end="912:64"><name pos:start="912:57" pos:end="912:64">sub_data</name></expr></argument>, <argument pos:start="912:67" pos:end="912:78"><expr pos:start="912:67" pos:end="912:78"><name pos:start="912:67" pos:end="912:78">sub_linesize</name></expr></argument>,
                                                     <argument pos:start="913:54" pos:end="913:60"><expr pos:start="913:54" pos:end="913:60"><name pos:start="913:54" pos:end="913:60">vq_data</name></expr></argument>, <argument pos:start="913:63" pos:end="913:73"><expr pos:start="913:63" pos:end="913:73"><name pos:start="913:63" pos:end="913:73">vq_linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="914:17" pos:end="914:44"><expr pos:start="914:17" pos:end="914:43"><name pos:start="914:17" pos:end="914:27">total_error</name> <operator pos:start="914:29" pos:end="914:30">+=</operator> <name pos:start="914:32" pos:end="914:43"><name pos:start="914:32" pos:end="914:33">mb</name><operator pos:start="914:34" pos:end="914:35">-&gt;</operator><name pos:start="914:36" pos:end="914:43">v4_error</name></name></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
            <expr_stmt pos:start="916:13" pos:end="916:32"><expr pos:start="916:13" pos:end="916:31"><name pos:start="916:13" pos:end="916:13">i</name> <operator pos:start="916:15" pos:end="916:16">+=</operator> <ternary pos:start="916:18" pos:end="916:31"><condition pos:start="916:18" pos:end="916:25"><expr pos:start="916:18" pos:end="916:23"><name pos:start="916:18" pos:end="916:23">v1mode</name></expr> ?</condition><then pos:start="916:27" pos:end="916:27"> <expr pos:start="916:27" pos:end="916:27"><literal type="number" pos:start="916:27" pos:end="916:27">1</literal></expr> </then><else pos:start="916:29" pos:end="916:31">: <expr pos:start="916:31" pos:end="916:31"><literal type="number" pos:start="916:31" pos:end="916:31">4</literal></expr></else></ternary></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
<comment type="line" pos:start="919:1" pos:end="919:62">// check that we did it right in the beginning of the function</comment>
    <expr_stmt pos:start="920:5" pos:end="920:26"><expr pos:start="920:5" pos:end="920:25"><call pos:start="920:5" pos:end="920:25"><name pos:start="920:5" pos:end="920:14">av_assert0</name><argument_list pos:start="920:15" pos:end="920:25">(<argument pos:start="920:16" pos:end="920:24"><expr pos:start="920:16" pos:end="920:24"><name pos:start="920:16" pos:end="920:16">i</name> <operator pos:start="920:18" pos:end="920:19">&gt;=</operator> <name pos:start="920:21" pos:end="920:24">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="920:28" pos:end="920:74">// training set is no smaller than the codebook</comment>

    <comment type="line" pos:start="922:5" pos:end="922:110">//av_log(s-&gt;avctx, AV_LOG_INFO, "isv1 %i size= %i i= %i error %"PRId64"\n", v1mode, size, i, total_error);</comment>

    <return pos:start="924:5" pos:end="924:16">return <expr pos:start="924:12" pos:end="924:15"><name pos:start="924:12" pos:end="924:15">size</name></expr>;</return>
</block_content>}</block></function>

<function pos:start="927:1" pos:end="948:1"><type pos:start="927:1" pos:end="927:11"><specifier pos:start="927:1" pos:end="927:6">static</specifier> <name pos:start="927:8" pos:end="927:11">void</name></type> <name pos:start="927:13" pos:end="927:33">calculate_skip_errors</name><parameter_list pos:start="927:34" pos:end="930:51">(<parameter pos:start="927:35" pos:end="927:54"><decl pos:start="927:35" pos:end="927:54"><type pos:start="927:35" pos:end="927:54"><name pos:start="927:35" pos:end="927:51">CinepakEncContext</name> <modifier pos:start="927:53" pos:end="927:53">*</modifier></type><name pos:start="927:54" pos:end="927:54">s</name></decl></parameter>, <parameter pos:start="927:57" pos:end="927:61"><decl pos:start="927:57" pos:end="927:61"><type pos:start="927:57" pos:end="927:61"><name pos:start="927:57" pos:end="927:59">int</name></type> <name pos:start="927:61" pos:end="927:61">h</name></decl></parameter>,
                                  <parameter pos:start="928:35" pos:end="928:55"><decl pos:start="928:35" pos:end="928:55"><type pos:start="928:35" pos:end="928:52"><name pos:start="928:35" pos:end="928:41">uint8_t</name> <modifier pos:start="928:43" pos:end="928:43">*</modifier></type><name pos:start="928:44" pos:end="928:55"><name pos:start="928:44" pos:end="928:52">last_data</name><index pos:start="928:53" pos:end="928:55">[<expr pos:start="928:54" pos:end="928:54"><literal type="number" pos:start="928:54" pos:end="928:54">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="928:58" pos:end="928:77"><decl pos:start="928:58" pos:end="928:77"><type pos:start="928:58" pos:end="928:74"><name pos:start="928:58" pos:end="928:60">int</name></type> <name pos:start="928:62" pos:end="928:77"><name pos:start="928:62" pos:end="928:74">last_linesize</name><index pos:start="928:75" pos:end="928:77">[<expr pos:start="928:76" pos:end="928:76"><literal type="number" pos:start="928:76" pos:end="928:76">4</literal></expr>]</index></name></decl></parameter>,
                                  <parameter pos:start="929:35" pos:end="929:50"><decl pos:start="929:35" pos:end="929:50"><type pos:start="929:35" pos:end="929:47"><name pos:start="929:35" pos:end="929:41">uint8_t</name> <modifier pos:start="929:43" pos:end="929:43">*</modifier></type><name pos:start="929:44" pos:end="929:50"><name pos:start="929:44" pos:end="929:47">data</name><index pos:start="929:48" pos:end="929:50">[<expr pos:start="929:49" pos:end="929:49"><literal type="number" pos:start="929:49" pos:end="929:49">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="929:53" pos:end="929:67"><decl pos:start="929:53" pos:end="929:67"><type pos:start="929:53" pos:end="929:64"><name pos:start="929:53" pos:end="929:55">int</name></type> <name pos:start="929:57" pos:end="929:67"><name pos:start="929:57" pos:end="929:64">linesize</name><index pos:start="929:65" pos:end="929:67">[<expr pos:start="929:66" pos:end="929:66"><literal type="number" pos:start="929:66" pos:end="929:66">4</literal></expr>]</index></name></decl></parameter>,
                                  <parameter pos:start="930:35" pos:end="930:50"><decl pos:start="930:35" pos:end="930:50"><type pos:start="930:35" pos:end="930:50"><name pos:start="930:35" pos:end="930:44">strip_info</name> <modifier pos:start="930:46" pos:end="930:46">*</modifier></type><name pos:start="930:47" pos:end="930:50">info</name></decl></parameter>)</parameter_list>
<block pos:start="931:1" pos:end="948:1">{<block_content pos:start="932:5" pos:end="947:5">
    <decl_stmt pos:start="932:5" pos:end="932:16"><decl pos:start="932:5" pos:end="932:9"><type pos:start="932:5" pos:end="932:7"><name pos:start="932:5" pos:end="932:7">int</name></type> <name pos:start="932:9" pos:end="932:9">x</name></decl>, <decl pos:start="932:12" pos:end="932:12"><type ref="prev" pos:start="932:5" pos:end="932:7"/><name pos:start="932:12" pos:end="932:12">y</name></decl>, <decl pos:start="932:15" pos:end="932:15"><type ref="prev" pos:start="932:5" pos:end="932:7"/><name pos:start="932:15" pos:end="932:15">i</name></decl>;</decl_stmt>
    <decl_stmt pos:start="933:5" pos:end="933:57"><decl pos:start="933:5" pos:end="933:33"><type pos:start="933:5" pos:end="933:13"><name pos:start="933:5" pos:end="933:11">uint8_t</name> <modifier pos:start="933:13" pos:end="933:13">*</modifier></type><name pos:start="933:14" pos:end="933:33"><name pos:start="933:14" pos:end="933:26">sub_last_data</name>    <index pos:start="933:31" pos:end="933:33">[<expr pos:start="933:32" pos:end="933:32"><literal type="number" pos:start="933:32" pos:end="933:32">4</literal></expr>]</index></name></decl>, <decl pos:start="933:36" pos:end="933:56"><type ref="prev" pos:start="933:5" pos:end="933:13"><modifier pos:start="933:36" pos:end="933:36">*</modifier></type><name pos:start="933:37" pos:end="933:56"><name pos:start="933:37" pos:end="933:49">sub_pict_data</name>    <index pos:start="933:54" pos:end="933:56">[<expr pos:start="933:55" pos:end="933:55"><literal type="number" pos:start="933:55" pos:end="933:55">4</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="934:5" pos:end="934:57"><decl pos:start="934:5" pos:end="934:33"><type pos:start="934:5" pos:end="934:7"><name pos:start="934:5" pos:end="934:7">int</name></type>      <name pos:start="934:14" pos:end="934:33"><name pos:start="934:14" pos:end="934:30">sub_last_linesize</name><index pos:start="934:31" pos:end="934:33">[<expr pos:start="934:32" pos:end="934:32"><literal type="number" pos:start="934:32" pos:end="934:32">4</literal></expr>]</index></name></decl>,  <decl pos:start="934:37" pos:end="934:56"><type ref="prev" pos:start="934:5" pos:end="934:7"/><name pos:start="934:37" pos:end="934:56"><name pos:start="934:37" pos:end="934:53">sub_pict_linesize</name><index pos:start="934:54" pos:end="934:56">[<expr pos:start="934:55" pos:end="934:55"><literal type="number" pos:start="934:55" pos:end="934:55">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <for pos:start="936:5" pos:end="947:5">for<control pos:start="936:8" pos:end="936:39">(<init pos:start="936:9" pos:end="936:18"><expr pos:start="936:9" pos:end="936:17"><name pos:start="936:9" pos:end="936:9">i</name> <operator pos:start="936:11" pos:end="936:11">=</operator> <name pos:start="936:13" pos:end="936:13">y</name> <operator pos:start="936:15" pos:end="936:15">=</operator> <literal type="number" pos:start="936:17" pos:end="936:17">0</literal></expr>;</init> <condition pos:start="936:20" pos:end="936:25"><expr pos:start="936:20" pos:end="936:24"><name pos:start="936:20" pos:end="936:20">y</name> <operator pos:start="936:22" pos:end="936:22">&lt;</operator> <name pos:start="936:24" pos:end="936:24">h</name></expr>;</condition> <incr pos:start="936:27" pos:end="936:38"><expr pos:start="936:27" pos:end="936:38"><name pos:start="936:27" pos:end="936:27">y</name> <operator pos:start="936:29" pos:end="936:30">+=</operator> <name pos:start="936:32" pos:end="936:38">MB_SIZE</name></expr></incr>)</control> <block pos:start="936:41" pos:end="947:5">{<block_content pos:start="937:9" pos:end="946:9">
        <for pos:start="937:9" pos:end="946:9">for<control pos:start="937:12" pos:end="937:47">(<init pos:start="937:13" pos:end="937:18"><expr pos:start="937:13" pos:end="937:17"><name pos:start="937:13" pos:end="937:13">x</name> <operator pos:start="937:15" pos:end="937:15">=</operator> <literal type="number" pos:start="937:17" pos:end="937:17">0</literal></expr>;</init> <condition pos:start="937:20" pos:end="937:28"><expr pos:start="937:20" pos:end="937:27"><name pos:start="937:20" pos:end="937:20">x</name> <operator pos:start="937:22" pos:end="937:22">&lt;</operator> <name pos:start="937:24" pos:end="937:27"><name pos:start="937:24" pos:end="937:24">s</name><operator pos:start="937:25" pos:end="937:26">-&gt;</operator><name pos:start="937:27" pos:end="937:27">w</name></name></expr>;</condition> <incr pos:start="937:30" pos:end="937:46"><expr pos:start="937:30" pos:end="937:41"><name pos:start="937:30" pos:end="937:30">x</name> <operator pos:start="937:32" pos:end="937:33">+=</operator> <name pos:start="937:35" pos:end="937:41">MB_SIZE</name></expr><operator pos:start="937:42" pos:end="937:42">,</operator> <expr pos:start="937:44" pos:end="937:46"><name pos:start="937:44" pos:end="937:44">i</name><operator pos:start="937:45" pos:end="937:46">++</operator></expr></incr>)</control> <block pos:start="937:49" pos:end="946:9">{<block_content pos:start="938:13" pos:end="945:78">
            <expr_stmt pos:start="938:13" pos:end="939:67"><expr pos:start="938:13" pos:end="939:66"><call pos:start="938:13" pos:end="939:66"><name pos:start="938:13" pos:end="938:27">get_sub_picture</name><argument_list pos:start="938:28" pos:end="939:66">(<argument pos:start="938:29" pos:end="938:29"><expr pos:start="938:29" pos:end="938:29"><name pos:start="938:29" pos:end="938:29">s</name></expr></argument>, <argument pos:start="938:32" pos:end="938:32"><expr pos:start="938:32" pos:end="938:32"><name pos:start="938:32" pos:end="938:32">x</name></expr></argument>, <argument pos:start="938:35" pos:end="938:35"><expr pos:start="938:35" pos:end="938:35"><name pos:start="938:35" pos:end="938:35">y</name></expr></argument>, <argument pos:start="938:38" pos:end="938:46"><expr pos:start="938:38" pos:end="938:46"><name pos:start="938:38" pos:end="938:46">last_data</name></expr></argument>,     <argument pos:start="938:53" pos:end="938:65"><expr pos:start="938:53" pos:end="938:65"><name pos:start="938:53" pos:end="938:65">last_linesize</name></expr></argument>,
                                 <argument pos:start="939:34" pos:end="939:46"><expr pos:start="939:34" pos:end="939:46"><name pos:start="939:34" pos:end="939:46">sub_last_data</name></expr></argument>, <argument pos:start="939:49" pos:end="939:65"><expr pos:start="939:49" pos:end="939:65"><name pos:start="939:49" pos:end="939:65">sub_last_linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="940:13" pos:end="941:67"><expr pos:start="940:13" pos:end="941:66"><call pos:start="940:13" pos:end="941:66"><name pos:start="940:13" pos:end="940:27">get_sub_picture</name><argument_list pos:start="940:28" pos:end="941:66">(<argument pos:start="940:29" pos:end="940:29"><expr pos:start="940:29" pos:end="940:29"><name pos:start="940:29" pos:end="940:29">s</name></expr></argument>, <argument pos:start="940:32" pos:end="940:32"><expr pos:start="940:32" pos:end="940:32"><name pos:start="940:32" pos:end="940:32">x</name></expr></argument>, <argument pos:start="940:35" pos:end="940:35"><expr pos:start="940:35" pos:end="940:35"><name pos:start="940:35" pos:end="940:35">y</name></expr></argument>,      <argument pos:start="940:43" pos:end="940:46"><expr pos:start="940:43" pos:end="940:46"><name pos:start="940:43" pos:end="940:46">data</name></expr></argument>,          <argument pos:start="940:58" pos:end="940:65"><expr pos:start="940:58" pos:end="940:65"><name pos:start="940:58" pos:end="940:65">linesize</name></expr></argument>,
                                 <argument pos:start="941:34" pos:end="941:46"><expr pos:start="941:34" pos:end="941:46"><name pos:start="941:34" pos:end="941:46">sub_pict_data</name></expr></argument>, <argument pos:start="941:49" pos:end="941:65"><expr pos:start="941:49" pos:end="941:65"><name pos:start="941:49" pos:end="941:65">sub_pict_linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="943:13" pos:end="945:78"><expr pos:start="943:13" pos:end="945:77"><name pos:start="943:13" pos:end="943:20"><name pos:start="943:13" pos:end="943:13">s</name><operator pos:start="943:14" pos:end="943:15">-&gt;</operator><name pos:start="943:16" pos:end="943:17">mb</name><index pos:start="943:18" pos:end="943:20">[<expr pos:start="943:19" pos:end="943:19"><name pos:start="943:19" pos:end="943:19">i</name></expr>]</index></name><operator pos:start="943:21" pos:end="943:21">.</operator><name pos:start="943:22" pos:end="943:31">skip_error</name> <operator pos:start="943:33" pos:end="943:33">=</operator> <call pos:start="943:35" pos:end="945:77"><name pos:start="943:35" pos:end="943:55">compute_mb_distortion</name><argument_list pos:start="943:56" pos:end="945:77">(<argument pos:start="943:57" pos:end="943:57"><expr pos:start="943:57" pos:end="943:57"><name pos:start="943:57" pos:end="943:57">s</name></expr></argument>,
                                            <argument pos:start="944:45" pos:end="944:57"><expr pos:start="944:45" pos:end="944:57"><name pos:start="944:45" pos:end="944:57">sub_last_data</name></expr></argument>, <argument pos:start="944:60" pos:end="944:76"><expr pos:start="944:60" pos:end="944:76"><name pos:start="944:60" pos:end="944:76">sub_last_linesize</name></expr></argument>,
                                            <argument pos:start="945:45" pos:end="945:57"><expr pos:start="945:45" pos:end="945:57"><name pos:start="945:45" pos:end="945:57">sub_pict_data</name></expr></argument>, <argument pos:start="945:60" pos:end="945:76"><expr pos:start="945:60" pos:end="945:76"><name pos:start="945:60" pos:end="945:76">sub_pict_linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
</block_content>}</block></function>

<function pos:start="950:1" pos:end="966:1"><type pos:start="950:1" pos:end="950:11"><specifier pos:start="950:1" pos:end="950:6">static</specifier> <name pos:start="950:8" pos:end="950:11">void</name></type> <name pos:start="950:13" pos:end="950:30">write_strip_header</name><parameter_list pos:start="950:31" pos:end="950:116">(<parameter pos:start="950:32" pos:end="950:51"><decl pos:start="950:32" pos:end="950:51"><type pos:start="950:32" pos:end="950:51"><name pos:start="950:32" pos:end="950:48">CinepakEncContext</name> <modifier pos:start="950:50" pos:end="950:50">*</modifier></type><name pos:start="950:51" pos:end="950:51">s</name></decl></parameter>, <parameter pos:start="950:54" pos:end="950:58"><decl pos:start="950:54" pos:end="950:58"><type pos:start="950:54" pos:end="950:58"><name pos:start="950:54" pos:end="950:56">int</name></type> <name pos:start="950:58" pos:end="950:58">y</name></decl></parameter>, <parameter pos:start="950:61" pos:end="950:65"><decl pos:start="950:61" pos:end="950:65"><type pos:start="950:61" pos:end="950:65"><name pos:start="950:61" pos:end="950:63">int</name></type> <name pos:start="950:65" pos:end="950:65">h</name></decl></parameter>, <parameter pos:start="950:68" pos:end="950:79"><decl pos:start="950:68" pos:end="950:79"><type pos:start="950:68" pos:end="950:79"><name pos:start="950:68" pos:end="950:70">int</name></type> <name pos:start="950:72" pos:end="950:79">keyframe</name></decl></parameter>, <parameter pos:start="950:82" pos:end="950:99"><decl pos:start="950:82" pos:end="950:99"><type pos:start="950:82" pos:end="950:99"><name pos:start="950:82" pos:end="950:89">unsigned</name> <name pos:start="950:91" pos:end="950:94">char</name> <modifier pos:start="950:96" pos:end="950:96">*</modifier></type><name pos:start="950:97" pos:end="950:99">buf</name></decl></parameter>, <parameter pos:start="950:102" pos:end="950:115"><decl pos:start="950:102" pos:end="950:115"><type pos:start="950:102" pos:end="950:115"><name pos:start="950:102" pos:end="950:104">int</name></type> <name pos:start="950:106" pos:end="950:115">strip_size</name></decl></parameter>)</parameter_list>
<block pos:start="951:1" pos:end="966:1">{<block_content pos:start="957:5" pos:end="964:28">
<comment type="line" pos:start="952:1" pos:end="952:76">// actually we are exclusively using intra strip coding (how much can we win</comment>
<comment type="line" pos:start="953:1" pos:end="953:65">// otherwise? how to choose which part of a codebook to update?),</comment>
<comment type="line" pos:start="954:1" pos:end="954:74">// keyframes are different only because we disallow ENC_SKIP on them -- rl</comment>
<comment type="line" pos:start="955:1" pos:end="955:50">// (besides, the logic here used to be inverted: )</comment>
<comment type="line" pos:start="956:1" pos:end="956:37">//    buf[0] = keyframe ? 0x11: 0x10;</comment>
    <expr_stmt pos:start="957:5" pos:end="957:35"><expr pos:start="957:5" pos:end="957:34"><name pos:start="957:5" pos:end="957:10"><name pos:start="957:5" pos:end="957:7">buf</name><index pos:start="957:8" pos:end="957:10">[<expr pos:start="957:9" pos:end="957:9"><literal type="number" pos:start="957:9" pos:end="957:9">0</literal></expr>]</index></name> <operator pos:start="957:12" pos:end="957:12">=</operator> <ternary pos:start="957:14" pos:end="957:34"><condition pos:start="957:14" pos:end="957:23"><expr pos:start="957:14" pos:end="957:21"><name pos:start="957:14" pos:end="957:21">keyframe</name></expr> ?</condition><then pos:start="957:25" pos:end="957:28"> <expr pos:start="957:25" pos:end="957:28"><literal type="number" pos:start="957:25" pos:end="957:28">0x10</literal></expr></then><else pos:start="957:29" pos:end="957:34">: <expr pos:start="957:31" pos:end="957:34"><literal type="number" pos:start="957:31" pos:end="957:34">0x11</literal></expr></else></ternary></expr>;</expr_stmt>
    <expr_stmt pos:start="958:5" pos:end="958:53"><expr pos:start="958:5" pos:end="958:52"><call pos:start="958:5" pos:end="958:52"><name pos:start="958:5" pos:end="958:11">AV_WB24</name><argument_list pos:start="958:12" pos:end="958:52">(<argument pos:start="958:13" pos:end="958:19"><expr pos:start="958:13" pos:end="958:19"><operator pos:start="958:13" pos:end="958:13">&amp;</operator><name pos:start="958:14" pos:end="958:19"><name pos:start="958:14" pos:end="958:16">buf</name><index pos:start="958:17" pos:end="958:19">[<expr pos:start="958:18" pos:end="958:18"><literal type="number" pos:start="958:18" pos:end="958:18">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="958:22" pos:end="958:51"><expr pos:start="958:22" pos:end="958:51"><name pos:start="958:22" pos:end="958:31">strip_size</name> <operator pos:start="958:33" pos:end="958:33">+</operator> <name pos:start="958:35" pos:end="958:51">STRIP_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="line" pos:start="959:1" pos:end="959:68">//    AV_WB16(&amp;buf[4], y); /* using absolute y values works -- rl */</comment>
    <expr_stmt pos:start="960:5" pos:end="960:24"><expr pos:start="960:5" pos:end="960:23"><call pos:start="960:5" pos:end="960:23"><name pos:start="960:5" pos:end="960:11">AV_WB16</name><argument_list pos:start="960:12" pos:end="960:23">(<argument pos:start="960:13" pos:end="960:19"><expr pos:start="960:13" pos:end="960:19"><operator pos:start="960:13" pos:end="960:13">&amp;</operator><name pos:start="960:14" pos:end="960:19"><name pos:start="960:14" pos:end="960:16">buf</name><index pos:start="960:17" pos:end="960:19">[<expr pos:start="960:18" pos:end="960:18"><literal type="number" pos:start="960:18" pos:end="960:18">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="960:22" pos:end="960:22"><expr pos:start="960:22" pos:end="960:22"><literal type="number" pos:start="960:22" pos:end="960:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="960:26" pos:end="960:72">/* using relative values works as well -- rl */</comment>
    <expr_stmt pos:start="961:5" pos:end="961:24"><expr pos:start="961:5" pos:end="961:23"><call pos:start="961:5" pos:end="961:23"><name pos:start="961:5" pos:end="961:11">AV_WB16</name><argument_list pos:start="961:12" pos:end="961:23">(<argument pos:start="961:13" pos:end="961:19"><expr pos:start="961:13" pos:end="961:19"><operator pos:start="961:13" pos:end="961:13">&amp;</operator><name pos:start="961:14" pos:end="961:19"><name pos:start="961:14" pos:end="961:16">buf</name><index pos:start="961:17" pos:end="961:19">[<expr pos:start="961:18" pos:end="961:18"><literal type="number" pos:start="961:18" pos:end="961:18">6</literal></expr>]</index></name></expr></argument>, <argument pos:start="961:22" pos:end="961:22"><expr pos:start="961:22" pos:end="961:22"><literal type="number" pos:start="961:22" pos:end="961:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="line" pos:start="962:1" pos:end="962:70">//    AV_WB16(&amp;buf[8], y+h); /* using absolute y values works -- rl */</comment>
    <expr_stmt pos:start="963:5" pos:end="963:24"><expr pos:start="963:5" pos:end="963:23"><call pos:start="963:5" pos:end="963:23"><name pos:start="963:5" pos:end="963:11">AV_WB16</name><argument_list pos:start="963:12" pos:end="963:23">(<argument pos:start="963:13" pos:end="963:19"><expr pos:start="963:13" pos:end="963:19"><operator pos:start="963:13" pos:end="963:13">&amp;</operator><name pos:start="963:14" pos:end="963:19"><name pos:start="963:14" pos:end="963:16">buf</name><index pos:start="963:17" pos:end="963:19">[<expr pos:start="963:18" pos:end="963:18"><literal type="number" pos:start="963:18" pos:end="963:18">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="963:22" pos:end="963:22"><expr pos:start="963:22" pos:end="963:22"><name pos:start="963:22" pos:end="963:22">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="963:26" pos:end="963:72">/* using relative values works as well -- rl */</comment>
    <expr_stmt pos:start="964:5" pos:end="964:28"><expr pos:start="964:5" pos:end="964:27"><call pos:start="964:5" pos:end="964:27"><name pos:start="964:5" pos:end="964:11">AV_WB16</name><argument_list pos:start="964:12" pos:end="964:27">(<argument pos:start="964:13" pos:end="964:20"><expr pos:start="964:13" pos:end="964:20"><operator pos:start="964:13" pos:end="964:13">&amp;</operator><name pos:start="964:14" pos:end="964:20"><name pos:start="964:14" pos:end="964:16">buf</name><index pos:start="964:17" pos:end="964:20">[<expr pos:start="964:18" pos:end="964:19"><literal type="number" pos:start="964:18" pos:end="964:19">10</literal></expr>]</index></name></expr></argument>, <argument pos:start="964:23" pos:end="964:26"><expr pos:start="964:23" pos:end="964:26"><name pos:start="964:23" pos:end="964:26"><name pos:start="964:23" pos:end="964:23">s</name><operator pos:start="964:24" pos:end="964:25">-&gt;</operator><name pos:start="964:26" pos:end="964:26">w</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line" pos:start="965:5" pos:end="965:95">//av_log(s-&gt;avctx, AV_LOG_INFO, "write_strip_header() %x keyframe=%d\n", buf[0], keyframe);</comment>
</block_content>}</block></function>

<function pos:start="968:1" pos:end="1148:1"><type pos:start="968:1" pos:end="968:10"><specifier pos:start="968:1" pos:end="968:6">static</specifier> <name pos:start="968:8" pos:end="968:10">int</name></type> <name pos:start="968:12" pos:end="968:19">rd_strip</name><parameter_list pos:start="968:20" pos:end="976:1">(<parameter pos:start="968:21" pos:end="968:40"><decl pos:start="968:21" pos:end="968:40"><type pos:start="968:21" pos:end="968:40"><name pos:start="968:21" pos:end="968:37">CinepakEncContext</name> <modifier pos:start="968:39" pos:end="968:39">*</modifier></type><name pos:start="968:40" pos:end="968:40">s</name></decl></parameter>, <parameter pos:start="968:43" pos:end="968:47"><decl pos:start="968:43" pos:end="968:47"><type pos:start="968:43" pos:end="968:47"><name pos:start="968:43" pos:end="968:45">int</name></type> <name pos:start="968:47" pos:end="968:47">y</name></decl></parameter>, <parameter pos:start="968:50" pos:end="968:54"><decl pos:start="968:50" pos:end="968:54"><type pos:start="968:50" pos:end="968:54"><name pos:start="968:50" pos:end="968:52">int</name></type> <name pos:start="968:54" pos:end="968:54">h</name></decl></parameter>, <parameter pos:start="968:57" pos:end="968:68"><decl pos:start="968:57" pos:end="968:68"><type pos:start="968:57" pos:end="968:68"><name pos:start="968:57" pos:end="968:59">int</name></type> <name pos:start="968:61" pos:end="968:68">keyframe</name></decl></parameter>,
                    <parameter pos:start="969:21" pos:end="969:41"><decl pos:start="969:21" pos:end="969:41"><type pos:start="969:21" pos:end="969:38"><name pos:start="969:21" pos:end="969:27">uint8_t</name> <modifier pos:start="969:29" pos:end="969:29">*</modifier></type><name pos:start="969:30" pos:end="969:41"><name pos:start="969:30" pos:end="969:38">last_data</name><index pos:start="969:39" pos:end="969:41">[<expr pos:start="969:40" pos:end="969:40"><literal type="number" pos:start="969:40" pos:end="969:40">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="969:44" pos:end="969:63"><decl pos:start="969:44" pos:end="969:63"><type pos:start="969:44" pos:end="969:60"><name pos:start="969:44" pos:end="969:46">int</name></type> <name pos:start="969:48" pos:end="969:63"><name pos:start="969:48" pos:end="969:60">last_linesize</name><index pos:start="969:61" pos:end="969:63">[<expr pos:start="969:62" pos:end="969:62"><literal type="number" pos:start="969:62" pos:end="969:62">4</literal></expr>]</index></name></decl></parameter>,
                    <parameter pos:start="970:21" pos:end="970:36"><decl pos:start="970:21" pos:end="970:36"><type pos:start="970:21" pos:end="970:33"><name pos:start="970:21" pos:end="970:27">uint8_t</name> <modifier pos:start="970:29" pos:end="970:29">*</modifier></type><name pos:start="970:30" pos:end="970:36"><name pos:start="970:30" pos:end="970:33">data</name><index pos:start="970:34" pos:end="970:36">[<expr pos:start="970:35" pos:end="970:35"><literal type="number" pos:start="970:35" pos:end="970:35">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="970:39" pos:end="970:53"><decl pos:start="970:39" pos:end="970:53"><type pos:start="970:39" pos:end="970:50"><name pos:start="970:39" pos:end="970:41">int</name></type> <name pos:start="970:43" pos:end="970:53"><name pos:start="970:43" pos:end="970:50">linesize</name><index pos:start="970:51" pos:end="970:53">[<expr pos:start="970:52" pos:end="970:52"><literal type="number" pos:start="970:52" pos:end="970:52">4</literal></expr>]</index></name></decl></parameter>,
                    <parameter pos:start="971:21" pos:end="971:44"><decl pos:start="971:21" pos:end="971:44"><type pos:start="971:21" pos:end="971:41"><name pos:start="971:21" pos:end="971:27">uint8_t</name> <modifier pos:start="971:29" pos:end="971:29">*</modifier></type><name pos:start="971:30" pos:end="971:44"><name pos:start="971:30" pos:end="971:41">scratch_data</name><index pos:start="971:42" pos:end="971:44">[<expr pos:start="971:43" pos:end="971:43"><literal type="number" pos:start="971:43" pos:end="971:43">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="971:47" pos:end="971:69"><decl pos:start="971:47" pos:end="971:69"><type pos:start="971:47" pos:end="971:66"><name pos:start="971:47" pos:end="971:49">int</name></type> <name pos:start="971:51" pos:end="971:69"><name pos:start="971:51" pos:end="971:66">scratch_linesize</name><index pos:start="971:67" pos:end="971:69">[<expr pos:start="971:68" pos:end="971:68"><literal type="number" pos:start="971:68" pos:end="971:68">4</literal></expr>]</index></name></decl></parameter>,
                    <parameter pos:start="972:21" pos:end="972:38"><decl pos:start="972:21" pos:end="972:38"><type pos:start="972:21" pos:end="972:38"><name pos:start="972:21" pos:end="972:28">unsigned</name> <name pos:start="972:30" pos:end="972:33">char</name> <modifier pos:start="972:35" pos:end="972:35">*</modifier></type><name pos:start="972:36" pos:end="972:38">buf</name></decl></parameter>, <parameter pos:start="972:41" pos:end="974:0"><decl pos:start="972:41" pos:end="974:0"><type pos:start="972:41" pos:end="974:0"><name pos:start="972:41" pos:end="972:47">int64_t</name> <modifier pos:start="972:49" pos:end="972:49">*</modifier></type><name pos:start="972:50" pos:end="974:0">best_score</name></decl></parameter>
<cpp:ifdef pos:start="973:1" pos:end="973:26">#<cpp:directive pos:start="973:2" pos:end="973:6">ifdef</cpp:directive> <name pos:start="973:8" pos:end="973:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
, <parameter pos:start="974:3" pos:end="976:0"><decl pos:start="974:3" pos:end="976:0"><type pos:start="974:3" pos:end="976:0"><name pos:start="974:3" pos:end="974:9">int64_t</name> <modifier pos:start="974:11" pos:end="974:11">*</modifier></type><name pos:start="974:12" pos:end="976:0">best_serr</name></decl></parameter>
<cpp:endif pos:start="975:1" pos:end="975:6">#<cpp:directive pos:start="975:2" pos:end="975:6">endif</cpp:directive></cpp:endif>
)</parameter_list>
<block pos:start="977:1" pos:end="1148:1">{<block_content pos:start="978:5" pos:end="1147:21">
    <decl_stmt pos:start="978:5" pos:end="980:0"><decl pos:start="978:5" pos:end="978:21"><type pos:start="978:5" pos:end="978:11"><name pos:start="978:5" pos:end="978:11">int64_t</name></type> <name pos:start="978:13" pos:end="978:17">score</name> <init pos:start="978:19" pos:end="978:21">= <expr pos:start="978:21" pos:end="978:21"><literal type="number" pos:start="978:21" pos:end="978:21">0</literal></expr></init></decl>;</decl_stmt>
<cpp:ifdef pos:start="979:1" pos:end="979:26">#<cpp:directive pos:start="979:2" pos:end="979:6">ifdef</cpp:directive> <name pos:start="979:8" pos:end="979:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
    <decl_stmt pos:start="980:5" pos:end="982:0"><decl pos:start="980:5" pos:end="980:16"><type pos:start="980:5" pos:end="980:11"><name pos:start="980:5" pos:end="980:11">int64_t</name></type> <name pos:start="980:13" pos:end="980:16">serr</name></decl>;</decl_stmt>
<cpp:endif pos:start="981:1" pos:end="981:6">#<cpp:directive pos:start="981:2" pos:end="981:6">endif</cpp:directive></cpp:endif>
    <decl_stmt pos:start="982:5" pos:end="982:22"><decl pos:start="982:5" pos:end="982:21"><type pos:start="982:5" pos:end="982:7"><name pos:start="982:5" pos:end="982:7">int</name></type> <name pos:start="982:9" pos:end="982:17">best_size</name> <init pos:start="982:19" pos:end="982:21">= <expr pos:start="982:21" pos:end="982:21"><literal type="number" pos:start="982:21" pos:end="982:21">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="983:5" pos:end="983:20"><decl pos:start="983:5" pos:end="983:19"><type pos:start="983:5" pos:end="983:14"><name pos:start="983:5" pos:end="983:14">strip_info</name></type> <name pos:start="983:16" pos:end="983:19">info</name></decl>;</decl_stmt>
<comment type="line" pos:start="984:1" pos:end="984:29">// for codebook optimization:</comment>
    <decl_stmt pos:start="985:5" pos:end="985:45"><decl pos:start="985:5" pos:end="985:16"><type pos:start="985:5" pos:end="985:7"><name pos:start="985:5" pos:end="985:7">int</name></type> <name pos:start="985:9" pos:end="985:16">v1enough</name></decl>, <decl pos:start="985:19" pos:end="985:25"><type ref="prev" pos:start="985:5" pos:end="985:7"/><name pos:start="985:19" pos:end="985:25">v1_size</name></decl>, <decl pos:start="985:28" pos:end="985:35"><type ref="prev" pos:start="985:5" pos:end="985:7"/><name pos:start="985:28" pos:end="985:35">v4enough</name></decl>, <decl pos:start="985:38" pos:end="985:44"><type ref="prev" pos:start="985:5" pos:end="985:7"/><name pos:start="985:38" pos:end="985:44">v4_size</name></decl>;</decl_stmt>
    <decl_stmt pos:start="986:5" pos:end="986:33"><decl pos:start="986:5" pos:end="986:19"><type pos:start="986:5" pos:end="986:7"><name pos:start="986:5" pos:end="986:7">int</name></type> <name pos:start="986:9" pos:end="986:19">new_v1_size</name></decl>, <decl pos:start="986:22" pos:end="986:32"><type ref="prev" pos:start="986:5" pos:end="986:7"/><name pos:start="986:22" pos:end="986:32">new_v4_size</name></decl>;</decl_stmt>
    <decl_stmt pos:start="987:5" pos:end="987:27"><decl pos:start="987:5" pos:end="987:16"><type pos:start="987:5" pos:end="987:7"><name pos:start="987:5" pos:end="987:7">int</name></type> <name pos:start="987:9" pos:end="987:16">v1shrunk</name></decl>, <decl pos:start="987:19" pos:end="987:26"><type ref="prev" pos:start="987:5" pos:end="987:7"/><name pos:start="987:19" pos:end="987:26">v4shrunk</name></decl>;</decl_stmt>

    <if_stmt pos:start="989:5" pos:end="998:0"><if pos:start="989:5" pos:end="998:0">if<condition pos:start="989:7" pos:end="989:17">(<expr pos:start="989:8" pos:end="989:16"><operator pos:start="989:8" pos:end="989:8">!</operator><name pos:start="989:9" pos:end="989:16">keyframe</name></expr>)</condition><block type="pseudo" pos:start="990:9" pos:end="998:0"><block_content pos:start="990:9" pos:end="998:0">
        <expr_stmt pos:start="990:9" pos:end="998:0"><expr pos:start="990:9" pos:end="991:36"><call pos:start="990:9" pos:end="991:36"><name pos:start="990:9" pos:end="990:29">calculate_skip_errors</name><argument_list pos:start="990:30" pos:end="991:36">(<argument pos:start="990:31" pos:end="990:31"><expr pos:start="990:31" pos:end="990:31"><name pos:start="990:31" pos:end="990:31">s</name></expr></argument>, <argument pos:start="990:34" pos:end="990:34"><expr pos:start="990:34" pos:end="990:34"><name pos:start="990:34" pos:end="990:34">h</name></expr></argument>, <argument pos:start="990:37" pos:end="990:45"><expr pos:start="990:37" pos:end="990:45"><name pos:start="990:37" pos:end="990:45">last_data</name></expr></argument>, <argument pos:start="990:48" pos:end="990:60"><expr pos:start="990:48" pos:end="990:60"><name pos:start="990:48" pos:end="990:60">last_linesize</name></expr></argument>, <argument pos:start="990:63" pos:end="990:66"><expr pos:start="990:63" pos:end="990:66"><name pos:start="990:63" pos:end="990:66">data</name></expr></argument>, <argument pos:start="990:69" pos:end="990:76"><expr pos:start="990:69" pos:end="990:76"><name pos:start="990:69" pos:end="990:76">linesize</name></expr></argument>,
                              <argument pos:start="991:31" pos:end="991:35"><expr pos:start="991:31" pos:end="991:35"><operator pos:start="991:31" pos:end="991:31">&amp;</operator><name pos:start="991:32" pos:end="991:35">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="line" pos:start="993:5" pos:end="993:56">//try some powers of 4 for the size of the codebooks</comment>
    <comment type="line" pos:start="994:5" pos:end="994:61">//constraint the v4 codebook to be no bigger than v1 one,</comment>
    <comment type="line" pos:start="995:5" pos:end="995:34">//(and no less than v1_size/4)</comment>
    <comment type="line" pos:start="996:5" pos:end="996:79">//thus making v1 preferable and possibly losing small details? should be ok</comment>
<cpp:define pos:start="997:1" pos:end="997:27">#<cpp:directive pos:start="997:2" pos:end="997:7">define</cpp:directive> <cpp:macro pos:start="997:9" pos:end="997:25"><name pos:start="997:9" pos:end="997:25">SMALLEST_CODEBOOK</name></cpp:macro> <cpp:value pos:start="997:27" pos:end="997:27">1</cpp:value></cpp:define>
    <for pos:start="998:5" pos:end="1123:0">for<control pos:start="998:8" pos:end="998:103">(<init pos:start="998:9" pos:end="998:50"><expr pos:start="998:9" pos:end="998:20"><name pos:start="998:9" pos:end="998:16">v1enough</name> <operator pos:start="998:18" pos:end="998:18">=</operator> <literal type="number" pos:start="998:20" pos:end="998:20">0</literal></expr><operator pos:start="998:21" pos:end="998:21">,</operator> <expr pos:start="998:23" pos:end="998:49"><name pos:start="998:23" pos:end="998:29">v1_size</name> <operator pos:start="998:31" pos:end="998:31">=</operator> <name pos:start="998:33" pos:end="998:49">SMALLEST_CODEBOOK</name></expr>;</init> <condition pos:start="998:52" pos:end="998:88"><expr pos:start="998:52" pos:end="998:87"><name pos:start="998:52" pos:end="998:58">v1_size</name> <operator pos:start="998:60" pos:end="998:61">&lt;=</operator> <name pos:start="998:63" pos:end="998:74">CODEBOOK_MAX</name> <operator pos:start="998:76" pos:end="998:77">&amp;&amp;</operator> <operator pos:start="998:79" pos:end="998:79">!</operator><name pos:start="998:80" pos:end="998:87">v1enough</name></expr>;</condition> <incr pos:start="998:90" pos:end="998:102"><expr pos:start="998:90" pos:end="998:102"><name pos:start="998:90" pos:end="998:96">v1_size</name> <operator pos:start="998:98" pos:end="998:100">&lt;&lt;=</operator> <literal type="number" pos:start="998:102" pos:end="998:102">2</literal></expr></incr>)</control> <block pos:start="998:105" pos:end="1123:0">{<block_content pos:start="999:9" pos:end="1119:9">
        <for pos:start="999:9" pos:end="1119:9">for<control pos:start="999:12" pos:end="999:176">(<init pos:start="999:13" pos:end="999:38"><expr pos:start="999:13" pos:end="999:24"><name pos:start="999:13" pos:end="999:20">v4enough</name> <operator pos:start="999:22" pos:end="999:22">=</operator> <literal type="number" pos:start="999:24" pos:end="999:24">0</literal></expr><operator pos:start="999:25" pos:end="999:25">,</operator> <expr pos:start="999:27" pos:end="999:37"><name pos:start="999:27" pos:end="999:33">v4_size</name> <operator pos:start="999:35" pos:end="999:35">=</operator> <literal type="number" pos:start="999:37" pos:end="999:37">0</literal></expr>;</init> <condition pos:start="999:40" pos:end="999:71"><expr pos:start="999:40" pos:end="999:70"><name pos:start="999:40" pos:end="999:46">v4_size</name> <operator pos:start="999:48" pos:end="999:49">&lt;=</operator> <name pos:start="999:51" pos:end="999:57">v1_size</name> <operator pos:start="999:59" pos:end="999:60">&amp;&amp;</operator> <operator pos:start="999:62" pos:end="999:62">!</operator><name pos:start="999:63" pos:end="999:70">v4enough</name></expr>;</condition> <incr pos:start="999:73" pos:end="999:175"><expr pos:start="999:73" pos:end="999:175"><name pos:start="999:73" pos:end="999:79">v4_size</name> <operator pos:start="999:81" pos:end="999:81">=</operator> <ternary pos:start="999:83" pos:end="999:175"><condition pos:start="999:83" pos:end="999:91"><expr pos:start="999:83" pos:end="999:89"><name pos:start="999:83" pos:end="999:89">v4_size</name></expr> ?</condition><then pos:start="999:93" pos:end="999:104"> <expr pos:start="999:93" pos:end="999:104"><name pos:start="999:93" pos:end="999:99">v4_size</name> <operator pos:start="999:101" pos:end="999:102">&lt;&lt;</operator> <literal type="number" pos:start="999:104" pos:end="999:104">2</literal></expr> </then><else pos:start="999:106" pos:end="999:175">: <expr pos:start="999:108" pos:end="999:175"><ternary pos:start="999:108" pos:end="999:175"><condition pos:start="999:108" pos:end="999:142"><expr pos:start="999:108" pos:end="999:140"><name pos:start="999:108" pos:end="999:114">v1_size</name> <operator pos:start="999:116" pos:end="999:117">&gt;=</operator> <name pos:start="999:119" pos:end="999:135">SMALLEST_CODEBOOK</name> <operator pos:start="999:137" pos:end="999:138">&lt;&lt;</operator> <literal type="number" pos:start="999:140" pos:end="999:140">2</literal></expr> ?</condition><then pos:start="999:144" pos:end="999:155"> <expr pos:start="999:144" pos:end="999:155"><name pos:start="999:144" pos:end="999:150">v1_size</name> <operator pos:start="999:152" pos:end="999:153">&gt;&gt;</operator> <literal type="number" pos:start="999:155" pos:end="999:155">2</literal></expr> </then><else pos:start="999:157" pos:end="999:175">: <expr pos:start="999:159" pos:end="999:175"><name pos:start="999:159" pos:end="999:175">SMALLEST_CODEBOOK</name></expr></else></ternary></expr></else></ternary></expr></incr>)</control> <block pos:start="999:178" pos:end="1119:9">{<block_content pos:start="1001:13" pos:end="1118:13">
            <comment type="line" pos:start="1000:13" pos:end="1000:27">//try all modes</comment>
            <for pos:start="1001:13" pos:end="1118:13">for<control pos:start="1001:16" pos:end="1001:64">(<init pos:start="1001:17" pos:end="1001:37"><decl pos:start="1001:17" pos:end="1001:36"><type pos:start="1001:17" pos:end="1001:27"><name pos:start="1001:17" pos:end="1001:27">CinepakMode</name></type> <name pos:start="1001:29" pos:end="1001:32">mode</name> <init pos:start="1001:34" pos:end="1001:36">= <expr pos:start="1001:36" pos:end="1001:36"><literal type="number" pos:start="1001:36" pos:end="1001:36">0</literal></expr></init></decl>;</init> <condition pos:start="1001:39" pos:end="1001:56"><expr pos:start="1001:39" pos:end="1001:55"><name pos:start="1001:39" pos:end="1001:42">mode</name> <operator pos:start="1001:44" pos:end="1001:44">&lt;</operator> <name pos:start="1001:46" pos:end="1001:55">MODE_COUNT</name></expr>;</condition> <incr pos:start="1001:58" pos:end="1001:63"><expr pos:start="1001:58" pos:end="1001:63"><name pos:start="1001:58" pos:end="1001:61">mode</name><operator pos:start="1001:62" pos:end="1001:63">++</operator></expr></incr>)</control> <block pos:start="1001:66" pos:end="1118:13">{<block_content pos:start="1003:17" pos:end="1117:17">
                <comment type="line" pos:start="1002:17" pos:end="1002:53">//don't allow MODE_MC in intra frames</comment>
                <if_stmt pos:start="1003:17" pos:end="1004:29"><if pos:start="1003:17" pos:end="1004:29">if<condition pos:start="1003:19" pos:end="1003:47">(<expr pos:start="1003:20" pos:end="1003:46"><name pos:start="1003:20" pos:end="1003:27">keyframe</name> <operator pos:start="1003:29" pos:end="1003:30">&amp;&amp;</operator> <name pos:start="1003:32" pos:end="1003:35">mode</name> <operator pos:start="1003:37" pos:end="1003:38">==</operator> <name pos:start="1003:40" pos:end="1003:46">MODE_MC</name></expr>)</condition><block type="pseudo" pos:start="1004:21" pos:end="1004:29"><block_content pos:start="1004:21" pos:end="1004:29">
                    <continue pos:start="1004:21" pos:end="1004:29">continue;</continue></block_content></block></if></if_stmt>

                <if_stmt pos:start="1006:17" pos:end="1029:17"><if pos:start="1006:17" pos:end="1016:17">if<condition pos:start="1006:19" pos:end="1006:40">(<expr pos:start="1006:20" pos:end="1006:39"><name pos:start="1006:20" pos:end="1006:23">mode</name> <operator pos:start="1006:25" pos:end="1006:26">==</operator> <name pos:start="1006:28" pos:end="1006:39">MODE_V1_ONLY</name></expr>)</condition> <block pos:start="1006:42" pos:end="1016:17">{<block_content pos:start="1007:21" pos:end="1015:37">
                    <expr_stmt pos:start="1007:21" pos:end="1007:43"><expr pos:start="1007:21" pos:end="1007:42"><name pos:start="1007:21" pos:end="1007:32"><name pos:start="1007:21" pos:end="1007:24">info</name><operator pos:start="1007:25" pos:end="1007:25">.</operator><name pos:start="1007:26" pos:end="1007:32">v1_size</name></name> <operator pos:start="1007:34" pos:end="1007:34">=</operator> <name pos:start="1007:36" pos:end="1007:42">v1_size</name></expr>;</expr_stmt>
<comment type="line" pos:start="1008:1" pos:end="1008:71">// the size may shrink even before optimizations if the input is short:</comment>
                    <expr_stmt pos:start="1009:21" pos:end="1010:66"><expr pos:start="1009:21" pos:end="1010:65"><name pos:start="1009:21" pos:end="1009:32"><name pos:start="1009:21" pos:end="1009:24">info</name><operator pos:start="1009:25" pos:end="1009:25">.</operator><name pos:start="1009:26" pos:end="1009:32">v1_size</name></name> <operator pos:start="1009:34" pos:end="1009:34">=</operator> <call pos:start="1009:36" pos:end="1010:65"><name pos:start="1009:36" pos:end="1009:43">quantize</name><argument_list pos:start="1009:44" pos:end="1010:65">(<argument pos:start="1009:45" pos:end="1009:45"><expr pos:start="1009:45" pos:end="1009:45"><name pos:start="1009:45" pos:end="1009:45">s</name></expr></argument>, <argument pos:start="1009:48" pos:end="1009:48"><expr pos:start="1009:48" pos:end="1009:48"><name pos:start="1009:48" pos:end="1009:48">h</name></expr></argument>, <argument pos:start="1009:51" pos:end="1009:54"><expr pos:start="1009:51" pos:end="1009:54"><name pos:start="1009:51" pos:end="1009:54">data</name></expr></argument>, <argument pos:start="1009:57" pos:end="1009:64"><expr pos:start="1009:57" pos:end="1009:64"><name pos:start="1009:57" pos:end="1009:64">linesize</name></expr></argument>, <argument pos:start="1009:67" pos:end="1009:67"><expr pos:start="1009:67" pos:end="1009:67"><literal type="number" pos:start="1009:67" pos:end="1009:67">1</literal></expr></argument>,
                                            <argument pos:start="1010:45" pos:end="1010:49"><expr pos:start="1010:45" pos:end="1010:49"><operator pos:start="1010:45" pos:end="1010:45">&amp;</operator><name pos:start="1010:46" pos:end="1010:49">info</name></expr></argument>, <argument pos:start="1010:52" pos:end="1010:64"><expr pos:start="1010:52" pos:end="1010:64"><name pos:start="1010:52" pos:end="1010:64">ENC_UNCERTAIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if_stmt pos:start="1011:21" pos:end="1013:37"><if pos:start="1011:21" pos:end="1013:37">if<condition pos:start="1011:23" pos:end="1011:46">(<expr pos:start="1011:24" pos:end="1011:45"><name pos:start="1011:24" pos:end="1011:35"><name pos:start="1011:24" pos:end="1011:27">info</name><operator pos:start="1011:28" pos:end="1011:28">.</operator><name pos:start="1011:29" pos:end="1011:35">v1_size</name></name> <operator pos:start="1011:37" pos:end="1011:37">&lt;</operator> <name pos:start="1011:39" pos:end="1011:45">v1_size</name></expr>)</condition><block type="pseudo" pos:start="1013:25" pos:end="1013:37"><block_content pos:start="1013:25" pos:end="1013:37">
<comment type="line" pos:start="1012:1" pos:end="1012:59">// too few eligible blocks, no sense in trying bigger sizes</comment>
                        <expr_stmt pos:start="1013:25" pos:end="1013:37"><expr pos:start="1013:25" pos:end="1013:36"><name pos:start="1013:25" pos:end="1013:32">v1enough</name> <operator pos:start="1013:34" pos:end="1013:34">=</operator> <literal type="number" pos:start="1013:36" pos:end="1013:36">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="1015:21" pos:end="1015:37"><expr pos:start="1015:21" pos:end="1015:36"><name pos:start="1015:21" pos:end="1015:32"><name pos:start="1015:21" pos:end="1015:24">info</name><operator pos:start="1015:25" pos:end="1015:25">.</operator><name pos:start="1015:26" pos:end="1015:32">v4_size</name></name> <operator pos:start="1015:34" pos:end="1015:34">=</operator> <literal type="number" pos:start="1015:36" pos:end="1015:36">0</literal></expr>;</expr_stmt>
                </block_content>}</block></if> <else pos:start="1016:19" pos:end="1029:17">else <block pos:start="1016:24" pos:end="1029:17">{<block_content pos:start="1018:21" pos:end="1028:21"> <comment type="line" pos:start="1016:26" pos:end="1016:48">// mode != MODE_V1_ONLY</comment>
                    <comment type="line" pos:start="1017:21" pos:end="1017:75">// if v4 codebook is empty then only allow V1-only mode</comment>
                    <if_stmt pos:start="1018:21" pos:end="1019:33"><if pos:start="1018:21" pos:end="1019:33">if<condition pos:start="1018:23" pos:end="1018:32">(<expr pos:start="1018:24" pos:end="1018:31"><operator pos:start="1018:24" pos:end="1018:24">!</operator><name pos:start="1018:25" pos:end="1018:31">v4_size</name></expr>)</condition><block type="pseudo" pos:start="1019:25" pos:end="1019:33"><block_content pos:start="1019:25" pos:end="1019:33">
                        <continue pos:start="1019:25" pos:end="1019:33">continue;</continue></block_content></block></if></if_stmt>

                    <if_stmt pos:start="1021:21" pos:end="1028:21"><if pos:start="1021:21" pos:end="1028:21">if<condition pos:start="1021:23" pos:end="1021:42">(<expr pos:start="1021:24" pos:end="1021:41"><name pos:start="1021:24" pos:end="1021:27">mode</name> <operator pos:start="1021:29" pos:end="1021:30">==</operator> <name pos:start="1021:32" pos:end="1021:41">MODE_V1_V4</name></expr>)</condition> <block pos:start="1021:44" pos:end="1028:21">{<block_content pos:start="1022:25" pos:end="1027:41">
                        <expr_stmt pos:start="1022:25" pos:end="1022:47"><expr pos:start="1022:25" pos:end="1022:46"><name pos:start="1022:25" pos:end="1022:36"><name pos:start="1022:25" pos:end="1022:28">info</name><operator pos:start="1022:29" pos:end="1022:29">.</operator><name pos:start="1022:30" pos:end="1022:36">v4_size</name></name> <operator pos:start="1022:38" pos:end="1022:38">=</operator> <name pos:start="1022:40" pos:end="1022:46">v4_size</name></expr>;</expr_stmt>
                        <expr_stmt pos:start="1023:25" pos:end="1024:70"><expr pos:start="1023:25" pos:end="1024:69"><name pos:start="1023:25" pos:end="1023:36"><name pos:start="1023:25" pos:end="1023:28">info</name><operator pos:start="1023:29" pos:end="1023:29">.</operator><name pos:start="1023:30" pos:end="1023:36">v4_size</name></name> <operator pos:start="1023:38" pos:end="1023:38">=</operator> <call pos:start="1023:40" pos:end="1024:69"><name pos:start="1023:40" pos:end="1023:47">quantize</name><argument_list pos:start="1023:48" pos:end="1024:69">(<argument pos:start="1023:49" pos:end="1023:49"><expr pos:start="1023:49" pos:end="1023:49"><name pos:start="1023:49" pos:end="1023:49">s</name></expr></argument>, <argument pos:start="1023:52" pos:end="1023:52"><expr pos:start="1023:52" pos:end="1023:52"><name pos:start="1023:52" pos:end="1023:52">h</name></expr></argument>, <argument pos:start="1023:55" pos:end="1023:58"><expr pos:start="1023:55" pos:end="1023:58"><name pos:start="1023:55" pos:end="1023:58">data</name></expr></argument>, <argument pos:start="1023:61" pos:end="1023:68"><expr pos:start="1023:61" pos:end="1023:68"><name pos:start="1023:61" pos:end="1023:68">linesize</name></expr></argument>, <argument pos:start="1023:71" pos:end="1023:71"><expr pos:start="1023:71" pos:end="1023:71"><literal type="number" pos:start="1023:71" pos:end="1023:71">0</literal></expr></argument>,
                                                <argument pos:start="1024:49" pos:end="1024:53"><expr pos:start="1024:49" pos:end="1024:53"><operator pos:start="1024:49" pos:end="1024:49">&amp;</operator><name pos:start="1024:50" pos:end="1024:53">info</name></expr></argument>, <argument pos:start="1024:56" pos:end="1024:68"><expr pos:start="1024:56" pos:end="1024:68"><name pos:start="1024:56" pos:end="1024:68">ENC_UNCERTAIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <if_stmt pos:start="1025:25" pos:end="1027:41"><if pos:start="1025:25" pos:end="1027:41">if<condition pos:start="1025:27" pos:end="1025:50">(<expr pos:start="1025:28" pos:end="1025:49"><name pos:start="1025:28" pos:end="1025:39"><name pos:start="1025:28" pos:end="1025:31">info</name><operator pos:start="1025:32" pos:end="1025:32">.</operator><name pos:start="1025:33" pos:end="1025:39">v4_size</name></name> <operator pos:start="1025:41" pos:end="1025:41">&lt;</operator> <name pos:start="1025:43" pos:end="1025:49">v4_size</name></expr>)</condition><block type="pseudo" pos:start="1027:29" pos:end="1027:41"><block_content pos:start="1027:29" pos:end="1027:41">
<comment type="line" pos:start="1026:1" pos:end="1026:59">// too few eligible blocks, no sense in trying bigger sizes</comment>
                            <expr_stmt pos:start="1027:29" pos:end="1027:41"><expr pos:start="1027:29" pos:end="1027:40"><name pos:start="1027:29" pos:end="1027:36">v4enough</name> <operator pos:start="1027:38" pos:end="1027:38">=</operator> <literal type="number" pos:start="1027:40" pos:end="1027:40">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="1031:17" pos:end="1031:33"><expr pos:start="1031:17" pos:end="1031:32"><name pos:start="1031:17" pos:end="1031:25"><name pos:start="1031:17" pos:end="1031:20">info</name><operator pos:start="1031:21" pos:end="1031:21">.</operator><name pos:start="1031:22" pos:end="1031:25">mode</name></name> <operator pos:start="1031:27" pos:end="1031:27">=</operator> <name pos:start="1031:29" pos:end="1031:32">mode</name></expr>;</expr_stmt>
<comment type="line" pos:start="1032:1" pos:end="1032:66">// choose the best encoding per block, based on current experience</comment>
                <expr_stmt pos:start="1033:17" pos:end="1038:2"><expr pos:start="1033:17" pos:end="1038:1"><name pos:start="1033:17" pos:end="1033:21">score</name> <operator pos:start="1033:23" pos:end="1033:23">=</operator> <call pos:start="1033:25" pos:end="1038:1"><name pos:start="1033:25" pos:end="1033:44">calculate_mode_score</name><argument_list pos:start="1033:45" pos:end="1038:1">(<argument pos:start="1033:46" pos:end="1033:46"><expr pos:start="1033:46" pos:end="1033:46"><name pos:start="1033:46" pos:end="1033:46">s</name></expr></argument>, <argument pos:start="1033:49" pos:end="1033:49"><expr pos:start="1033:49" pos:end="1033:49"><name pos:start="1033:49" pos:end="1033:49">h</name></expr></argument>, <argument pos:start="1033:52" pos:end="1033:56"><expr pos:start="1033:52" pos:end="1033:56"><operator pos:start="1033:52" pos:end="1033:52">&amp;</operator><name pos:start="1033:53" pos:end="1033:56">info</name></expr></argument>, <argument pos:start="1033:59" pos:end="1033:59"><expr pos:start="1033:59" pos:end="1033:59"><literal type="number" pos:start="1033:59" pos:end="1033:59">0</literal></expr></argument>,
                                             <argument pos:start="1034:46" pos:end="1034:54"><expr pos:start="1034:46" pos:end="1034:54"><operator pos:start="1034:46" pos:end="1034:46">&amp;</operator><name pos:start="1034:47" pos:end="1034:54">v1shrunk</name></expr></argument>, <argument pos:start="1034:57" pos:end="1036:0"><expr pos:start="1034:57" pos:end="1036:0"><operator pos:start="1034:57" pos:end="1034:57">&amp;</operator><name pos:start="1034:58" pos:end="1036:0">v4shrunk</name></expr></argument>
<cpp:ifdef pos:start="1035:1" pos:end="1035:26">#<cpp:directive pos:start="1035:2" pos:end="1035:6">ifdef</cpp:directive> <name pos:start="1035:8" pos:end="1035:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
, <argument pos:start="1036:3" pos:end="1038:0"><expr pos:start="1036:3" pos:end="1038:0"><operator pos:start="1036:3" pos:end="1036:3">&amp;</operator><name pos:start="1036:4" pos:end="1038:0">serr</name></expr></argument>
<cpp:endif pos:start="1037:1" pos:end="1037:6">#<cpp:directive pos:start="1037:2" pos:end="1037:6">endif</cpp:directive></cpp:endif>
)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1040:17" pos:end="1088:17"><if pos:start="1040:17" pos:end="1088:17">if<condition pos:start="1040:19" pos:end="1040:40">(<expr pos:start="1040:20" pos:end="1040:39"><name pos:start="1040:20" pos:end="1040:23">mode</name> <operator pos:start="1040:25" pos:end="1040:26">!=</operator> <name pos:start="1040:28" pos:end="1040:39">MODE_V1_ONLY</name></expr>)</condition><block pos:start="1040:41" pos:end="1088:17">{<block_content pos:start="1041:21" pos:end="1087:21">
                    <decl_stmt pos:start="1041:21" pos:end="1041:76"><decl pos:start="1041:21" pos:end="1041:75"><type pos:start="1041:21" pos:end="1041:23"><name pos:start="1041:21" pos:end="1041:23">int</name></type> <name pos:start="1041:25" pos:end="1041:46">extra_iterations_limit</name> <init pos:start="1041:48" pos:end="1041:75">= <expr pos:start="1041:50" pos:end="1041:75"><name pos:start="1041:50" pos:end="1041:75"><name pos:start="1041:50" pos:end="1041:50">s</name><operator pos:start="1041:51" pos:end="1041:52">-&gt;</operator><name pos:start="1041:53" pos:end="1041:75">max_extra_cb_iterations</name></name></expr></init></decl>;</decl_stmt>
<comment type="line" pos:start="1042:1" pos:end="1042:53">// recompute the codebooks, omitting the extra blocks</comment>
<comment type="line" pos:start="1043:1" pos:end="1043:70">// we assume we _may_ come here with more blocks to encode than before</comment>
                    <expr_stmt pos:start="1044:21" pos:end="1044:43"><expr pos:start="1044:21" pos:end="1044:42"><name pos:start="1044:21" pos:end="1044:32"><name pos:start="1044:21" pos:end="1044:24">info</name><operator pos:start="1044:25" pos:end="1044:25">.</operator><name pos:start="1044:26" pos:end="1044:32">v1_size</name></name> <operator pos:start="1044:34" pos:end="1044:34">=</operator> <name pos:start="1044:36" pos:end="1044:42">v1_size</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="1045:21" pos:end="1045:83"><expr pos:start="1045:21" pos:end="1045:82"><name pos:start="1045:21" pos:end="1045:31">new_v1_size</name> <operator pos:start="1045:33" pos:end="1045:33">=</operator> <call pos:start="1045:35" pos:end="1045:82"><name pos:start="1045:35" pos:end="1045:42">quantize</name><argument_list pos:start="1045:43" pos:end="1045:82">(<argument pos:start="1045:44" pos:end="1045:44"><expr pos:start="1045:44" pos:end="1045:44"><name pos:start="1045:44" pos:end="1045:44">s</name></expr></argument>, <argument pos:start="1045:47" pos:end="1045:47"><expr pos:start="1045:47" pos:end="1045:47"><name pos:start="1045:47" pos:end="1045:47">h</name></expr></argument>, <argument pos:start="1045:50" pos:end="1045:53"><expr pos:start="1045:50" pos:end="1045:53"><name pos:start="1045:50" pos:end="1045:53">data</name></expr></argument>, <argument pos:start="1045:56" pos:end="1045:63"><expr pos:start="1045:56" pos:end="1045:63"><name pos:start="1045:56" pos:end="1045:63">linesize</name></expr></argument>, <argument pos:start="1045:66" pos:end="1045:66"><expr pos:start="1045:66" pos:end="1045:66"><literal type="number" pos:start="1045:66" pos:end="1045:66">1</literal></expr></argument>, <argument pos:start="1045:69" pos:end="1045:73"><expr pos:start="1045:69" pos:end="1045:73"><operator pos:start="1045:69" pos:end="1045:69">&amp;</operator><name pos:start="1045:70" pos:end="1045:73">info</name></expr></argument>, <argument pos:start="1045:76" pos:end="1045:81"><expr pos:start="1045:76" pos:end="1045:81"><name pos:start="1045:76" pos:end="1045:81">ENC_V1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if_stmt pos:start="1046:21" pos:end="1049:21"><if pos:start="1046:21" pos:end="1049:21">if<condition pos:start="1046:23" pos:end="1046:50">(<expr pos:start="1046:24" pos:end="1046:49"><name pos:start="1046:24" pos:end="1046:34">new_v1_size</name> <operator pos:start="1046:36" pos:end="1046:36">&lt;</operator> <name pos:start="1046:38" pos:end="1046:49"><name pos:start="1046:38" pos:end="1046:41">info</name><operator pos:start="1046:42" pos:end="1046:42">.</operator><name pos:start="1046:43" pos:end="1046:49">v1_size</name></name></expr>)</condition><block pos:start="1046:51" pos:end="1049:21">{<block_content pos:start="1048:25" pos:end="1048:51">
                        <comment type="line" pos:start="1047:25" pos:end="1047:147">//av_log(s-&gt;avctx, AV_LOG_INFO, "mode %i, %3i, %3i: cut v1 codebook to %i entries\n", mode, v1_size, v4_size, new_v1_size);</comment>
                        <expr_stmt pos:start="1048:25" pos:end="1048:51"><expr pos:start="1048:25" pos:end="1048:50"><name pos:start="1048:25" pos:end="1048:36"><name pos:start="1048:25" pos:end="1048:28">info</name><operator pos:start="1048:29" pos:end="1048:29">.</operator><name pos:start="1048:30" pos:end="1048:36">v1_size</name></name> <operator pos:start="1048:38" pos:end="1048:38">=</operator> <name pos:start="1048:40" pos:end="1048:50">new_v1_size</name></expr>;</expr_stmt>
                    </block_content>}</block></if></if_stmt>
<comment type="line" pos:start="1050:1" pos:end="1050:70">// we assume we _may_ come here with more blocks to encode than before</comment>
                    <expr_stmt pos:start="1051:21" pos:end="1051:43"><expr pos:start="1051:21" pos:end="1051:42"><name pos:start="1051:21" pos:end="1051:32"><name pos:start="1051:21" pos:end="1051:24">info</name><operator pos:start="1051:25" pos:end="1051:25">.</operator><name pos:start="1051:26" pos:end="1051:32">v4_size</name></name> <operator pos:start="1051:34" pos:end="1051:34">=</operator> <name pos:start="1051:36" pos:end="1051:42">v4_size</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="1052:21" pos:end="1052:83"><expr pos:start="1052:21" pos:end="1052:82"><name pos:start="1052:21" pos:end="1052:31">new_v4_size</name> <operator pos:start="1052:33" pos:end="1052:33">=</operator> <call pos:start="1052:35" pos:end="1052:82"><name pos:start="1052:35" pos:end="1052:42">quantize</name><argument_list pos:start="1052:43" pos:end="1052:82">(<argument pos:start="1052:44" pos:end="1052:44"><expr pos:start="1052:44" pos:end="1052:44"><name pos:start="1052:44" pos:end="1052:44">s</name></expr></argument>, <argument pos:start="1052:47" pos:end="1052:47"><expr pos:start="1052:47" pos:end="1052:47"><name pos:start="1052:47" pos:end="1052:47">h</name></expr></argument>, <argument pos:start="1052:50" pos:end="1052:53"><expr pos:start="1052:50" pos:end="1052:53"><name pos:start="1052:50" pos:end="1052:53">data</name></expr></argument>, <argument pos:start="1052:56" pos:end="1052:63"><expr pos:start="1052:56" pos:end="1052:63"><name pos:start="1052:56" pos:end="1052:63">linesize</name></expr></argument>, <argument pos:start="1052:66" pos:end="1052:66"><expr pos:start="1052:66" pos:end="1052:66"><literal type="number" pos:start="1052:66" pos:end="1052:66">0</literal></expr></argument>, <argument pos:start="1052:69" pos:end="1052:73"><expr pos:start="1052:69" pos:end="1052:73"><operator pos:start="1052:69" pos:end="1052:69">&amp;</operator><name pos:start="1052:70" pos:end="1052:73">info</name></expr></argument>, <argument pos:start="1052:76" pos:end="1052:81"><expr pos:start="1052:76" pos:end="1052:81"><name pos:start="1052:76" pos:end="1052:81">ENC_V4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if_stmt pos:start="1053:21" pos:end="1056:21"><if pos:start="1053:21" pos:end="1056:21">if<condition pos:start="1053:23" pos:end="1053:50">(<expr pos:start="1053:24" pos:end="1053:49"><name pos:start="1053:24" pos:end="1053:34">new_v4_size</name> <operator pos:start="1053:36" pos:end="1053:36">&lt;</operator> <name pos:start="1053:38" pos:end="1053:49"><name pos:start="1053:38" pos:end="1053:41">info</name><operator pos:start="1053:42" pos:end="1053:42">.</operator><name pos:start="1053:43" pos:end="1053:49">v4_size</name></name></expr>)</condition> <block pos:start="1053:52" pos:end="1056:21">{<block_content pos:start="1055:25" pos:end="1055:51">
                        <comment type="line" pos:start="1054:25" pos:end="1054:166">//av_log(s-&gt;avctx, AV_LOG_INFO, "mode %i, %3i, %3i: cut v4 codebook to %i entries at first iteration\n", mode, v1_size, v4_size, new_v4_size);</comment>
                        <expr_stmt pos:start="1055:25" pos:end="1055:51"><expr pos:start="1055:25" pos:end="1055:50"><name pos:start="1055:25" pos:end="1055:36"><name pos:start="1055:25" pos:end="1055:28">info</name><operator pos:start="1055:29" pos:end="1055:29">.</operator><name pos:start="1055:30" pos:end="1055:36">v4_size</name></name> <operator pos:start="1055:38" pos:end="1055:38">=</operator> <name pos:start="1055:40" pos:end="1055:50">new_v4_size</name></expr>;</expr_stmt>
                    </block_content>}</block></if></if_stmt>
<comment type="line" pos:start="1057:1" pos:end="1057:32">// calculate the resulting score</comment>
<comment type="line" pos:start="1058:1" pos:end="1058:73">// (do not move blocks to codebook encodings now, as some blocks may have</comment>
<comment type="line" pos:start="1059:1" pos:end="1059:67">// got bigger errors despite a smaller training set - but we do not</comment>
<comment type="line" pos:start="1060:1" pos:end="1060:36">// ever grow the training sets back)</comment>
                    <for pos:start="1061:21" pos:end="1087:21">for<control pos:start="1061:24" pos:end="1061:27">(<init pos:start="1061:25" pos:end="1061:25">;</init><condition pos:start="1061:26" pos:end="1061:26">;</condition><incr/>)</control> <block pos:start="1061:29" pos:end="1087:21">{<block_content pos:start="1062:25" pos:end="1086:25">
                        <expr_stmt pos:start="1062:25" pos:end="1067:2"><expr pos:start="1062:25" pos:end="1067:1"><name pos:start="1062:25" pos:end="1062:29">score</name> <operator pos:start="1062:31" pos:end="1062:31">=</operator> <call pos:start="1062:33" pos:end="1067:1"><name pos:start="1062:33" pos:end="1062:52">calculate_mode_score</name><argument_list pos:start="1062:53" pos:end="1067:1">(<argument pos:start="1062:54" pos:end="1062:54"><expr pos:start="1062:54" pos:end="1062:54"><name pos:start="1062:54" pos:end="1062:54">s</name></expr></argument>, <argument pos:start="1062:57" pos:end="1062:57"><expr pos:start="1062:57" pos:end="1062:57"><name pos:start="1062:57" pos:end="1062:57">h</name></expr></argument>, <argument pos:start="1062:60" pos:end="1062:64"><expr pos:start="1062:60" pos:end="1062:64"><operator pos:start="1062:60" pos:end="1062:60">&amp;</operator><name pos:start="1062:61" pos:end="1062:64">info</name></expr></argument>, <argument pos:start="1062:67" pos:end="1062:67"><expr pos:start="1062:67" pos:end="1062:67"><literal type="number" pos:start="1062:67" pos:end="1062:67">1</literal></expr></argument>,
                                                     <argument pos:start="1063:54" pos:end="1063:62"><expr pos:start="1063:54" pos:end="1063:62"><operator pos:start="1063:54" pos:end="1063:54">&amp;</operator><name pos:start="1063:55" pos:end="1063:62">v1shrunk</name></expr></argument>, <argument pos:start="1063:65" pos:end="1065:0"><expr pos:start="1063:65" pos:end="1065:0"><operator pos:start="1063:65" pos:end="1063:65">&amp;</operator><name pos:start="1063:66" pos:end="1065:0">v4shrunk</name></expr></argument>
<cpp:ifdef pos:start="1064:1" pos:end="1064:26">#<cpp:directive pos:start="1064:2" pos:end="1064:6">ifdef</cpp:directive> <name pos:start="1064:8" pos:end="1064:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
, <argument pos:start="1065:3" pos:end="1067:0"><expr pos:start="1065:3" pos:end="1067:0"><operator pos:start="1065:3" pos:end="1065:3">&amp;</operator><name pos:start="1065:4" pos:end="1067:0">serr</name></expr></argument>
<cpp:endif pos:start="1066:1" pos:end="1066:6">#<cpp:directive pos:start="1066:2" pos:end="1066:6">endif</cpp:directive></cpp:endif>
)</argument_list></call></expr>;</expr_stmt>
<comment type="line" pos:start="1068:1" pos:end="1068:70">// do we have a reason to reiterate? if so, have we reached the limit?</comment>
                        <if_stmt pos:start="1069:25" pos:end="1069:88"><if pos:start="1069:25" pos:end="1069:88">if<condition pos:start="1069:27" pos:end="1069:81">(<expr pos:start="1069:28" pos:end="1069:80"><operator pos:start="1069:28" pos:end="1069:28">(</operator><operator pos:start="1069:29" pos:end="1069:29">!</operator><name pos:start="1069:30" pos:end="1069:37">v1shrunk</name> <operator pos:start="1069:39" pos:end="1069:40">&amp;&amp;</operator> <operator pos:start="1069:42" pos:end="1069:42">!</operator><name pos:start="1069:43" pos:end="1069:50">v4shrunk</name><operator pos:start="1069:51" pos:end="1069:51">)</operator> <operator pos:start="1069:53" pos:end="1069:54">||</operator> <operator pos:start="1069:56" pos:end="1069:56">!</operator><name pos:start="1069:57" pos:end="1069:78">extra_iterations_limit</name><operator pos:start="1069:79" pos:end="1069:80">--</operator></expr>)</condition><block type="pseudo" pos:start="1069:83" pos:end="1069:88"><block_content pos:start="1069:83" pos:end="1069:88"> <break pos:start="1069:83" pos:end="1069:88">break;</break></block_content></block></if></if_stmt>
<comment type="line" pos:start="1070:1" pos:end="1070:53">// recompute the codebooks, omitting the extra blocks</comment>
                        <if_stmt pos:start="1071:25" pos:end="1078:25"><if pos:start="1071:25" pos:end="1078:25">if<condition pos:start="1071:27" pos:end="1071:36">(<expr pos:start="1071:28" pos:end="1071:35"><name pos:start="1071:28" pos:end="1071:35">v1shrunk</name></expr>)</condition> <block pos:start="1071:38" pos:end="1078:25">{<block_content pos:start="1072:29" pos:end="1077:29">
                            <expr_stmt pos:start="1072:29" pos:end="1072:51"><expr pos:start="1072:29" pos:end="1072:50"><name pos:start="1072:29" pos:end="1072:40"><name pos:start="1072:29" pos:end="1072:32">info</name><operator pos:start="1072:33" pos:end="1072:33">.</operator><name pos:start="1072:34" pos:end="1072:40">v1_size</name></name> <operator pos:start="1072:42" pos:end="1072:42">=</operator> <name pos:start="1072:44" pos:end="1072:50">v1_size</name></expr>;</expr_stmt>
                            <expr_stmt pos:start="1073:29" pos:end="1073:91"><expr pos:start="1073:29" pos:end="1073:90"><name pos:start="1073:29" pos:end="1073:39">new_v1_size</name> <operator pos:start="1073:41" pos:end="1073:41">=</operator> <call pos:start="1073:43" pos:end="1073:90"><name pos:start="1073:43" pos:end="1073:50">quantize</name><argument_list pos:start="1073:51" pos:end="1073:90">(<argument pos:start="1073:52" pos:end="1073:52"><expr pos:start="1073:52" pos:end="1073:52"><name pos:start="1073:52" pos:end="1073:52">s</name></expr></argument>, <argument pos:start="1073:55" pos:end="1073:55"><expr pos:start="1073:55" pos:end="1073:55"><name pos:start="1073:55" pos:end="1073:55">h</name></expr></argument>, <argument pos:start="1073:58" pos:end="1073:61"><expr pos:start="1073:58" pos:end="1073:61"><name pos:start="1073:58" pos:end="1073:61">data</name></expr></argument>, <argument pos:start="1073:64" pos:end="1073:71"><expr pos:start="1073:64" pos:end="1073:71"><name pos:start="1073:64" pos:end="1073:71">linesize</name></expr></argument>, <argument pos:start="1073:74" pos:end="1073:74"><expr pos:start="1073:74" pos:end="1073:74"><literal type="number" pos:start="1073:74" pos:end="1073:74">1</literal></expr></argument>, <argument pos:start="1073:77" pos:end="1073:81"><expr pos:start="1073:77" pos:end="1073:81"><operator pos:start="1073:77" pos:end="1073:77">&amp;</operator><name pos:start="1073:78" pos:end="1073:81">info</name></expr></argument>, <argument pos:start="1073:84" pos:end="1073:89"><expr pos:start="1073:84" pos:end="1073:89"><name pos:start="1073:84" pos:end="1073:89">ENC_V1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <if_stmt pos:start="1074:29" pos:end="1077:29"><if pos:start="1074:29" pos:end="1077:29">if<condition pos:start="1074:31" pos:end="1074:58">(<expr pos:start="1074:32" pos:end="1074:57"><name pos:start="1074:32" pos:end="1074:42">new_v1_size</name> <operator pos:start="1074:44" pos:end="1074:44">&lt;</operator> <name pos:start="1074:46" pos:end="1074:57"><name pos:start="1074:46" pos:end="1074:49">info</name><operator pos:start="1074:50" pos:end="1074:50">.</operator><name pos:start="1074:51" pos:end="1074:57">v1_size</name></name></expr>)</condition><block pos:start="1074:59" pos:end="1077:29">{<block_content pos:start="1076:33" pos:end="1076:59">
                                <comment type="line" pos:start="1075:33" pos:end="1075:155">//av_log(s-&gt;avctx, AV_LOG_INFO, "mode %i, %3i, %3i: cut v1 codebook to %i entries\n", mode, v1_size, v4_size, new_v1_size);</comment>
                                <expr_stmt pos:start="1076:33" pos:end="1076:59"><expr pos:start="1076:33" pos:end="1076:58"><name pos:start="1076:33" pos:end="1076:44"><name pos:start="1076:33" pos:end="1076:36">info</name><operator pos:start="1076:37" pos:end="1076:37">.</operator><name pos:start="1076:38" pos:end="1076:44">v1_size</name></name> <operator pos:start="1076:46" pos:end="1076:46">=</operator> <name pos:start="1076:48" pos:end="1076:58">new_v1_size</name></expr>;</expr_stmt>
                            </block_content>}</block></if></if_stmt>
                        </block_content>}</block></if></if_stmt>
                        <if_stmt pos:start="1079:25" pos:end="1086:25"><if pos:start="1079:25" pos:end="1086:25">if<condition pos:start="1079:27" pos:end="1079:36">(<expr pos:start="1079:28" pos:end="1079:35"><name pos:start="1079:28" pos:end="1079:35">v4shrunk</name></expr>)</condition> <block pos:start="1079:38" pos:end="1086:25">{<block_content pos:start="1080:29" pos:end="1085:29">
                            <expr_stmt pos:start="1080:29" pos:end="1080:51"><expr pos:start="1080:29" pos:end="1080:50"><name pos:start="1080:29" pos:end="1080:40"><name pos:start="1080:29" pos:end="1080:32">info</name><operator pos:start="1080:33" pos:end="1080:33">.</operator><name pos:start="1080:34" pos:end="1080:40">v4_size</name></name> <operator pos:start="1080:42" pos:end="1080:42">=</operator> <name pos:start="1080:44" pos:end="1080:50">v4_size</name></expr>;</expr_stmt>
                            <expr_stmt pos:start="1081:29" pos:end="1081:91"><expr pos:start="1081:29" pos:end="1081:90"><name pos:start="1081:29" pos:end="1081:39">new_v4_size</name> <operator pos:start="1081:41" pos:end="1081:41">=</operator> <call pos:start="1081:43" pos:end="1081:90"><name pos:start="1081:43" pos:end="1081:50">quantize</name><argument_list pos:start="1081:51" pos:end="1081:90">(<argument pos:start="1081:52" pos:end="1081:52"><expr pos:start="1081:52" pos:end="1081:52"><name pos:start="1081:52" pos:end="1081:52">s</name></expr></argument>, <argument pos:start="1081:55" pos:end="1081:55"><expr pos:start="1081:55" pos:end="1081:55"><name pos:start="1081:55" pos:end="1081:55">h</name></expr></argument>, <argument pos:start="1081:58" pos:end="1081:61"><expr pos:start="1081:58" pos:end="1081:61"><name pos:start="1081:58" pos:end="1081:61">data</name></expr></argument>, <argument pos:start="1081:64" pos:end="1081:71"><expr pos:start="1081:64" pos:end="1081:71"><name pos:start="1081:64" pos:end="1081:71">linesize</name></expr></argument>, <argument pos:start="1081:74" pos:end="1081:74"><expr pos:start="1081:74" pos:end="1081:74"><literal type="number" pos:start="1081:74" pos:end="1081:74">0</literal></expr></argument>, <argument pos:start="1081:77" pos:end="1081:81"><expr pos:start="1081:77" pos:end="1081:81"><operator pos:start="1081:77" pos:end="1081:77">&amp;</operator><name pos:start="1081:78" pos:end="1081:81">info</name></expr></argument>, <argument pos:start="1081:84" pos:end="1081:89"><expr pos:start="1081:84" pos:end="1081:89"><name pos:start="1081:84" pos:end="1081:89">ENC_V4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <if_stmt pos:start="1082:29" pos:end="1085:29"><if pos:start="1082:29" pos:end="1085:29">if<condition pos:start="1082:31" pos:end="1082:58">(<expr pos:start="1082:32" pos:end="1082:57"><name pos:start="1082:32" pos:end="1082:42">new_v4_size</name> <operator pos:start="1082:44" pos:end="1082:44">&lt;</operator> <name pos:start="1082:46" pos:end="1082:57"><name pos:start="1082:46" pos:end="1082:49">info</name><operator pos:start="1082:50" pos:end="1082:50">.</operator><name pos:start="1082:51" pos:end="1082:57">v4_size</name></name></expr>)</condition> <block pos:start="1082:60" pos:end="1085:29">{<block_content pos:start="1084:33" pos:end="1084:59">
                                <comment type="line" pos:start="1083:33" pos:end="1083:155">//av_log(s-&gt;avctx, AV_LOG_INFO, "mode %i, %3i, %3i: cut v4 codebook to %i entries\n", mode, v1_size, v4_size, new_v4_size);</comment>
                                <expr_stmt pos:start="1084:33" pos:end="1084:59"><expr pos:start="1084:33" pos:end="1084:58"><name pos:start="1084:33" pos:end="1084:44"><name pos:start="1084:33" pos:end="1084:36">info</name><operator pos:start="1084:37" pos:end="1084:37">.</operator><name pos:start="1084:38" pos:end="1084:44">v4_size</name></name> <operator pos:start="1084:46" pos:end="1084:46">=</operator> <name pos:start="1084:48" pos:end="1084:58">new_v4_size</name></expr>;</expr_stmt>
                            </block_content>}</block></if></if_stmt>
                        </block_content>}</block></if></if_stmt>
                    </block_content>}</block></for>
                </block_content>}</block></if></if_stmt>

                <comment type="line" pos:start="1090:17" pos:end="1090:104">//av_log(s-&gt;avctx, AV_LOG_INFO, "%3i %3i score = %"PRId64"\n", v1_size, v4_size, score);</comment>

                <if_stmt pos:start="1092:17" pos:end="1117:17"><if pos:start="1092:17" pos:end="1117:17">if<condition pos:start="1092:19" pos:end="1092:57">(<expr pos:start="1092:20" pos:end="1092:56"><name pos:start="1092:20" pos:end="1092:28">best_size</name> <operator pos:start="1092:30" pos:end="1092:31">==</operator> <literal type="number" pos:start="1092:33" pos:end="1092:33">0</literal> <operator pos:start="1092:35" pos:end="1092:36">||</operator> <name pos:start="1092:38" pos:end="1092:42">score</name> <operator pos:start="1092:44" pos:end="1092:44">&lt;</operator> <operator pos:start="1092:46" pos:end="1092:46">*</operator><name pos:start="1092:47" pos:end="1092:56">best_score</name></expr>)</condition> <block pos:start="1092:59" pos:end="1117:17">{<block_content pos:start="1094:21" pos:end="1115:83">

                    <expr_stmt pos:start="1094:21" pos:end="1096:0"><expr pos:start="1094:21" pos:end="1094:39"><operator pos:start="1094:21" pos:end="1094:21">*</operator><name pos:start="1094:22" pos:end="1094:31">best_score</name> <operator pos:start="1094:33" pos:end="1094:33">=</operator> <name pos:start="1094:35" pos:end="1094:39">score</name></expr>;</expr_stmt>
<cpp:ifdef pos:start="1095:1" pos:end="1095:26">#<cpp:directive pos:start="1095:2" pos:end="1095:6">ifdef</cpp:directive> <name pos:start="1095:8" pos:end="1095:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
                    <expr_stmt pos:start="1096:21" pos:end="1098:0"><expr pos:start="1096:21" pos:end="1096:37"><operator pos:start="1096:21" pos:end="1096:21">*</operator><name pos:start="1096:22" pos:end="1096:30">best_serr</name> <operator pos:start="1096:32" pos:end="1096:32">=</operator> <name pos:start="1096:34" pos:end="1096:37">serr</name></expr>;</expr_stmt>
<cpp:endif pos:start="1097:1" pos:end="1097:6">#<cpp:directive pos:start="1097:2" pos:end="1097:6">endif</cpp:directive></cpp:endif>
                    <expr_stmt pos:start="1098:21" pos:end="1106:0"><expr pos:start="1098:21" pos:end="1101:77"><name pos:start="1098:21" pos:end="1098:29">best_size</name> <operator pos:start="1098:31" pos:end="1098:31">=</operator> <call pos:start="1098:33" pos:end="1101:77"><name pos:start="1098:33" pos:end="1098:43">encode_mode</name><argument_list pos:start="1098:44" pos:end="1101:77">(<argument pos:start="1098:45" pos:end="1098:45"><expr pos:start="1098:45" pos:end="1098:45"><name pos:start="1098:45" pos:end="1098:45">s</name></expr></argument>, <argument pos:start="1098:48" pos:end="1098:48"><expr pos:start="1098:48" pos:end="1098:48"><name pos:start="1098:48" pos:end="1098:48">h</name></expr></argument>,
                                            <argument pos:start="1099:45" pos:end="1099:56"><expr pos:start="1099:45" pos:end="1099:56"><name pos:start="1099:45" pos:end="1099:56">scratch_data</name></expr></argument>, <argument pos:start="1099:59" pos:end="1099:74"><expr pos:start="1099:59" pos:end="1099:74"><name pos:start="1099:59" pos:end="1099:74">scratch_linesize</name></expr></argument>,
                                            <argument pos:start="1100:45" pos:end="1100:53"><expr pos:start="1100:45" pos:end="1100:53"><name pos:start="1100:45" pos:end="1100:53">last_data</name></expr></argument>, <argument pos:start="1100:56" pos:end="1100:68"><expr pos:start="1100:56" pos:end="1100:68"><name pos:start="1100:56" pos:end="1100:68">last_linesize</name></expr></argument>, <argument pos:start="1100:71" pos:end="1100:75"><expr pos:start="1100:71" pos:end="1100:75"><operator pos:start="1100:71" pos:end="1100:71">&amp;</operator><name pos:start="1100:72" pos:end="1100:75">info</name></expr></argument>,
                                            <argument pos:start="1101:45" pos:end="1101:76"><expr pos:start="1101:45" pos:end="1101:76"><name pos:start="1101:45" pos:end="1101:56"><name pos:start="1101:45" pos:end="1101:45">s</name><operator pos:start="1101:46" pos:end="1101:47">-&gt;</operator><name pos:start="1101:48" pos:end="1101:56">strip_buf</name></name> <operator pos:start="1101:58" pos:end="1101:58">+</operator> <name pos:start="1101:60" pos:end="1101:76">STRIP_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="line" pos:start="1103:21" pos:end="1103:143">//av_log(s-&gt;avctx, AV_LOG_INFO, "mode %i, %3i, %3i: %18"PRId64" %i B", mode, info.v1_size, info.v4_size, score, best_size);</comment>
                    <comment type="line" pos:start="1104:21" pos:end="1104:58">//av_log(s-&gt;avctx, AV_LOG_INFO, "\n");</comment>
<cpp:ifdef pos:start="1105:1" pos:end="1105:26">#<cpp:directive pos:start="1105:2" pos:end="1105:6">ifdef</cpp:directive> <name pos:start="1105:8" pos:end="1105:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
                    <expr_stmt pos:start="1106:21" pos:end="1110:0"><expr pos:start="1106:21" pos:end="1106:131"><call pos:start="1106:21" pos:end="1106:131"><name pos:start="1106:21" pos:end="1106:26">av_log</name><argument_list pos:start="1106:27" pos:end="1106:131">(<argument pos:start="1106:28" pos:end="1106:35"><expr pos:start="1106:28" pos:end="1106:35"><name pos:start="1106:28" pos:end="1106:35"><name pos:start="1106:28" pos:end="1106:28">s</name><operator pos:start="1106:29" pos:end="1106:30">-&gt;</operator><name pos:start="1106:31" pos:end="1106:35">avctx</name></name></expr></argument>, <argument pos:start="1106:38" pos:end="1106:48"><expr pos:start="1106:38" pos:end="1106:48"><name pos:start="1106:38" pos:end="1106:48">AV_LOG_INFO</name></expr></argument>, <argument pos:start="1106:51" pos:end="1106:89"><expr pos:start="1106:51" pos:end="1106:89"><literal type="string" pos:start="1106:51" pos:end="1106:74">"mode %i, %3i, %3i: %18"</literal><name pos:start="1106:75" pos:end="1106:80">PRId64</name><literal type="string" pos:start="1106:81" pos:end="1106:89">" %i B\n"</literal></expr></argument>, <argument pos:start="1106:92" pos:end="1106:95"><expr pos:start="1106:92" pos:end="1106:95"><name pos:start="1106:92" pos:end="1106:95">mode</name></expr></argument>, <argument pos:start="1106:98" pos:end="1106:104"><expr pos:start="1106:98" pos:end="1106:104"><name pos:start="1106:98" pos:end="1106:104">v1_size</name></expr></argument>, <argument pos:start="1106:107" pos:end="1106:113"><expr pos:start="1106:107" pos:end="1106:113"><name pos:start="1106:107" pos:end="1106:113">v4_size</name></expr></argument>, <argument pos:start="1106:116" pos:end="1106:119"><expr pos:start="1106:116" pos:end="1106:119"><name pos:start="1106:116" pos:end="1106:119">serr</name></expr></argument>, <argument pos:start="1106:122" pos:end="1106:130"><expr pos:start="1106:122" pos:end="1106:130"><name pos:start="1106:122" pos:end="1106:130">best_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="1107:1" pos:end="1107:6">#<cpp:directive pos:start="1107:2" pos:end="1107:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1109:1" pos:end="1109:23">#<cpp:directive pos:start="1109:2" pos:end="1109:6">ifdef</cpp:directive> <name pos:start="1109:8" pos:end="1109:23">CINEPAKENC_DEBUG</name></cpp:ifdef>
                    <comment type="line" pos:start="1110:21" pos:end="1110:46">//save MB encoding choices</comment>
                    <expr_stmt pos:start="1111:21" pos:end="1113:0"><expr pos:start="1111:21" pos:end="1111:71"><call pos:start="1111:21" pos:end="1111:71"><name pos:start="1111:21" pos:end="1111:26">memcpy</name><argument_list pos:start="1111:27" pos:end="1111:71">(<argument pos:start="1111:28" pos:end="1111:37"><expr pos:start="1111:28" pos:end="1111:37"><name pos:start="1111:28" pos:end="1111:37"><name pos:start="1111:28" pos:end="1111:28">s</name><operator pos:start="1111:29" pos:end="1111:30">-&gt;</operator><name pos:start="1111:31" pos:end="1111:37">best_mb</name></name></expr></argument>, <argument pos:start="1111:40" pos:end="1111:44"><expr pos:start="1111:40" pos:end="1111:44"><name pos:start="1111:40" pos:end="1111:44"><name pos:start="1111:40" pos:end="1111:40">s</name><operator pos:start="1111:41" pos:end="1111:42">-&gt;</operator><name pos:start="1111:43" pos:end="1111:44">mb</name></name></expr></argument>, <argument pos:start="1111:47" pos:end="1111:70"><expr pos:start="1111:47" pos:end="1111:70"><name pos:start="1111:47" pos:end="1111:54">mb_count</name><operator pos:start="1111:55" pos:end="1111:55">*</operator><sizeof pos:start="1111:56" pos:end="1111:70">sizeof<argument_list pos:start="1111:62" pos:end="1111:70">(<argument pos:start="1111:63" pos:end="1111:69"><expr pos:start="1111:63" pos:end="1111:69"><name pos:start="1111:63" pos:end="1111:69">mb_info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="1112:1" pos:end="1112:6">#<cpp:directive pos:start="1112:2" pos:end="1112:6">endif</cpp:directive></cpp:endif>

                    <comment type="line" pos:start="1114:21" pos:end="1114:84">//memcpy(strip_temp + STRIP_HEADER_SIZE, strip_temp, best_size);</comment>
                    <expr_stmt pos:start="1115:21" pos:end="1115:83"><expr pos:start="1115:21" pos:end="1115:82"><call pos:start="1115:21" pos:end="1115:82"><name pos:start="1115:21" pos:end="1115:38">write_strip_header</name><argument_list pos:start="1115:39" pos:end="1115:82">(<argument pos:start="1115:40" pos:end="1115:40"><expr pos:start="1115:40" pos:end="1115:40"><name pos:start="1115:40" pos:end="1115:40">s</name></expr></argument>, <argument pos:start="1115:43" pos:end="1115:43"><expr pos:start="1115:43" pos:end="1115:43"><name pos:start="1115:43" pos:end="1115:43">y</name></expr></argument>, <argument pos:start="1115:46" pos:end="1115:46"><expr pos:start="1115:46" pos:end="1115:46"><name pos:start="1115:46" pos:end="1115:46">h</name></expr></argument>, <argument pos:start="1115:49" pos:end="1115:56"><expr pos:start="1115:49" pos:end="1115:56"><name pos:start="1115:49" pos:end="1115:56">keyframe</name></expr></argument>, <argument pos:start="1115:59" pos:end="1115:70"><expr pos:start="1115:59" pos:end="1115:70"><name pos:start="1115:59" pos:end="1115:70"><name pos:start="1115:59" pos:end="1115:59">s</name><operator pos:start="1115:60" pos:end="1115:61">-&gt;</operator><name pos:start="1115:62" pos:end="1115:70">strip_buf</name></name></expr></argument>, <argument pos:start="1115:73" pos:end="1115:81"><expr pos:start="1115:73" pos:end="1115:81"><name pos:start="1115:73" pos:end="1115:81">best_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></for>
    </block_content>}</block></for>

<cpp:ifdef pos:start="1122:1" pos:end="1122:23">#<cpp:directive pos:start="1122:2" pos:end="1122:6">ifdef</cpp:directive> <name pos:start="1122:8" pos:end="1122:23">CINEPAKENC_DEBUG</name></cpp:ifdef>
    <comment type="line" pos:start="1123:5" pos:end="1123:67">//gather stats. this will only work properly of MAX_STRIPS == 1</comment>
    <if_stmt pos:start="1124:5" pos:end="1143:0"><if pos:start="1124:5" pos:end="1127:5">if<condition pos:start="1124:7" pos:end="1124:38">(<expr pos:start="1124:8" pos:end="1124:37"><name pos:start="1124:8" pos:end="1124:21"><name pos:start="1124:8" pos:end="1124:16">best_info</name><operator pos:start="1124:17" pos:end="1124:17">.</operator><name pos:start="1124:18" pos:end="1124:21">mode</name></name> <operator pos:start="1124:23" pos:end="1124:24">==</operator> <name pos:start="1124:26" pos:end="1124:37">MODE_V1_ONLY</name></expr>)</condition> <block pos:start="1124:40" pos:end="1127:5">{<block_content pos:start="1125:9" pos:end="1126:41">
        <expr_stmt pos:start="1125:9" pos:end="1125:25"><expr pos:start="1125:9" pos:end="1125:24"><name pos:start="1125:9" pos:end="1125:22"><name pos:start="1125:9" pos:end="1125:9">s</name><operator pos:start="1125:10" pos:end="1125:11">-&gt;</operator><name pos:start="1125:12" pos:end="1125:22">num_v1_mode</name></name><operator pos:start="1125:23" pos:end="1125:24">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="1126:9" pos:end="1126:41"><expr pos:start="1126:9" pos:end="1126:40"><name pos:start="1126:9" pos:end="1126:22"><name pos:start="1126:9" pos:end="1126:9">s</name><operator pos:start="1126:10" pos:end="1126:11">-&gt;</operator><name pos:start="1126:12" pos:end="1126:22">num_v1_encs</name></name> <operator pos:start="1126:24" pos:end="1126:25">+=</operator> <name pos:start="1126:27" pos:end="1126:30"><name pos:start="1126:27" pos:end="1126:27">s</name><operator pos:start="1126:28" pos:end="1126:29">-&gt;</operator><name pos:start="1126:30" pos:end="1126:30">w</name></name><operator pos:start="1126:31" pos:end="1126:31">*</operator><name pos:start="1126:32" pos:end="1126:32">h</name><operator pos:start="1126:33" pos:end="1126:33">/</operator><name pos:start="1126:34" pos:end="1126:40">MB_AREA</name></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="1127:7" pos:end="1143:0">else <block pos:start="1127:12" pos:end="1143:0">{<block_content pos:start="1128:9" pos:end="1140:31">
        <if_stmt pos:start="1128:9" pos:end="1131:29"><if pos:start="1128:9" pos:end="1129:29">if<condition pos:start="1128:11" pos:end="1128:40">(<expr pos:start="1128:12" pos:end="1128:39"><name pos:start="1128:12" pos:end="1128:25"><name pos:start="1128:12" pos:end="1128:20">best_info</name><operator pos:start="1128:21" pos:end="1128:21">.</operator><name pos:start="1128:22" pos:end="1128:25">mode</name></name> <operator pos:start="1128:27" pos:end="1128:28">==</operator> <name pos:start="1128:30" pos:end="1128:39">MODE_V1_V4</name></expr>)</condition><block type="pseudo" pos:start="1129:13" pos:end="1129:29"><block_content pos:start="1129:13" pos:end="1129:29">
            <expr_stmt pos:start="1129:13" pos:end="1129:29"><expr pos:start="1129:13" pos:end="1129:28"><name pos:start="1129:13" pos:end="1129:26"><name pos:start="1129:13" pos:end="1129:13">s</name><operator pos:start="1129:14" pos:end="1129:15">-&gt;</operator><name pos:start="1129:16" pos:end="1129:26">num_v4_mode</name></name><operator pos:start="1129:27" pos:end="1129:28">++</operator></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="1130:9" pos:end="1131:29">else<block type="pseudo" pos:start="1131:13" pos:end="1131:29"><block_content pos:start="1131:13" pos:end="1131:29">
            <expr_stmt pos:start="1131:13" pos:end="1131:29"><expr pos:start="1131:13" pos:end="1131:28"><name pos:start="1131:13" pos:end="1131:26"><name pos:start="1131:13" pos:end="1131:13">s</name><operator pos:start="1131:14" pos:end="1131:15">-&gt;</operator><name pos:start="1131:16" pos:end="1131:26">num_mc_mode</name></name><operator pos:start="1131:27" pos:end="1131:28">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <decl_stmt pos:start="1133:9" pos:end="1133:14"><decl pos:start="1133:9" pos:end="1133:13"><type pos:start="1133:9" pos:end="1133:11"><name pos:start="1133:9" pos:end="1133:11">int</name></type> <name pos:start="1133:13" pos:end="1133:13">x</name></decl>;</decl_stmt>
        <for pos:start="1134:9" pos:end="1140:31">for<control pos:start="1134:12" pos:end="1134:43">(<init pos:start="1134:13" pos:end="1134:18"><expr pos:start="1134:13" pos:end="1134:17"><name pos:start="1134:13" pos:end="1134:13">x</name> <operator pos:start="1134:15" pos:end="1134:15">=</operator> <literal type="number" pos:start="1134:17" pos:end="1134:17">0</literal></expr>;</init> <condition pos:start="1134:20" pos:end="1134:38"><expr pos:start="1134:20" pos:end="1134:37"><name pos:start="1134:20" pos:end="1134:20">x</name> <operator pos:start="1134:22" pos:end="1134:22">&lt;</operator> <name pos:start="1134:24" pos:end="1134:27"><name pos:start="1134:24" pos:end="1134:24">s</name><operator pos:start="1134:25" pos:end="1134:26">-&gt;</operator><name pos:start="1134:27" pos:end="1134:27">w</name></name><operator pos:start="1134:28" pos:end="1134:28">*</operator><name pos:start="1134:29" pos:end="1134:29">h</name><operator pos:start="1134:30" pos:end="1134:30">/</operator><name pos:start="1134:31" pos:end="1134:37">MB_AREA</name></expr>;</condition> <incr pos:start="1134:40" pos:end="1134:42"><expr pos:start="1134:40" pos:end="1134:42"><name pos:start="1134:40" pos:end="1134:40">x</name><operator pos:start="1134:41" pos:end="1134:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1135:13" pos:end="1140:31"><block_content pos:start="1135:13" pos:end="1140:31">
            <if_stmt pos:start="1135:13" pos:end="1140:31"><if pos:start="1135:13" pos:end="1136:33">if<condition pos:start="1135:15" pos:end="1135:53">(<expr pos:start="1135:16" pos:end="1135:52"><name pos:start="1135:16" pos:end="1135:28"><name pos:start="1135:16" pos:end="1135:16">s</name><operator pos:start="1135:17" pos:end="1135:18">-&gt;</operator><name pos:start="1135:19" pos:end="1135:25">best_mb</name><index pos:start="1135:26" pos:end="1135:28">[<expr pos:start="1135:27" pos:end="1135:27"><name pos:start="1135:27" pos:end="1135:27">x</name></expr>]</index></name><operator pos:start="1135:29" pos:end="1135:29">.</operator><name pos:start="1135:30" pos:end="1135:42">best_encoding</name> <operator pos:start="1135:44" pos:end="1135:45">==</operator> <name pos:start="1135:47" pos:end="1135:52">ENC_V1</name></expr>)</condition><block type="pseudo" pos:start="1136:17" pos:end="1136:33"><block_content pos:start="1136:17" pos:end="1136:33">
                <expr_stmt pos:start="1136:17" pos:end="1136:33"><expr pos:start="1136:17" pos:end="1136:32"><name pos:start="1136:17" pos:end="1136:30"><name pos:start="1136:17" pos:end="1136:17">s</name><operator pos:start="1136:18" pos:end="1136:19">-&gt;</operator><name pos:start="1136:20" pos:end="1136:30">num_v1_encs</name></name><operator pos:start="1136:31" pos:end="1136:32">++</operator></expr>;</expr_stmt></block_content></block></if>
            <if type="elseif" pos:start="1137:13" pos:end="1138:33">else if<condition pos:start="1137:20" pos:end="1137:58">(<expr pos:start="1137:21" pos:end="1137:57"><name pos:start="1137:21" pos:end="1137:33"><name pos:start="1137:21" pos:end="1137:21">s</name><operator pos:start="1137:22" pos:end="1137:23">-&gt;</operator><name pos:start="1137:24" pos:end="1137:30">best_mb</name><index pos:start="1137:31" pos:end="1137:33">[<expr pos:start="1137:32" pos:end="1137:32"><name pos:start="1137:32" pos:end="1137:32">x</name></expr>]</index></name><operator pos:start="1137:34" pos:end="1137:34">.</operator><name pos:start="1137:35" pos:end="1137:47">best_encoding</name> <operator pos:start="1137:49" pos:end="1137:50">==</operator> <name pos:start="1137:52" pos:end="1137:57">ENC_V4</name></expr>)</condition><block type="pseudo" pos:start="1138:17" pos:end="1138:33"><block_content pos:start="1138:17" pos:end="1138:33">
                <expr_stmt pos:start="1138:17" pos:end="1138:33"><expr pos:start="1138:17" pos:end="1138:32"><name pos:start="1138:17" pos:end="1138:30"><name pos:start="1138:17" pos:end="1138:17">s</name><operator pos:start="1138:18" pos:end="1138:19">-&gt;</operator><name pos:start="1138:20" pos:end="1138:30">num_v4_encs</name></name><operator pos:start="1138:31" pos:end="1138:32">++</operator></expr>;</expr_stmt></block_content></block></if>
            <else pos:start="1139:13" pos:end="1140:31">else<block type="pseudo" pos:start="1140:17" pos:end="1140:31"><block_content pos:start="1140:17" pos:end="1140:31">
                <expr_stmt pos:start="1140:17" pos:end="1140:31"><expr pos:start="1140:17" pos:end="1140:30"><name pos:start="1140:17" pos:end="1140:28"><name pos:start="1140:17" pos:end="1140:17">s</name><operator pos:start="1140:18" pos:end="1140:19">-&gt;</operator><name pos:start="1140:20" pos:end="1140:28">num_skips</name></name><operator pos:start="1140:29" pos:end="1140:30">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></for>
    </block_content>}</block></else></if_stmt>
<cpp:endif pos:start="1142:1" pos:end="1142:6">#<cpp:directive pos:start="1142:2" pos:end="1142:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="1144:5" pos:end="1144:35"><expr pos:start="1144:5" pos:end="1144:34"><name pos:start="1144:5" pos:end="1144:13">best_size</name> <operator pos:start="1144:15" pos:end="1144:16">+=</operator> <name pos:start="1144:18" pos:end="1144:34">STRIP_HEADER_SIZE</name></expr>;</expr_stmt>
    <expr_stmt pos:start="1145:5" pos:end="1145:41"><expr pos:start="1145:5" pos:end="1145:40"><call pos:start="1145:5" pos:end="1145:40"><name pos:start="1145:5" pos:end="1145:10">memcpy</name><argument_list pos:start="1145:11" pos:end="1145:40">(<argument pos:start="1145:12" pos:end="1145:14"><expr pos:start="1145:12" pos:end="1145:14"><name pos:start="1145:12" pos:end="1145:14">buf</name></expr></argument>, <argument pos:start="1145:17" pos:end="1145:28"><expr pos:start="1145:17" pos:end="1145:28"><name pos:start="1145:17" pos:end="1145:28"><name pos:start="1145:17" pos:end="1145:17">s</name><operator pos:start="1145:18" pos:end="1145:19">-&gt;</operator><name pos:start="1145:20" pos:end="1145:28">strip_buf</name></name></expr></argument>, <argument pos:start="1145:31" pos:end="1145:39"><expr pos:start="1145:31" pos:end="1145:39"><name pos:start="1145:31" pos:end="1145:39">best_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="1147:5" pos:end="1147:21">return <expr pos:start="1147:12" pos:end="1147:20"><name pos:start="1147:12" pos:end="1147:20">best_size</name></expr>;</return>
</block_content>}</block></function>

<function pos:start="1150:1" pos:end="1159:1"><type pos:start="1150:1" pos:end="1150:10"><specifier pos:start="1150:1" pos:end="1150:6">static</specifier> <name pos:start="1150:8" pos:end="1150:10">int</name></type> <name pos:start="1150:12" pos:end="1150:28">write_cvid_header</name><parameter_list pos:start="1150:29" pos:end="1150:118">(<parameter pos:start="1150:30" pos:end="1150:49"><decl pos:start="1150:30" pos:end="1150:49"><type pos:start="1150:30" pos:end="1150:49"><name pos:start="1150:30" pos:end="1150:46">CinepakEncContext</name> <modifier pos:start="1150:48" pos:end="1150:48">*</modifier></type><name pos:start="1150:49" pos:end="1150:49">s</name></decl></parameter>, <parameter pos:start="1150:52" pos:end="1150:69"><decl pos:start="1150:52" pos:end="1150:69"><type pos:start="1150:52" pos:end="1150:69"><name pos:start="1150:52" pos:end="1150:59">unsigned</name> <name pos:start="1150:61" pos:end="1150:64">char</name> <modifier pos:start="1150:66" pos:end="1150:66">*</modifier></type><name pos:start="1150:67" pos:end="1150:69">buf</name></decl></parameter>, <parameter pos:start="1150:72" pos:end="1150:85"><decl pos:start="1150:72" pos:end="1150:85"><type pos:start="1150:72" pos:end="1150:85"><name pos:start="1150:72" pos:end="1150:74">int</name></type> <name pos:start="1150:76" pos:end="1150:85">num_strips</name></decl></parameter>, <parameter pos:start="1150:88" pos:end="1150:100"><decl pos:start="1150:88" pos:end="1150:100"><type pos:start="1150:88" pos:end="1150:100"><name pos:start="1150:88" pos:end="1150:90">int</name></type> <name pos:start="1150:92" pos:end="1150:100">data_size</name></decl></parameter>, <parameter pos:start="1150:103" pos:end="1150:117"><decl pos:start="1150:103" pos:end="1150:117"><type pos:start="1150:103" pos:end="1150:117"><name pos:start="1150:103" pos:end="1150:105">int</name></type> <name pos:start="1150:107" pos:end="1150:117">isakeyframe</name></decl></parameter>)</parameter_list>
<block pos:start="1151:1" pos:end="1159:1">{<block_content pos:start="1152:5" pos:end="1158:28">
    <expr_stmt pos:start="1152:5" pos:end="1152:33"><expr pos:start="1152:5" pos:end="1152:32"><name pos:start="1152:5" pos:end="1152:10"><name pos:start="1152:5" pos:end="1152:7">buf</name><index pos:start="1152:8" pos:end="1152:10">[<expr pos:start="1152:9" pos:end="1152:9"><literal type="number" pos:start="1152:9" pos:end="1152:9">0</literal></expr>]</index></name> <operator pos:start="1152:12" pos:end="1152:12">=</operator> <ternary pos:start="1152:14" pos:end="1152:32"><condition pos:start="1152:14" pos:end="1152:26"><expr pos:start="1152:14" pos:end="1152:24"><name pos:start="1152:14" pos:end="1152:24">isakeyframe</name></expr> ?</condition><then pos:start="1152:28" pos:end="1152:28"> <expr pos:start="1152:28" pos:end="1152:28"><literal type="number" pos:start="1152:28" pos:end="1152:28">0</literal></expr> </then><else pos:start="1152:30" pos:end="1152:32">: <expr pos:start="1152:32" pos:end="1152:32"><literal type="number" pos:start="1152:32" pos:end="1152:32">1</literal></expr></else></ternary></expr>;</expr_stmt>
    <expr_stmt pos:start="1153:5" pos:end="1153:51"><expr pos:start="1153:5" pos:end="1153:50"><call pos:start="1153:5" pos:end="1153:50"><name pos:start="1153:5" pos:end="1153:11">AV_WB24</name><argument_list pos:start="1153:12" pos:end="1153:50">(<argument pos:start="1153:13" pos:end="1153:19"><expr pos:start="1153:13" pos:end="1153:19"><operator pos:start="1153:13" pos:end="1153:13">&amp;</operator><name pos:start="1153:14" pos:end="1153:19"><name pos:start="1153:14" pos:end="1153:16">buf</name><index pos:start="1153:17" pos:end="1153:19">[<expr pos:start="1153:18" pos:end="1153:18"><literal type="number" pos:start="1153:18" pos:end="1153:18">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="1153:22" pos:end="1153:49"><expr pos:start="1153:22" pos:end="1153:49"><name pos:start="1153:22" pos:end="1153:30">data_size</name> <operator pos:start="1153:32" pos:end="1153:32">+</operator> <name pos:start="1153:34" pos:end="1153:49">CVID_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="1154:5" pos:end="1154:27"><expr pos:start="1154:5" pos:end="1154:26"><call pos:start="1154:5" pos:end="1154:26"><name pos:start="1154:5" pos:end="1154:11">AV_WB16</name><argument_list pos:start="1154:12" pos:end="1154:26">(<argument pos:start="1154:13" pos:end="1154:19"><expr pos:start="1154:13" pos:end="1154:19"><operator pos:start="1154:13" pos:end="1154:13">&amp;</operator><name pos:start="1154:14" pos:end="1154:19"><name pos:start="1154:14" pos:end="1154:16">buf</name><index pos:start="1154:17" pos:end="1154:19">[<expr pos:start="1154:18" pos:end="1154:18"><literal type="number" pos:start="1154:18" pos:end="1154:18">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="1154:22" pos:end="1154:25"><expr pos:start="1154:22" pos:end="1154:25"><name pos:start="1154:22" pos:end="1154:25"><name pos:start="1154:22" pos:end="1154:22">s</name><operator pos:start="1154:23" pos:end="1154:24">-&gt;</operator><name pos:start="1154:25" pos:end="1154:25">w</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="1155:5" pos:end="1155:27"><expr pos:start="1155:5" pos:end="1155:26"><call pos:start="1155:5" pos:end="1155:26"><name pos:start="1155:5" pos:end="1155:11">AV_WB16</name><argument_list pos:start="1155:12" pos:end="1155:26">(<argument pos:start="1155:13" pos:end="1155:19"><expr pos:start="1155:13" pos:end="1155:19"><operator pos:start="1155:13" pos:end="1155:13">&amp;</operator><name pos:start="1155:14" pos:end="1155:19"><name pos:start="1155:14" pos:end="1155:16">buf</name><index pos:start="1155:17" pos:end="1155:19">[<expr pos:start="1155:18" pos:end="1155:18"><literal type="number" pos:start="1155:18" pos:end="1155:18">6</literal></expr>]</index></name></expr></argument>, <argument pos:start="1155:22" pos:end="1155:25"><expr pos:start="1155:22" pos:end="1155:25"><name pos:start="1155:22" pos:end="1155:25"><name pos:start="1155:22" pos:end="1155:22">s</name><operator pos:start="1155:23" pos:end="1155:24">-&gt;</operator><name pos:start="1155:25" pos:end="1155:25">h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="1156:5" pos:end="1156:33"><expr pos:start="1156:5" pos:end="1156:32"><call pos:start="1156:5" pos:end="1156:32"><name pos:start="1156:5" pos:end="1156:11">AV_WB16</name><argument_list pos:start="1156:12" pos:end="1156:32">(<argument pos:start="1156:13" pos:end="1156:19"><expr pos:start="1156:13" pos:end="1156:19"><operator pos:start="1156:13" pos:end="1156:13">&amp;</operator><name pos:start="1156:14" pos:end="1156:19"><name pos:start="1156:14" pos:end="1156:16">buf</name><index pos:start="1156:17" pos:end="1156:19">[<expr pos:start="1156:18" pos:end="1156:18"><literal type="number" pos:start="1156:18" pos:end="1156:18">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="1156:22" pos:end="1156:31"><expr pos:start="1156:22" pos:end="1156:31"><name pos:start="1156:22" pos:end="1156:31">num_strips</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="1158:5" pos:end="1158:28">return <expr pos:start="1158:12" pos:end="1158:27"><name pos:start="1158:12" pos:end="1158:27">CVID_HEADER_SIZE</name></expr>;</return>
</block_content>}</block></function>

<function pos:start="1161:1" pos:end="1323:1"><type pos:start="1161:1" pos:end="1161:10"><specifier pos:start="1161:1" pos:end="1161:6">static</specifier> <name pos:start="1161:8" pos:end="1161:10">int</name></type> <name pos:start="1161:12" pos:end="1161:19">rd_frame</name><parameter_list pos:start="1161:20" pos:end="1162:70">(<parameter pos:start="1161:21" pos:end="1161:40"><decl pos:start="1161:21" pos:end="1161:40"><type pos:start="1161:21" pos:end="1161:40"><name pos:start="1161:21" pos:end="1161:37">CinepakEncContext</name> <modifier pos:start="1161:39" pos:end="1161:39">*</modifier></type><name pos:start="1161:40" pos:end="1161:40">s</name></decl></parameter>, <parameter pos:start="1161:43" pos:end="1161:62"><decl pos:start="1161:43" pos:end="1161:62"><type pos:start="1161:43" pos:end="1161:62"><specifier pos:start="1161:43" pos:end="1161:47">const</specifier> <name pos:start="1161:49" pos:end="1161:55">AVFrame</name> <modifier pos:start="1161:57" pos:end="1161:57">*</modifier></type><name pos:start="1161:58" pos:end="1161:62">frame</name></decl></parameter>,
                    <parameter pos:start="1162:21" pos:end="1162:35"><decl pos:start="1162:21" pos:end="1162:35"><type pos:start="1162:21" pos:end="1162:35"><name pos:start="1162:21" pos:end="1162:23">int</name></type> <name pos:start="1162:25" pos:end="1162:35">isakeyframe</name></decl></parameter>, <parameter pos:start="1162:38" pos:end="1162:55"><decl pos:start="1162:38" pos:end="1162:55"><type pos:start="1162:38" pos:end="1162:55"><name pos:start="1162:38" pos:end="1162:45">unsigned</name> <name pos:start="1162:47" pos:end="1162:50">char</name> <modifier pos:start="1162:52" pos:end="1162:52">*</modifier></type><name pos:start="1162:53" pos:end="1162:55">buf</name></decl></parameter>, <parameter pos:start="1162:58" pos:end="1162:69"><decl pos:start="1162:58" pos:end="1162:69"><type pos:start="1162:58" pos:end="1162:69"><name pos:start="1162:58" pos:end="1162:60">int</name></type> <name pos:start="1162:62" pos:end="1162:69">buf_size</name></decl></parameter>)</parameter_list>
<block pos:start="1163:1" pos:end="1323:1">{<block_content pos:start="1164:5" pos:end="1322:21">
    <decl_stmt pos:start="1164:5" pos:end="1164:56"><decl pos:start="1164:5" pos:end="1164:18"><type pos:start="1164:5" pos:end="1164:7"><name pos:start="1164:5" pos:end="1164:7">int</name></type> <name pos:start="1164:9" pos:end="1164:18">num_strips</name></decl>, <decl pos:start="1164:21" pos:end="1164:25"><type ref="prev" pos:start="1164:5" pos:end="1164:7"/><name pos:start="1164:21" pos:end="1164:25">strip</name></decl>, <decl pos:start="1164:28" pos:end="1164:28"><type ref="prev" pos:start="1164:5" pos:end="1164:7"/><name pos:start="1164:28" pos:end="1164:28">i</name></decl>, <decl pos:start="1164:31" pos:end="1164:31"><type ref="prev" pos:start="1164:5" pos:end="1164:7"/><name pos:start="1164:31" pos:end="1164:31">y</name></decl>, <decl pos:start="1164:34" pos:end="1164:38"><type ref="prev" pos:start="1164:5" pos:end="1164:7"/><name pos:start="1164:34" pos:end="1164:38">nexty</name></decl>, <decl pos:start="1164:41" pos:end="1164:44"><type ref="prev" pos:start="1164:5" pos:end="1164:7"/><name pos:start="1164:41" pos:end="1164:44">size</name></decl>, <decl pos:start="1164:47" pos:end="1164:55"><type ref="prev" pos:start="1164:5" pos:end="1164:7"/><name pos:start="1164:47" pos:end="1164:55">temp_size</name></decl>;</decl_stmt>
    <decl_stmt pos:start="1165:5" pos:end="1165:66"><decl pos:start="1165:5" pos:end="1165:29"><type pos:start="1165:5" pos:end="1165:13"><name pos:start="1165:5" pos:end="1165:11">uint8_t</name> <modifier pos:start="1165:13" pos:end="1165:13">*</modifier></type><name pos:start="1165:14" pos:end="1165:29"><name pos:start="1165:14" pos:end="1165:22">last_data</name>    <index pos:start="1165:27" pos:end="1165:29">[<expr pos:start="1165:28" pos:end="1165:28"><literal type="number" pos:start="1165:28" pos:end="1165:28">4</literal></expr>]</index></name></decl>, <decl pos:start="1165:32" pos:end="1165:43"><type ref="prev" pos:start="1165:5" pos:end="1165:13"><modifier pos:start="1165:32" pos:end="1165:32">*</modifier></type><name pos:start="1165:33" pos:end="1165:43"><name pos:start="1165:33" pos:end="1165:36">data</name>    <index pos:start="1165:41" pos:end="1165:43">[<expr pos:start="1165:42" pos:end="1165:42"><literal type="number" pos:start="1165:42" pos:end="1165:42">4</literal></expr>]</index></name></decl>, <decl pos:start="1165:46" pos:end="1165:65"><type ref="prev" pos:start="1165:5" pos:end="1165:13"><modifier pos:start="1165:46" pos:end="1165:46">*</modifier></type><name pos:start="1165:47" pos:end="1165:65"><name pos:start="1165:47" pos:end="1165:58">scratch_data</name>    <index pos:start="1165:63" pos:end="1165:65">[<expr pos:start="1165:64" pos:end="1165:64"><literal type="number" pos:start="1165:64" pos:end="1165:64">4</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="1166:5" pos:end="1166:66"><decl pos:start="1166:5" pos:end="1166:29"><type pos:start="1166:5" pos:end="1166:7"><name pos:start="1166:5" pos:end="1166:7">int</name></type>      <name pos:start="1166:14" pos:end="1166:29"><name pos:start="1166:14" pos:end="1166:26">last_linesize</name><index pos:start="1166:27" pos:end="1166:29">[<expr pos:start="1166:28" pos:end="1166:28"><literal type="number" pos:start="1166:28" pos:end="1166:28">4</literal></expr>]</index></name></decl>,  <decl pos:start="1166:33" pos:end="1166:43"><type ref="prev" pos:start="1166:5" pos:end="1166:7"/><name pos:start="1166:33" pos:end="1166:43"><name pos:start="1166:33" pos:end="1166:40">linesize</name><index pos:start="1166:41" pos:end="1166:43">[<expr pos:start="1166:42" pos:end="1166:42"><literal type="number" pos:start="1166:42" pos:end="1166:42">4</literal></expr>]</index></name></decl>,  <decl pos:start="1166:47" pos:end="1166:65"><type ref="prev" pos:start="1166:5" pos:end="1166:7"/><name pos:start="1166:47" pos:end="1166:65"><name pos:start="1166:47" pos:end="1166:62">scratch_linesize</name><index pos:start="1166:63" pos:end="1166:65">[<expr pos:start="1166:64" pos:end="1166:64"><literal type="number" pos:start="1166:64" pos:end="1166:64">4</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="1167:5" pos:end="1169:0"><decl pos:start="1167:5" pos:end="1167:26"><type pos:start="1167:5" pos:end="1167:11"><name pos:start="1167:5" pos:end="1167:11">int64_t</name></type> <name pos:start="1167:13" pos:end="1167:22">best_score</name> <init pos:start="1167:24" pos:end="1167:26">= <expr pos:start="1167:26" pos:end="1167:26"><literal type="number" pos:start="1167:26" pos:end="1167:26">0</literal></expr></init></decl>, <decl pos:start="1167:29" pos:end="1167:33"><type ref="prev" pos:start="1167:5" pos:end="1167:11"/><name pos:start="1167:29" pos:end="1167:33">score</name></decl>, <decl pos:start="1167:36" pos:end="1167:45"><type ref="prev" pos:start="1167:5" pos:end="1167:11"/><name pos:start="1167:36" pos:end="1167:45">score_temp</name></decl>;</decl_stmt>
<cpp:ifdef pos:start="1168:1" pos:end="1168:26">#<cpp:directive pos:start="1168:2" pos:end="1168:6">ifdef</cpp:directive> <name pos:start="1168:8" pos:end="1168:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
    <decl_stmt pos:start="1169:5" pos:end="1171:0"><decl pos:start="1169:5" pos:end="1169:25"><type pos:start="1169:5" pos:end="1169:11"><name pos:start="1169:5" pos:end="1169:11">int64_t</name></type> <name pos:start="1169:13" pos:end="1169:21">best_serr</name> <init pos:start="1169:23" pos:end="1169:25">= <expr pos:start="1169:25" pos:end="1169:25"><literal type="number" pos:start="1169:25" pos:end="1169:25">0</literal></expr></init></decl>, <decl pos:start="1169:28" pos:end="1169:31"><type ref="prev" pos:start="1169:5" pos:end="1169:11"/><name pos:start="1169:28" pos:end="1169:31">serr</name></decl>, <decl pos:start="1169:34" pos:end="1169:42"><type ref="prev" pos:start="1169:5" pos:end="1169:11"/><name pos:start="1169:34" pos:end="1169:42">serr_temp</name></decl>;</decl_stmt>
<cpp:endif pos:start="1170:1" pos:end="1170:6">#<cpp:directive pos:start="1170:2" pos:end="1170:6">endif</cpp:directive></cpp:endif>

    <decl_stmt pos:start="1172:5" pos:end="1172:42"><decl pos:start="1172:5" pos:end="1172:25"><type pos:start="1172:5" pos:end="1172:7"><name pos:start="1172:5" pos:end="1172:7">int</name></type> <name pos:start="1172:9" pos:end="1172:20">best_nstrips</name> <init pos:start="1172:22" pos:end="1172:25">= <expr pos:start="1172:24" pos:end="1172:25"><operator pos:start="1172:24" pos:end="1172:24">-</operator><literal type="number" pos:start="1172:25" pos:end="1172:25">1</literal></expr></init></decl>, <decl pos:start="1172:28" pos:end="1172:41"><type ref="prev" pos:start="1172:5" pos:end="1172:7"/><name pos:start="1172:28" pos:end="1172:36">best_size</name> <init pos:start="1172:38" pos:end="1172:41">= <expr pos:start="1172:40" pos:end="1172:41"><operator pos:start="1172:40" pos:end="1172:40">-</operator><literal type="number" pos:start="1172:41" pos:end="1172:41">1</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="1172:44" pos:end="1172:66">// mark as uninitialzed</comment>

    <if_stmt pos:start="1174:5" pos:end="1217:5"><if pos:start="1174:5" pos:end="1217:5">if<condition pos:start="1174:7" pos:end="1174:38">(<expr pos:start="1174:8" pos:end="1174:37"><name pos:start="1174:8" pos:end="1174:17"><name pos:start="1174:8" pos:end="1174:8">s</name><operator pos:start="1174:9" pos:end="1174:10">-&gt;</operator><name pos:start="1174:11" pos:end="1174:17">pix_fmt</name></name> <operator pos:start="1174:19" pos:end="1174:20">==</operator> <name pos:start="1174:22" pos:end="1174:37">AV_PIX_FMT_RGB24</name></expr>)</condition> <block pos:start="1174:40" pos:end="1217:5">{<block_content pos:start="1175:9" pos:end="1216:9">
        <decl_stmt pos:start="1175:9" pos:end="1175:14"><decl pos:start="1175:9" pos:end="1175:13"><type pos:start="1175:9" pos:end="1175:11"><name pos:start="1175:9" pos:end="1175:11">int</name></type> <name pos:start="1175:13" pos:end="1175:13">x</name></decl>;</decl_stmt>
<comment type="line" pos:start="1176:1" pos:end="1176:60">// build a copy of the given frame in the correct colorspace</comment>
        <for pos:start="1177:9" pos:end="1216:9">for<control pos:start="1177:12" pos:end="1177:36">(<init pos:start="1177:13" pos:end="1177:18"><expr pos:start="1177:13" pos:end="1177:17"><name pos:start="1177:13" pos:end="1177:13">y</name> <operator pos:start="1177:15" pos:end="1177:15">=</operator> <literal type="number" pos:start="1177:17" pos:end="1177:17">0</literal></expr>;</init> <condition pos:start="1177:20" pos:end="1177:28"><expr pos:start="1177:20" pos:end="1177:27"><name pos:start="1177:20" pos:end="1177:20">y</name> <operator pos:start="1177:22" pos:end="1177:22">&lt;</operator> <name pos:start="1177:24" pos:end="1177:27"><name pos:start="1177:24" pos:end="1177:24">s</name><operator pos:start="1177:25" pos:end="1177:26">-&gt;</operator><name pos:start="1177:27" pos:end="1177:27">h</name></name></expr>;</condition> <incr pos:start="1177:30" pos:end="1177:35"><expr pos:start="1177:30" pos:end="1177:35"><name pos:start="1177:30" pos:end="1177:30">y</name> <operator pos:start="1177:32" pos:end="1177:33">+=</operator> <literal type="number" pos:start="1177:35" pos:end="1177:35">2</literal></expr></incr>)</control> <block pos:start="1177:38" pos:end="1216:9">{<block_content pos:start="1178:13" pos:end="1215:13">
            <for pos:start="1178:13" pos:end="1215:13">for<control pos:start="1178:16" pos:end="1178:40">(<init pos:start="1178:17" pos:end="1178:22"><expr pos:start="1178:17" pos:end="1178:21"><name pos:start="1178:17" pos:end="1178:17">x</name> <operator pos:start="1178:19" pos:end="1178:19">=</operator> <literal type="number" pos:start="1178:21" pos:end="1178:21">0</literal></expr>;</init> <condition pos:start="1178:24" pos:end="1178:32"><expr pos:start="1178:24" pos:end="1178:31"><name pos:start="1178:24" pos:end="1178:24">x</name> <operator pos:start="1178:26" pos:end="1178:26">&lt;</operator> <name pos:start="1178:28" pos:end="1178:31"><name pos:start="1178:28" pos:end="1178:28">s</name><operator pos:start="1178:29" pos:end="1178:30">-&gt;</operator><name pos:start="1178:31" pos:end="1178:31">w</name></name></expr>;</condition> <incr pos:start="1178:34" pos:end="1178:39"><expr pos:start="1178:34" pos:end="1178:39"><name pos:start="1178:34" pos:end="1178:34">x</name> <operator pos:start="1178:36" pos:end="1178:37">+=</operator> <literal type="number" pos:start="1178:39" pos:end="1178:39">2</literal></expr></incr>)</control> <block pos:start="1178:42" pos:end="1215:13">{<block_content pos:start="1179:17" pos:end="1214:46">
                <decl_stmt pos:start="1179:17" pos:end="1179:31"><decl pos:start="1179:17" pos:end="1179:30"><type pos:start="1179:17" pos:end="1179:25"><name pos:start="1179:17" pos:end="1179:23">uint8_t</name> <modifier pos:start="1179:25" pos:end="1179:25">*</modifier></type><name pos:start="1179:26" pos:end="1179:30"><name pos:start="1179:26" pos:end="1179:27">ir</name><index pos:start="1179:28" pos:end="1179:30">[<expr pos:start="1179:29" pos:end="1179:29"><literal type="number" pos:start="1179:29" pos:end="1179:29">2</literal></expr>]</index></name></decl>;</decl_stmt> <decl_stmt pos:start="1179:33" pos:end="1179:60"><decl pos:start="1179:33" pos:end="1179:41"><type pos:start="1179:33" pos:end="1179:39"><name pos:start="1179:33" pos:end="1179:39">int32_t</name></type> <name pos:start="1179:41" pos:end="1179:41">r</name></decl>, <decl pos:start="1179:44" pos:end="1179:44"><type ref="prev" pos:start="1179:33" pos:end="1179:39"/><name pos:start="1179:44" pos:end="1179:44">g</name></decl>, <decl pos:start="1179:47" pos:end="1179:47"><type ref="prev" pos:start="1179:33" pos:end="1179:39"/><name pos:start="1179:47" pos:end="1179:47">b</name></decl>, <decl pos:start="1179:50" pos:end="1179:51"><type ref="prev" pos:start="1179:33" pos:end="1179:39"/><name pos:start="1179:50" pos:end="1179:51">rr</name></decl>, <decl pos:start="1179:54" pos:end="1179:55"><type ref="prev" pos:start="1179:33" pos:end="1179:39"/><name pos:start="1179:54" pos:end="1179:55">gg</name></decl>, <decl pos:start="1179:58" pos:end="1179:59"><type ref="prev" pos:start="1179:33" pos:end="1179:39"/><name pos:start="1179:58" pos:end="1179:59">bb</name></decl>;</decl_stmt>
                <expr_stmt pos:start="1180:17" pos:end="1180:68"><expr pos:start="1180:17" pos:end="1180:67"><name pos:start="1180:17" pos:end="1180:21"><name pos:start="1180:17" pos:end="1180:18">ir</name><index pos:start="1180:19" pos:end="1180:21">[<expr pos:start="1180:20" pos:end="1180:20"><literal type="number" pos:start="1180:20" pos:end="1180:20">0</literal></expr>]</index></name> <operator pos:start="1180:23" pos:end="1180:23">=</operator> <name pos:start="1180:25" pos:end="1180:38"><name pos:start="1180:25" pos:end="1180:29">frame</name><operator pos:start="1180:30" pos:end="1180:31">-&gt;</operator><name pos:start="1180:32" pos:end="1180:35">data</name><index pos:start="1180:36" pos:end="1180:38">[<expr pos:start="1180:37" pos:end="1180:37"><literal type="number" pos:start="1180:37" pos:end="1180:37">0</literal></expr>]</index></name> <operator pos:start="1180:40" pos:end="1180:40">+</operator> <name pos:start="1180:42" pos:end="1180:42">x</name><operator pos:start="1180:43" pos:end="1180:43">*</operator><literal type="number" pos:start="1180:44" pos:end="1180:46">3</literal> <operator pos:start="1180:46" pos:end="1180:46">+</operator> <name pos:start="1180:48" pos:end="1180:48">y</name><operator pos:start="1180:49" pos:end="1180:49">*</operator><name pos:start="1180:50" pos:end="1180:67"><name pos:start="1180:50" pos:end="1180:54">frame</name><operator pos:start="1180:55" pos:end="1180:56">-&gt;</operator><name pos:start="1180:57" pos:end="1180:64">linesize</name><index pos:start="1180:65" pos:end="1180:67">[<expr pos:start="1180:66" pos:end="1180:66"><literal type="number" pos:start="1180:66" pos:end="1180:66">0</literal></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="1181:17" pos:end="1181:51"><expr pos:start="1181:17" pos:end="1181:50"><name pos:start="1181:17" pos:end="1181:21"><name pos:start="1181:17" pos:end="1181:18">ir</name><index pos:start="1181:19" pos:end="1181:21">[<expr pos:start="1181:20" pos:end="1181:20"><literal type="number" pos:start="1181:20" pos:end="1181:20">1</literal></expr>]</index></name> <operator pos:start="1181:23" pos:end="1181:23">=</operator> <name pos:start="1181:25" pos:end="1181:29"><name pos:start="1181:25" pos:end="1181:26">ir</name><index pos:start="1181:27" pos:end="1181:29">[<expr pos:start="1181:28" pos:end="1181:28"><literal type="number" pos:start="1181:28" pos:end="1181:28">0</literal></expr>]</index></name> <operator pos:start="1181:31" pos:end="1181:31">+</operator> <name pos:start="1181:33" pos:end="1181:50"><name pos:start="1181:33" pos:end="1181:37">frame</name><operator pos:start="1181:38" pos:end="1181:39">-&gt;</operator><name pos:start="1181:40" pos:end="1181:47">linesize</name><index pos:start="1181:48" pos:end="1181:50">[<expr pos:start="1181:49" pos:end="1181:49"><literal type="number" pos:start="1181:49" pos:end="1181:49">0</literal></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="1182:17" pos:end="1184:64"><expr pos:start="1182:17" pos:end="1184:63"><call pos:start="1182:17" pos:end="1184:63"><name pos:start="1182:17" pos:end="1182:31">get_sub_picture</name><argument_list pos:start="1182:32" pos:end="1184:63">(<argument pos:start="1182:33" pos:end="1182:33"><expr pos:start="1182:33" pos:end="1182:33"><name pos:start="1182:33" pos:end="1182:33">s</name></expr></argument>, <argument pos:start="1182:36" pos:end="1182:36"><expr pos:start="1182:36" pos:end="1182:36"><name pos:start="1182:36" pos:end="1182:36">x</name></expr></argument>, <argument pos:start="1182:39" pos:end="1182:39"><expr pos:start="1182:39" pos:end="1182:39"><name pos:start="1182:39" pos:end="1182:39">y</name></expr></argument>,
                                <argument pos:start="1183:33" pos:end="1183:52"><expr pos:start="1183:33" pos:end="1183:52"><name pos:start="1183:33" pos:end="1183:52"><name pos:start="1183:33" pos:end="1183:33">s</name><operator pos:start="1183:34" pos:end="1183:35">-&gt;</operator><name pos:start="1183:36" pos:end="1183:46">input_frame</name><operator pos:start="1183:47" pos:end="1183:48">-&gt;</operator><name pos:start="1183:49" pos:end="1183:52">data</name></name></expr></argument>, <argument pos:start="1183:55" pos:end="1183:78"><expr pos:start="1183:55" pos:end="1183:78"><name pos:start="1183:55" pos:end="1183:78"><name pos:start="1183:55" pos:end="1183:55">s</name><operator pos:start="1183:56" pos:end="1183:57">-&gt;</operator><name pos:start="1183:58" pos:end="1183:68">input_frame</name><operator pos:start="1183:69" pos:end="1183:70">-&gt;</operator><name pos:start="1183:71" pos:end="1183:78">linesize</name></name></expr></argument>,
                                <argument pos:start="1184:33" pos:end="1184:44"><expr pos:start="1184:33" pos:end="1184:44"><name pos:start="1184:33" pos:end="1184:44">scratch_data</name></expr></argument>, <argument pos:start="1184:47" pos:end="1184:62"><expr pos:start="1184:47" pos:end="1184:62"><name pos:start="1184:47" pos:end="1184:62">scratch_linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="1185:17" pos:end="1185:30"><expr pos:start="1185:17" pos:end="1185:29"><name pos:start="1185:17" pos:end="1185:17">r</name> <operator pos:start="1185:19" pos:end="1185:19">=</operator> <name pos:start="1185:21" pos:end="1185:21">g</name> <operator pos:start="1185:23" pos:end="1185:23">=</operator> <name pos:start="1185:25" pos:end="1185:25">b</name> <operator pos:start="1185:27" pos:end="1185:27">=</operator> <literal type="number" pos:start="1185:29" pos:end="1185:29">0</literal></expr>;</expr_stmt>
                <for pos:start="1186:17" pos:end="1200:17">for<control pos:start="1186:20" pos:end="1186:34">(<init pos:start="1186:21" pos:end="1186:24"><expr pos:start="1186:21" pos:end="1186:23"><name pos:start="1186:21" pos:end="1186:21">i</name><operator pos:start="1186:22" pos:end="1186:22">=</operator><literal type="number" pos:start="1186:23" pos:end="1186:23">0</literal></expr>;</init> <condition pos:start="1186:26" pos:end="1186:29"><expr pos:start="1186:26" pos:end="1186:28"><name pos:start="1186:26" pos:end="1186:26">i</name><operator pos:start="1186:27" pos:end="1186:27">&lt;</operator><literal type="number" pos:start="1186:28" pos:end="1186:28">4</literal></expr>;</condition> <incr pos:start="1186:31" pos:end="1186:33"><expr pos:start="1186:31" pos:end="1186:33"><operator pos:start="1186:31" pos:end="1186:32">++</operator><name pos:start="1186:33" pos:end="1186:33">i</name></expr></incr>)</control> <block pos:start="1186:36" pos:end="1200:17">{<block_content pos:start="1187:21" pos:end="1199:70">
                    <decl_stmt pos:start="1187:21" pos:end="1187:31"><decl pos:start="1187:21" pos:end="1187:26"><type pos:start="1187:21" pos:end="1187:23"><name pos:start="1187:21" pos:end="1187:23">int</name></type> <name pos:start="1187:25" pos:end="1187:26">i1</name></decl>, <decl pos:start="1187:29" pos:end="1187:30"><type ref="prev" pos:start="1187:21" pos:end="1187:23"/><name pos:start="1187:29" pos:end="1187:30">i2</name></decl>;</decl_stmt>
                    <expr_stmt pos:start="1188:21" pos:end="1188:31"><expr pos:start="1188:21" pos:end="1188:30"><name pos:start="1188:21" pos:end="1188:22">i1</name> <operator pos:start="1188:24" pos:end="1188:24">=</operator> <operator pos:start="1188:26" pos:end="1188:26">(</operator><name pos:start="1188:27" pos:end="1188:27">i</name><operator pos:start="1188:28" pos:end="1188:28">&amp;</operator><literal type="number" pos:start="1188:29" pos:end="1188:29">1</literal><operator pos:start="1188:30" pos:end="1188:30">)</operator></expr>;</expr_stmt> <expr_stmt pos:start="1188:33" pos:end="1188:44"><expr pos:start="1188:33" pos:end="1188:43"><name pos:start="1188:33" pos:end="1188:34">i2</name> <operator pos:start="1188:36" pos:end="1188:36">=</operator> <operator pos:start="1188:38" pos:end="1188:38">(</operator><name pos:start="1188:39" pos:end="1188:39">i</name><operator pos:start="1188:40" pos:end="1188:41">&gt;=</operator><literal type="number" pos:start="1188:42" pos:end="1188:42">2</literal><operator pos:start="1188:43" pos:end="1188:43">)</operator></expr>;</expr_stmt>
                    <expr_stmt pos:start="1189:21" pos:end="1189:40"><expr pos:start="1189:21" pos:end="1189:39"><name pos:start="1189:21" pos:end="1189:22">rr</name> <operator pos:start="1189:24" pos:end="1189:24">=</operator> <name pos:start="1189:26" pos:end="1189:39"><name pos:start="1189:26" pos:end="1189:27">ir</name><index pos:start="1189:28" pos:end="1189:31">[<expr pos:start="1189:29" pos:end="1189:30"><name pos:start="1189:29" pos:end="1189:30">i2</name></expr>]</index><index pos:start="1189:32" pos:end="1189:39">[<expr pos:start="1189:33" pos:end="1189:38"><name pos:start="1189:33" pos:end="1189:34">i1</name><operator pos:start="1189:35" pos:end="1189:35">*</operator><literal type="number" pos:start="1189:36" pos:end="1189:37">3</literal><operator pos:start="1189:37" pos:end="1189:37">+</operator><literal type="number" pos:start="1189:38" pos:end="1189:38">0</literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="1190:21" pos:end="1190:40"><expr pos:start="1190:21" pos:end="1190:39"><name pos:start="1190:21" pos:end="1190:22">gg</name> <operator pos:start="1190:24" pos:end="1190:24">=</operator> <name pos:start="1190:26" pos:end="1190:39"><name pos:start="1190:26" pos:end="1190:27">ir</name><index pos:start="1190:28" pos:end="1190:31">[<expr pos:start="1190:29" pos:end="1190:30"><name pos:start="1190:29" pos:end="1190:30">i2</name></expr>]</index><index pos:start="1190:32" pos:end="1190:39">[<expr pos:start="1190:33" pos:end="1190:38"><name pos:start="1190:33" pos:end="1190:34">i1</name><operator pos:start="1190:35" pos:end="1190:35">*</operator><literal type="number" pos:start="1190:36" pos:end="1190:37">3</literal><operator pos:start="1190:37" pos:end="1190:37">+</operator><literal type="number" pos:start="1190:38" pos:end="1190:38">1</literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="1191:21" pos:end="1191:40"><expr pos:start="1191:21" pos:end="1191:39"><name pos:start="1191:21" pos:end="1191:22">bb</name> <operator pos:start="1191:24" pos:end="1191:24">=</operator> <name pos:start="1191:26" pos:end="1191:39"><name pos:start="1191:26" pos:end="1191:27">ir</name><index pos:start="1191:28" pos:end="1191:31">[<expr pos:start="1191:29" pos:end="1191:30"><name pos:start="1191:29" pos:end="1191:30">i2</name></expr>]</index><index pos:start="1191:32" pos:end="1191:39">[<expr pos:start="1191:33" pos:end="1191:38"><name pos:start="1191:33" pos:end="1191:34">i1</name><operator pos:start="1191:35" pos:end="1191:35">*</operator><literal type="number" pos:start="1191:36" pos:end="1191:37">3</literal><operator pos:start="1191:37" pos:end="1191:37">+</operator><literal type="number" pos:start="1191:38" pos:end="1191:38">2</literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="1192:21" pos:end="1192:28"><expr pos:start="1192:21" pos:end="1192:27"><name pos:start="1192:21" pos:end="1192:21">r</name> <operator pos:start="1192:23" pos:end="1192:24">+=</operator> <name pos:start="1192:26" pos:end="1192:27">rr</name></expr>;</expr_stmt> <expr_stmt pos:start="1192:30" pos:end="1192:37"><expr pos:start="1192:30" pos:end="1192:36"><name pos:start="1192:30" pos:end="1192:30">g</name> <operator pos:start="1192:32" pos:end="1192:33">+=</operator> <name pos:start="1192:35" pos:end="1192:36">gg</name></expr>;</expr_stmt> <expr_stmt pos:start="1192:39" pos:end="1192:46"><expr pos:start="1192:39" pos:end="1192:45"><name pos:start="1192:39" pos:end="1192:39">b</name> <operator pos:start="1192:41" pos:end="1192:42">+=</operator> <name pos:start="1192:44" pos:end="1192:45">bb</name></expr>;</expr_stmt>
<comment type="line" pos:start="1193:1" pos:end="1193:75">// using fixed point arithmetic for portable repeatability, scaling by 2^23</comment>
<comment type="line" pos:start="1194:1" pos:end="1194:6">// "Y"</comment>
<comment type="line" pos:start="1195:1" pos:end="1195:61">//                    rr = 0.2857*rr + 0.5714*gg + 0.1429*bb;</comment>
                    <expr_stmt pos:start="1196:21" pos:end="1196:70"><expr pos:start="1196:21" pos:end="1196:69"><name pos:start="1196:21" pos:end="1196:22">rr</name> <operator pos:start="1196:24" pos:end="1196:24">=</operator> <operator pos:start="1196:26" pos:end="1196:26">(</operator><literal type="number" pos:start="1196:27" pos:end="1196:33">2396625</literal><operator pos:start="1196:34" pos:end="1196:34">*</operator><name pos:start="1196:35" pos:end="1196:36">rr</name> <operator pos:start="1196:38" pos:end="1196:38">+</operator> <literal type="number" pos:start="1196:40" pos:end="1196:46">4793251</literal><operator pos:start="1196:47" pos:end="1196:47">*</operator><name pos:start="1196:48" pos:end="1196:49">gg</name> <operator pos:start="1196:51" pos:end="1196:51">+</operator> <literal type="number" pos:start="1196:53" pos:end="1196:59">1198732</literal><operator pos:start="1196:60" pos:end="1196:60">*</operator><name pos:start="1196:61" pos:end="1196:62">bb</name><operator pos:start="1196:63" pos:end="1196:63">)</operator> <operator pos:start="1196:65" pos:end="1196:66">&gt;&gt;</operator> <literal type="number" pos:start="1196:68" pos:end="1196:69">23</literal></expr>;</expr_stmt>
                    <if_stmt pos:start="1197:21" pos:end="1198:48"><if pos:start="1197:21" pos:end="1197:48">if<condition pos:start="1197:23" pos:end="1197:38">(      <expr pos:start="1197:30" pos:end="1197:37"><name pos:start="1197:30" pos:end="1197:31">rr</name> <operator pos:start="1197:33" pos:end="1197:33">&lt;</operator>   <literal type="number" pos:start="1197:37" pos:end="1197:37">0</literal></expr>)</condition><block type="pseudo" pos:start="1197:40" pos:end="1197:48"><block_content pos:start="1197:40" pos:end="1197:48"> <expr_stmt pos:start="1197:40" pos:end="1197:48"><expr pos:start="1197:40" pos:end="1197:47"><name pos:start="1197:40" pos:end="1197:41">rr</name> <operator pos:start="1197:43" pos:end="1197:43">=</operator>   <literal type="number" pos:start="1197:47" pos:end="1197:47">0</literal></expr>;</expr_stmt></block_content></block></if>
                    <if type="elseif" pos:start="1198:21" pos:end="1198:48">else if <condition pos:start="1198:29" pos:end="1198:38">(<expr pos:start="1198:30" pos:end="1198:37"><name pos:start="1198:30" pos:end="1198:31">rr</name> <operator pos:start="1198:33" pos:end="1198:33">&gt;</operator> <literal type="number" pos:start="1198:35" pos:end="1198:37">255</literal></expr>)</condition><block type="pseudo" pos:start="1198:40" pos:end="1198:48"><block_content pos:start="1198:40" pos:end="1198:48"> <expr_stmt pos:start="1198:40" pos:end="1198:48"><expr pos:start="1198:40" pos:end="1198:47"><name pos:start="1198:40" pos:end="1198:41">rr</name> <operator pos:start="1198:43" pos:end="1198:43">=</operator> <literal type="number" pos:start="1198:45" pos:end="1198:47">255</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
                    <expr_stmt pos:start="1199:21" pos:end="1199:70"><expr pos:start="1199:21" pos:end="1199:69"><name pos:start="1199:21" pos:end="1199:64"><name pos:start="1199:21" pos:end="1199:32">scratch_data</name><index pos:start="1199:33" pos:end="1199:35">[<expr pos:start="1199:34" pos:end="1199:34"><literal type="number" pos:start="1199:34" pos:end="1199:34">0</literal></expr>]</index><index pos:start="1199:36" pos:end="1199:64">[<expr pos:start="1199:37" pos:end="1199:63"><name pos:start="1199:37" pos:end="1199:38">i1</name> <operator pos:start="1199:40" pos:end="1199:40">+</operator> <name pos:start="1199:42" pos:end="1199:43">i2</name><operator pos:start="1199:44" pos:end="1199:44">*</operator><name pos:start="1199:45" pos:end="1199:63"><name pos:start="1199:45" pos:end="1199:60">scratch_linesize</name><index pos:start="1199:61" pos:end="1199:63">[<expr pos:start="1199:62" pos:end="1199:62"><literal type="number" pos:start="1199:62" pos:end="1199:62">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="1199:66" pos:end="1199:66">=</operator> <name pos:start="1199:68" pos:end="1199:69">rr</name></expr>;</expr_stmt>
                </block_content>}</block></for>
<comment type="line" pos:start="1201:1" pos:end="1201:40">// let us scale down as late as possible</comment>
<comment type="line" pos:start="1202:1" pos:end="1202:41">//                r /= 4; g /= 4; b /= 4;</comment>
<comment type="line" pos:start="1203:1" pos:end="1203:6">// "U"</comment>
<comment type="line" pos:start="1204:1" pos:end="1204:55">//                rr = -0.1429*r - 0.2857*g + 0.4286*b;</comment>
                <expr_stmt pos:start="1205:17" pos:end="1205:61"><expr pos:start="1205:17" pos:end="1205:60"><name pos:start="1205:17" pos:end="1205:18">rr</name> <operator pos:start="1205:20" pos:end="1205:20">=</operator> <operator pos:start="1205:22" pos:end="1205:22">(</operator><operator pos:start="1205:23" pos:end="1205:23">-</operator><literal type="number" pos:start="1205:24" pos:end="1205:29">299683</literal><operator pos:start="1205:30" pos:end="1205:30">*</operator><name pos:start="1205:31" pos:end="1205:31">r</name> <operator pos:start="1205:33" pos:end="1205:33">-</operator> <literal type="number" pos:start="1205:35" pos:end="1205:40">599156</literal><operator pos:start="1205:41" pos:end="1205:41">*</operator><name pos:start="1205:42" pos:end="1205:42">g</name> <operator pos:start="1205:44" pos:end="1205:44">+</operator> <literal type="number" pos:start="1205:46" pos:end="1205:51">898839</literal><operator pos:start="1205:52" pos:end="1205:52">*</operator><name pos:start="1205:53" pos:end="1205:53">b</name><operator pos:start="1205:54" pos:end="1205:54">)</operator> <operator pos:start="1205:56" pos:end="1205:57">&gt;&gt;</operator> <literal type="number" pos:start="1205:59" pos:end="1205:60">23</literal></expr>;</expr_stmt>
                <if_stmt pos:start="1206:17" pos:end="1207:46"><if pos:start="1206:17" pos:end="1206:46">if<condition pos:start="1206:19" pos:end="1206:35">(      <expr pos:start="1206:26" pos:end="1206:34"><name pos:start="1206:26" pos:end="1206:27">rr</name> <operator pos:start="1206:29" pos:end="1206:29">&lt;</operator> <operator pos:start="1206:31" pos:end="1206:31">-</operator><literal type="number" pos:start="1206:32" pos:end="1206:34">128</literal></expr>)</condition><block type="pseudo" pos:start="1206:37" pos:end="1206:46"><block_content pos:start="1206:37" pos:end="1206:46"> <expr_stmt pos:start="1206:37" pos:end="1206:46"><expr pos:start="1206:37" pos:end="1206:45"><name pos:start="1206:37" pos:end="1206:38">rr</name> <operator pos:start="1206:40" pos:end="1206:40">=</operator> <operator pos:start="1206:42" pos:end="1206:42">-</operator><literal type="number" pos:start="1206:43" pos:end="1206:45">128</literal></expr>;</expr_stmt></block_content></block></if>
                <if type="elseif" pos:start="1207:17" pos:end="1207:46">else if <condition pos:start="1207:25" pos:end="1207:35">(<expr pos:start="1207:26" pos:end="1207:34"><name pos:start="1207:26" pos:end="1207:27">rr</name> <operator pos:start="1207:29" pos:end="1207:29">&gt;</operator>  <literal type="number" pos:start="1207:32" pos:end="1207:34">127</literal></expr>)</condition><block type="pseudo" pos:start="1207:37" pos:end="1207:46"><block_content pos:start="1207:37" pos:end="1207:46"> <expr_stmt pos:start="1207:37" pos:end="1207:46"><expr pos:start="1207:37" pos:end="1207:45"><name pos:start="1207:37" pos:end="1207:38">rr</name> <operator pos:start="1207:40" pos:end="1207:40">=</operator>  <literal type="number" pos:start="1207:43" pos:end="1207:45">127</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <expr_stmt pos:start="1208:17" pos:end="1208:46"><expr pos:start="1208:17" pos:end="1208:45"><name pos:start="1208:17" pos:end="1208:34"><name pos:start="1208:17" pos:end="1208:28">scratch_data</name><index pos:start="1208:29" pos:end="1208:31">[<expr pos:start="1208:30" pos:end="1208:30"><literal type="number" pos:start="1208:30" pos:end="1208:30">1</literal></expr>]</index><index pos:start="1208:32" pos:end="1208:34">[<expr pos:start="1208:33" pos:end="1208:33"><literal type="number" pos:start="1208:33" pos:end="1208:33">0</literal></expr>]</index></name> <operator pos:start="1208:36" pos:end="1208:36">=</operator> <name pos:start="1208:38" pos:end="1208:39">rr</name> <operator pos:start="1208:41" pos:end="1208:41">+</operator> <literal type="number" pos:start="1208:43" pos:end="1208:45">128</literal></expr>;</expr_stmt> <comment type="line" pos:start="1208:48" pos:end="1208:73">// quantize needs unsigned</comment>
<comment type="line" pos:start="1209:1" pos:end="1209:6">// "V"</comment>
<comment type="line" pos:start="1210:1" pos:end="1210:54">//                rr = 0.3571*r - 0.2857*g - 0.0714*b;</comment>
                <expr_stmt pos:start="1211:17" pos:end="1211:60"><expr pos:start="1211:17" pos:end="1211:59"><name pos:start="1211:17" pos:end="1211:18">rr</name> <operator pos:start="1211:20" pos:end="1211:20">=</operator> <operator pos:start="1211:22" pos:end="1211:22">(</operator><literal type="number" pos:start="1211:23" pos:end="1211:28">748893</literal><operator pos:start="1211:29" pos:end="1211:29">*</operator><name pos:start="1211:30" pos:end="1211:30">r</name> <operator pos:start="1211:32" pos:end="1211:32">-</operator> <literal type="number" pos:start="1211:34" pos:end="1211:39">599156</literal><operator pos:start="1211:40" pos:end="1211:40">*</operator><name pos:start="1211:41" pos:end="1211:41">g</name> <operator pos:start="1211:43" pos:end="1211:43">-</operator> <literal type="number" pos:start="1211:45" pos:end="1211:50">149737</literal><operator pos:start="1211:51" pos:end="1211:51">*</operator><name pos:start="1211:52" pos:end="1211:52">b</name><operator pos:start="1211:53" pos:end="1211:53">)</operator> <operator pos:start="1211:55" pos:end="1211:56">&gt;&gt;</operator> <literal type="number" pos:start="1211:58" pos:end="1211:59">23</literal></expr>;</expr_stmt>
                <if_stmt pos:start="1212:17" pos:end="1213:46"><if pos:start="1212:17" pos:end="1212:46">if<condition pos:start="1212:19" pos:end="1212:35">(      <expr pos:start="1212:26" pos:end="1212:34"><name pos:start="1212:26" pos:end="1212:27">rr</name> <operator pos:start="1212:29" pos:end="1212:29">&lt;</operator> <operator pos:start="1212:31" pos:end="1212:31">-</operator><literal type="number" pos:start="1212:32" pos:end="1212:34">128</literal></expr>)</condition><block type="pseudo" pos:start="1212:37" pos:end="1212:46"><block_content pos:start="1212:37" pos:end="1212:46"> <expr_stmt pos:start="1212:37" pos:end="1212:46"><expr pos:start="1212:37" pos:end="1212:45"><name pos:start="1212:37" pos:end="1212:38">rr</name> <operator pos:start="1212:40" pos:end="1212:40">=</operator> <operator pos:start="1212:42" pos:end="1212:42">-</operator><literal type="number" pos:start="1212:43" pos:end="1212:45">128</literal></expr>;</expr_stmt></block_content></block></if>
                <if type="elseif" pos:start="1213:17" pos:end="1213:46">else if <condition pos:start="1213:25" pos:end="1213:35">(<expr pos:start="1213:26" pos:end="1213:34"><name pos:start="1213:26" pos:end="1213:27">rr</name> <operator pos:start="1213:29" pos:end="1213:29">&gt;</operator>  <literal type="number" pos:start="1213:32" pos:end="1213:34">127</literal></expr>)</condition><block type="pseudo" pos:start="1213:37" pos:end="1213:46"><block_content pos:start="1213:37" pos:end="1213:46"> <expr_stmt pos:start="1213:37" pos:end="1213:46"><expr pos:start="1213:37" pos:end="1213:45"><name pos:start="1213:37" pos:end="1213:38">rr</name> <operator pos:start="1213:40" pos:end="1213:40">=</operator>  <literal type="number" pos:start="1213:43" pos:end="1213:45">127</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <expr_stmt pos:start="1214:17" pos:end="1214:46"><expr pos:start="1214:17" pos:end="1214:45"><name pos:start="1214:17" pos:end="1214:34"><name pos:start="1214:17" pos:end="1214:28">scratch_data</name><index pos:start="1214:29" pos:end="1214:31">[<expr pos:start="1214:30" pos:end="1214:30"><literal type="number" pos:start="1214:30" pos:end="1214:30">2</literal></expr>]</index><index pos:start="1214:32" pos:end="1214:34">[<expr pos:start="1214:33" pos:end="1214:33"><literal type="number" pos:start="1214:33" pos:end="1214:33">0</literal></expr>]</index></name> <operator pos:start="1214:36" pos:end="1214:36">=</operator> <name pos:start="1214:38" pos:end="1214:39">rr</name> <operator pos:start="1214:41" pos:end="1214:41">+</operator> <literal type="number" pos:start="1214:43" pos:end="1214:45">128</literal></expr>;</expr_stmt> <comment type="line" pos:start="1214:48" pos:end="1214:73">// quantize needs unsigned</comment>
            </block_content>}</block></for>
        </block_content>}</block></for>
    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="1219:5" pos:end="1219:74">//would be nice but quite certainly incompatible with vintage players:</comment>
    <comment type="line" pos:start="1220:5" pos:end="1220:66">// support encoding zero strips (meaning skip the whole frame)</comment>
    <for pos:start="1221:5" pos:end="1295:5">for<control pos:start="1221:8" pos:end="1221:110">(<init pos:start="1221:9" pos:end="1221:35"><expr pos:start="1221:9" pos:end="1221:34"><name pos:start="1221:9" pos:end="1221:18">num_strips</name> <operator pos:start="1221:20" pos:end="1221:20">=</operator> <name pos:start="1221:22" pos:end="1221:34"><name pos:start="1221:22" pos:end="1221:22">s</name><operator pos:start="1221:23" pos:end="1221:24">-&gt;</operator><name pos:start="1221:25" pos:end="1221:34">min_strips</name></name></expr>;</init> <condition pos:start="1221:37" pos:end="1221:96"><expr pos:start="1221:37" pos:end="1221:95"><name pos:start="1221:37" pos:end="1221:46">num_strips</name> <operator pos:start="1221:48" pos:end="1221:49">&lt;=</operator> <name pos:start="1221:51" pos:end="1221:63"><name pos:start="1221:51" pos:end="1221:51">s</name><operator pos:start="1221:52" pos:end="1221:53">-&gt;</operator><name pos:start="1221:54" pos:end="1221:63">max_strips</name></name> <operator pos:start="1221:65" pos:end="1221:66">&amp;&amp;</operator> <name pos:start="1221:68" pos:end="1221:77">num_strips</name> <operator pos:start="1221:79" pos:end="1221:80">&lt;=</operator> <name pos:start="1221:82" pos:end="1221:85"><name pos:start="1221:82" pos:end="1221:82">s</name><operator pos:start="1221:83" pos:end="1221:84">-&gt;</operator><name pos:start="1221:85" pos:end="1221:85">h</name></name> <operator pos:start="1221:87" pos:end="1221:87">/</operator> <name pos:start="1221:89" pos:end="1221:95">MB_SIZE</name></expr>;</condition> <incr pos:start="1221:98" pos:end="1221:109"><expr pos:start="1221:98" pos:end="1221:109"><name pos:start="1221:98" pos:end="1221:107">num_strips</name><operator pos:start="1221:108" pos:end="1221:109">++</operator></expr></incr>)</control> <block pos:start="1221:112" pos:end="1295:5">{<block_content pos:start="1222:9" pos:end="1294:18">
        <expr_stmt pos:start="1222:9" pos:end="1222:18"><expr pos:start="1222:9" pos:end="1222:17"><name pos:start="1222:9" pos:end="1222:13">score</name> <operator pos:start="1222:15" pos:end="1222:15">=</operator> <literal type="number" pos:start="1222:17" pos:end="1222:17">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="1223:9" pos:end="1225:0"><expr pos:start="1223:9" pos:end="1223:16"><name pos:start="1223:9" pos:end="1223:12">size</name> <operator pos:start="1223:14" pos:end="1223:14">=</operator> <literal type="number" pos:start="1223:16" pos:end="1223:16">0</literal></expr>;</expr_stmt>
<cpp:ifdef pos:start="1224:1" pos:end="1224:26">#<cpp:directive pos:start="1224:2" pos:end="1224:6">ifdef</cpp:directive> <name pos:start="1224:8" pos:end="1224:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
        <expr_stmt pos:start="1225:9" pos:end="1227:0"><expr pos:start="1225:9" pos:end="1225:16"><name pos:start="1225:9" pos:end="1225:12">serr</name> <operator pos:start="1225:14" pos:end="1225:14">=</operator> <literal type="number" pos:start="1225:16" pos:end="1225:16">0</literal></expr>;</expr_stmt>
<cpp:endif pos:start="1226:1" pos:end="1226:6">#<cpp:directive pos:start="1226:2" pos:end="1226:6">endif</cpp:directive></cpp:endif>

        <for pos:start="1228:9" pos:end="1274:9">for<control pos:start="1228:12" pos:end="1228:59">(<init pos:start="1228:13" pos:end="1228:29"><expr pos:start="1228:13" pos:end="1228:17"><name pos:start="1228:13" pos:end="1228:13">y</name> <operator pos:start="1228:15" pos:end="1228:15">=</operator> <literal type="number" pos:start="1228:17" pos:end="1228:17">0</literal></expr><operator pos:start="1228:18" pos:end="1228:18">,</operator> <expr pos:start="1228:20" pos:end="1228:28"><name pos:start="1228:20" pos:end="1228:24">strip</name> <operator pos:start="1228:26" pos:end="1228:26">=</operator> <literal type="number" pos:start="1228:28" pos:end="1228:28">1</literal></expr>;</init> <condition pos:start="1228:31" pos:end="1228:39"><expr pos:start="1228:31" pos:end="1228:38"><name pos:start="1228:31" pos:end="1228:31">y</name> <operator pos:start="1228:33" pos:end="1228:33">&lt;</operator> <name pos:start="1228:35" pos:end="1228:38"><name pos:start="1228:35" pos:end="1228:35">s</name><operator pos:start="1228:36" pos:end="1228:37">-&gt;</operator><name pos:start="1228:38" pos:end="1228:38">h</name></name></expr>;</condition> <incr pos:start="1228:41" pos:end="1228:58"><expr pos:start="1228:41" pos:end="1228:47"><name pos:start="1228:41" pos:end="1228:45">strip</name><operator pos:start="1228:46" pos:end="1228:47">++</operator></expr><operator pos:start="1228:48" pos:end="1228:48">,</operator> <expr pos:start="1228:50" pos:end="1228:58"><name pos:start="1228:50" pos:end="1228:50">y</name> <operator pos:start="1228:52" pos:end="1228:52">=</operator> <name pos:start="1228:54" pos:end="1228:58">nexty</name></expr></incr>)</control> <block pos:start="1228:61" pos:end="1274:9">{<block_content pos:start="1229:13" pos:end="1271:30">
            <decl_stmt pos:start="1229:13" pos:end="1229:29"><decl pos:start="1229:13" pos:end="1229:28"><type pos:start="1229:13" pos:end="1229:15"><name pos:start="1229:13" pos:end="1229:15">int</name></type> <name pos:start="1229:17" pos:end="1229:28">strip_height</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1231:13" pos:end="1231:46"><expr pos:start="1231:13" pos:end="1231:45"><name pos:start="1231:13" pos:end="1231:17">nexty</name> <operator pos:start="1231:19" pos:end="1231:19">=</operator> <name pos:start="1231:21" pos:end="1231:25">strip</name> <operator pos:start="1231:27" pos:end="1231:27">*</operator> <name pos:start="1231:29" pos:end="1231:32"><name pos:start="1231:29" pos:end="1231:29">s</name><operator pos:start="1231:30" pos:end="1231:31">-&gt;</operator><name pos:start="1231:32" pos:end="1231:32">h</name></name> <operator pos:start="1231:34" pos:end="1231:34">/</operator> <name pos:start="1231:36" pos:end="1231:45">num_strips</name></expr>;</expr_stmt> <comment type="line" pos:start="1231:48" pos:end="1231:57">// &lt;= s-&gt;h</comment>
            <comment type="line" pos:start="1232:13" pos:end="1232:68">//make nexty the next multiple of 4 if not already there</comment>
            <if_stmt pos:start="1233:13" pos:end="1234:41"><if pos:start="1233:13" pos:end="1234:41">if<condition pos:start="1233:15" pos:end="1233:25">(<expr pos:start="1233:16" pos:end="1233:24"><name pos:start="1233:16" pos:end="1233:20">nexty</name> <operator pos:start="1233:22" pos:end="1233:22">&amp;</operator> <literal type="number" pos:start="1233:24" pos:end="1233:24">3</literal></expr>)</condition><block type="pseudo" pos:start="1234:17" pos:end="1234:41"><block_content pos:start="1234:17" pos:end="1234:41">
                <expr_stmt pos:start="1234:17" pos:end="1234:41"><expr pos:start="1234:17" pos:end="1234:40"><name pos:start="1234:17" pos:end="1234:21">nexty</name> <operator pos:start="1234:23" pos:end="1234:24">+=</operator> <literal type="number" pos:start="1234:26" pos:end="1234:28">4</literal> <operator pos:start="1234:28" pos:end="1234:28">-</operator> <operator pos:start="1234:30" pos:end="1234:30">(</operator><name pos:start="1234:31" pos:end="1234:35">nexty</name> <operator pos:start="1234:37" pos:end="1234:37">&amp;</operator> <literal type="number" pos:start="1234:39" pos:end="1234:39">3</literal><operator pos:start="1234:40" pos:end="1234:40">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1236:13" pos:end="1236:37"><expr pos:start="1236:13" pos:end="1236:36"><name pos:start="1236:13" pos:end="1236:24">strip_height</name> <operator pos:start="1236:26" pos:end="1236:26">=</operator> <name pos:start="1236:28" pos:end="1236:32">nexty</name> <operator pos:start="1236:34" pos:end="1236:34">-</operator> <name pos:start="1236:36" pos:end="1236:36">y</name></expr>;</expr_stmt>
            <if_stmt pos:start="1237:13" pos:end="1240:13"><if pos:start="1237:13" pos:end="1240:13">if<condition pos:start="1237:15" pos:end="1237:33">(<expr pos:start="1237:16" pos:end="1237:32"><name pos:start="1237:16" pos:end="1237:27">strip_height</name> <operator pos:start="1237:29" pos:end="1237:30">&lt;=</operator> <literal type="number" pos:start="1237:32" pos:end="1237:32">0</literal></expr>)</condition> <block pos:start="1237:35" pos:end="1240:13">{<block_content pos:start="1238:17" pos:end="1239:25"> <comment type="line" pos:start="1237:37" pos:end="1237:60">// can this ever happen?</comment>
                <expr_stmt pos:start="1238:17" pos:end="1238:106"><expr pos:start="1238:17" pos:end="1238:105"><call pos:start="1238:17" pos:end="1238:105"><name pos:start="1238:17" pos:end="1238:22">av_log</name><argument_list pos:start="1238:23" pos:end="1238:105">(<argument pos:start="1238:24" pos:end="1238:31"><expr pos:start="1238:24" pos:end="1238:31"><name pos:start="1238:24" pos:end="1238:31"><name pos:start="1238:24" pos:end="1238:24">s</name><operator pos:start="1238:25" pos:end="1238:26">-&gt;</operator><name pos:start="1238:27" pos:end="1238:31">avctx</name></name></expr></argument>, <argument pos:start="1238:34" pos:end="1238:44"><expr pos:start="1238:34" pos:end="1238:44"><name pos:start="1238:34" pos:end="1238:44">AV_LOG_INFO</name></expr></argument>, <argument pos:start="1238:47" pos:end="1238:85"><expr pos:start="1238:47" pos:end="1238:85"><literal type="string" pos:start="1238:47" pos:end="1238:85">"skipping zero height strip %i of %i\n"</literal></expr></argument>, <argument pos:start="1238:88" pos:end="1238:92"><expr pos:start="1238:88" pos:end="1238:92"><name pos:start="1238:88" pos:end="1238:92">strip</name></expr></argument>, <argument pos:start="1238:95" pos:end="1238:104"><expr pos:start="1238:95" pos:end="1238:104"><name pos:start="1238:95" pos:end="1238:104">num_strips</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <continue pos:start="1239:17" pos:end="1239:25">continue;</continue>
            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="1242:13" pos:end="1249:48"><if pos:start="1242:13" pos:end="1245:48">if<condition pos:start="1242:15" pos:end="1242:46">(<expr pos:start="1242:16" pos:end="1242:45"><name pos:start="1242:16" pos:end="1242:25"><name pos:start="1242:16" pos:end="1242:16">s</name><operator pos:start="1242:17" pos:end="1242:18">-&gt;</operator><name pos:start="1242:19" pos:end="1242:25">pix_fmt</name></name> <operator pos:start="1242:27" pos:end="1242:28">==</operator> <name pos:start="1242:30" pos:end="1242:45">AV_PIX_FMT_RGB24</name></expr>)</condition><block type="pseudo" pos:start="1243:17" pos:end="1245:48"><block_content pos:start="1243:17" pos:end="1245:48">
                <expr_stmt pos:start="1243:17" pos:end="1245:48"><expr pos:start="1243:17" pos:end="1245:47"><call pos:start="1243:17" pos:end="1245:47"><name pos:start="1243:17" pos:end="1243:31">get_sub_picture</name><argument_list pos:start="1243:32" pos:end="1245:47">(<argument pos:start="1243:33" pos:end="1243:33"><expr pos:start="1243:33" pos:end="1243:33"><name pos:start="1243:33" pos:end="1243:33">s</name></expr></argument>, <argument pos:start="1243:36" pos:end="1243:36"><expr pos:start="1243:36" pos:end="1243:36"><literal type="number" pos:start="1243:36" pos:end="1243:36">0</literal></expr></argument>, <argument pos:start="1243:39" pos:end="1243:39"><expr pos:start="1243:39" pos:end="1243:39"><name pos:start="1243:39" pos:end="1243:39">y</name></expr></argument>,
                                <argument pos:start="1244:33" pos:end="1244:52"><expr pos:start="1244:33" pos:end="1244:52"><name pos:start="1244:33" pos:end="1244:52"><name pos:start="1244:33" pos:end="1244:33">s</name><operator pos:start="1244:34" pos:end="1244:35">-&gt;</operator><name pos:start="1244:36" pos:end="1244:46">input_frame</name><operator pos:start="1244:47" pos:end="1244:48">-&gt;</operator><name pos:start="1244:49" pos:end="1244:52">data</name></name></expr></argument>, <argument pos:start="1244:55" pos:end="1244:78"><expr pos:start="1244:55" pos:end="1244:78"><name pos:start="1244:55" pos:end="1244:78"><name pos:start="1244:55" pos:end="1244:55">s</name><operator pos:start="1244:56" pos:end="1244:57">-&gt;</operator><name pos:start="1244:58" pos:end="1244:68">input_frame</name><operator pos:start="1244:69" pos:end="1244:70">-&gt;</operator><name pos:start="1244:71" pos:end="1244:78">linesize</name></name></expr></argument>,
                                <argument pos:start="1245:33" pos:end="1245:36"><expr pos:start="1245:33" pos:end="1245:36"><name pos:start="1245:33" pos:end="1245:36">data</name></expr></argument>, <argument pos:start="1245:39" pos:end="1245:46"><expr pos:start="1245:39" pos:end="1245:46"><name pos:start="1245:39" pos:end="1245:46">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
            <else pos:start="1246:13" pos:end="1249:48">else<block type="pseudo" pos:start="1247:17" pos:end="1249:48"><block_content pos:start="1247:17" pos:end="1249:48">
                <expr_stmt pos:start="1247:17" pos:end="1249:48"><expr pos:start="1247:17" pos:end="1249:47"><call pos:start="1247:17" pos:end="1249:47"><name pos:start="1247:17" pos:end="1247:31">get_sub_picture</name><argument_list pos:start="1247:32" pos:end="1249:47">(<argument pos:start="1247:33" pos:end="1247:33"><expr pos:start="1247:33" pos:end="1247:33"><name pos:start="1247:33" pos:end="1247:33">s</name></expr></argument>, <argument pos:start="1247:36" pos:end="1247:36"><expr pos:start="1247:36" pos:end="1247:36"><literal type="number" pos:start="1247:36" pos:end="1247:36">0</literal></expr></argument>, <argument pos:start="1247:39" pos:end="1247:39"><expr pos:start="1247:39" pos:end="1247:39"><name pos:start="1247:39" pos:end="1247:39">y</name></expr></argument>,
                                <argument pos:start="1248:33" pos:end="1248:55"><expr pos:start="1248:33" pos:end="1248:55"><operator pos:start="1248:33" pos:end="1248:33">(</operator><name pos:start="1248:34" pos:end="1248:40">uint8_t</name> <operator pos:start="1248:42" pos:end="1248:42">*</operator><operator pos:start="1248:43" pos:end="1248:43">*</operator><operator pos:start="1248:44" pos:end="1248:44">)</operator><name pos:start="1248:45" pos:end="1248:55"><name pos:start="1248:45" pos:end="1248:49">frame</name><operator pos:start="1248:50" pos:end="1248:51">-&gt;</operator><name pos:start="1248:52" pos:end="1248:55">data</name></name></expr></argument>, <argument pos:start="1248:58" pos:end="1248:78"><expr pos:start="1248:58" pos:end="1248:78"><operator pos:start="1248:58" pos:end="1248:58">(</operator><name pos:start="1248:59" pos:end="1248:61">int</name><operator pos:start="1248:62" pos:end="1248:62">*</operator><operator pos:start="1248:63" pos:end="1248:63">)</operator><name pos:start="1248:64" pos:end="1248:78"><name pos:start="1248:64" pos:end="1248:68">frame</name><operator pos:start="1248:69" pos:end="1248:70">-&gt;</operator><name pos:start="1248:71" pos:end="1248:78">linesize</name></name></expr></argument>,
                                <argument pos:start="1249:33" pos:end="1249:36"><expr pos:start="1249:33" pos:end="1249:36"><name pos:start="1249:33" pos:end="1249:36">data</name></expr></argument>, <argument pos:start="1249:39" pos:end="1249:46"><expr pos:start="1249:39" pos:end="1249:46"><name pos:start="1249:39" pos:end="1249:46">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
            <expr_stmt pos:start="1250:13" pos:end="1252:54"><expr pos:start="1250:13" pos:end="1252:53"><call pos:start="1250:13" pos:end="1252:53"><name pos:start="1250:13" pos:end="1250:27">get_sub_picture</name><argument_list pos:start="1250:28" pos:end="1252:53">(<argument pos:start="1250:29" pos:end="1250:29"><expr pos:start="1250:29" pos:end="1250:29"><name pos:start="1250:29" pos:end="1250:29">s</name></expr></argument>, <argument pos:start="1250:32" pos:end="1250:32"><expr pos:start="1250:32" pos:end="1250:32"><literal type="number" pos:start="1250:32" pos:end="1250:32">0</literal></expr></argument>, <argument pos:start="1250:35" pos:end="1250:35"><expr pos:start="1250:35" pos:end="1250:35"><name pos:start="1250:35" pos:end="1250:35">y</name></expr></argument>,
                            <argument pos:start="1251:29" pos:end="1251:47"><expr pos:start="1251:29" pos:end="1251:47"><name pos:start="1251:29" pos:end="1251:47"><name pos:start="1251:29" pos:end="1251:29">s</name><operator pos:start="1251:30" pos:end="1251:31">-&gt;</operator><name pos:start="1251:32" pos:end="1251:41">last_frame</name><operator pos:start="1251:42" pos:end="1251:43">-&gt;</operator><name pos:start="1251:44" pos:end="1251:47">data</name></name></expr></argument>, <argument pos:start="1251:50" pos:end="1251:72"><expr pos:start="1251:50" pos:end="1251:72"><name pos:start="1251:50" pos:end="1251:72"><name pos:start="1251:50" pos:end="1251:50">s</name><operator pos:start="1251:51" pos:end="1251:52">-&gt;</operator><name pos:start="1251:53" pos:end="1251:62">last_frame</name><operator pos:start="1251:63" pos:end="1251:64">-&gt;</operator><name pos:start="1251:65" pos:end="1251:72">linesize</name></name></expr></argument>,
                            <argument pos:start="1252:29" pos:end="1252:37"><expr pos:start="1252:29" pos:end="1252:37"><name pos:start="1252:29" pos:end="1252:37">last_data</name></expr></argument>, <argument pos:start="1252:40" pos:end="1252:52"><expr pos:start="1252:40" pos:end="1252:52"><name pos:start="1252:40" pos:end="1252:52">last_linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="1253:13" pos:end="1255:60"><expr pos:start="1253:13" pos:end="1255:59"><call pos:start="1253:13" pos:end="1255:59"><name pos:start="1253:13" pos:end="1253:27">get_sub_picture</name><argument_list pos:start="1253:28" pos:end="1255:59">(<argument pos:start="1253:29" pos:end="1253:29"><expr pos:start="1253:29" pos:end="1253:29"><name pos:start="1253:29" pos:end="1253:29">s</name></expr></argument>, <argument pos:start="1253:32" pos:end="1253:32"><expr pos:start="1253:32" pos:end="1253:32"><literal type="number" pos:start="1253:32" pos:end="1253:32">0</literal></expr></argument>, <argument pos:start="1253:35" pos:end="1253:35"><expr pos:start="1253:35" pos:end="1253:35"><name pos:start="1253:35" pos:end="1253:35">y</name></expr></argument>,
                            <argument pos:start="1254:29" pos:end="1254:50"><expr pos:start="1254:29" pos:end="1254:50"><name pos:start="1254:29" pos:end="1254:50"><name pos:start="1254:29" pos:end="1254:29">s</name><operator pos:start="1254:30" pos:end="1254:31">-&gt;</operator><name pos:start="1254:32" pos:end="1254:44">scratch_frame</name><operator pos:start="1254:45" pos:end="1254:46">-&gt;</operator><name pos:start="1254:47" pos:end="1254:50">data</name></name></expr></argument>, <argument pos:start="1254:53" pos:end="1254:78"><expr pos:start="1254:53" pos:end="1254:78"><name pos:start="1254:53" pos:end="1254:78"><name pos:start="1254:53" pos:end="1254:53">s</name><operator pos:start="1254:54" pos:end="1254:55">-&gt;</operator><name pos:start="1254:56" pos:end="1254:68">scratch_frame</name><operator pos:start="1254:69" pos:end="1254:70">-&gt;</operator><name pos:start="1254:71" pos:end="1254:78">linesize</name></name></expr></argument>,
                            <argument pos:start="1255:29" pos:end="1255:40"><expr pos:start="1255:29" pos:end="1255:40"><name pos:start="1255:29" pos:end="1255:40">scratch_data</name></expr></argument>, <argument pos:start="1255:43" pos:end="1255:58"><expr pos:start="1255:43" pos:end="1255:58"><name pos:start="1255:43" pos:end="1255:58">scratch_linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1257:13" pos:end="1265:33"><if pos:start="1257:13" pos:end="1265:33">if<condition pos:start="1257:15" pos:end="1264:7">(<expr pos:start="1257:16" pos:end="1264:6"><operator pos:start="1257:16" pos:end="1257:16">(</operator><name pos:start="1257:17" pos:end="1257:25">temp_size</name> <operator pos:start="1257:27" pos:end="1257:27">=</operator> <call pos:start="1257:29" pos:end="1264:1"><name pos:start="1257:29" pos:end="1257:36">rd_strip</name><argument_list pos:start="1257:37" pos:end="1264:1">(<argument pos:start="1257:38" pos:end="1257:38"><expr pos:start="1257:38" pos:end="1257:38"><name pos:start="1257:38" pos:end="1257:38">s</name></expr></argument>, <argument pos:start="1257:41" pos:end="1257:41"><expr pos:start="1257:41" pos:end="1257:41"><name pos:start="1257:41" pos:end="1257:41">y</name></expr></argument>, <argument pos:start="1257:44" pos:end="1257:55"><expr pos:start="1257:44" pos:end="1257:55"><name pos:start="1257:44" pos:end="1257:55">strip_height</name></expr></argument>, <argument pos:start="1257:58" pos:end="1257:68"><expr pos:start="1257:58" pos:end="1257:68"><name pos:start="1257:58" pos:end="1257:68">isakeyframe</name></expr></argument>,
                                     <argument pos:start="1258:38" pos:end="1258:46"><expr pos:start="1258:38" pos:end="1258:46"><name pos:start="1258:38" pos:end="1258:46">last_data</name></expr></argument>, <argument pos:start="1258:49" pos:end="1258:61"><expr pos:start="1258:49" pos:end="1258:61"><name pos:start="1258:49" pos:end="1258:61">last_linesize</name></expr></argument>, <argument pos:start="1258:64" pos:end="1258:67"><expr pos:start="1258:64" pos:end="1258:67"><name pos:start="1258:64" pos:end="1258:67">data</name></expr></argument>, <argument pos:start="1258:70" pos:end="1258:77"><expr pos:start="1258:70" pos:end="1258:77"><name pos:start="1258:70" pos:end="1258:77">linesize</name></expr></argument>,
                                     <argument pos:start="1259:38" pos:end="1259:49"><expr pos:start="1259:38" pos:end="1259:49"><name pos:start="1259:38" pos:end="1259:49">scratch_data</name></expr></argument>, <argument pos:start="1259:52" pos:end="1259:67"><expr pos:start="1259:52" pos:end="1259:67"><name pos:start="1259:52" pos:end="1259:67">scratch_linesize</name></expr></argument>,
                                     <argument pos:start="1260:38" pos:end="1260:75"><expr pos:start="1260:38" pos:end="1260:75"><name pos:start="1260:38" pos:end="1260:49"><name pos:start="1260:38" pos:end="1260:38">s</name><operator pos:start="1260:39" pos:end="1260:40">-&gt;</operator><name pos:start="1260:41" pos:end="1260:49">frame_buf</name></name> <operator pos:start="1260:51" pos:end="1260:51">+</operator> <name pos:start="1260:53" pos:end="1260:56">size</name> <operator pos:start="1260:58" pos:end="1260:58">+</operator> <name pos:start="1260:60" pos:end="1260:75">CVID_HEADER_SIZE</name></expr></argument>, <argument pos:start="1260:78" pos:end="1262:0"><expr pos:start="1260:78" pos:end="1262:0"><operator pos:start="1260:78" pos:end="1260:78">&amp;</operator><name pos:start="1260:79" pos:end="1262:0">score_temp</name></expr></argument>
<cpp:ifdef pos:start="1261:1" pos:end="1261:26">#<cpp:directive pos:start="1261:2" pos:end="1261:6">ifdef</cpp:directive> <name pos:start="1261:8" pos:end="1261:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
, <argument pos:start="1262:3" pos:end="1264:0"><expr pos:start="1262:3" pos:end="1264:0"><operator pos:start="1262:3" pos:end="1262:3">&amp;</operator><name pos:start="1262:4" pos:end="1264:0">serr_temp</name></expr></argument>
<cpp:endif pos:start="1263:1" pos:end="1263:6">#<cpp:directive pos:start="1263:2" pos:end="1263:6">endif</cpp:directive></cpp:endif>
)</argument_list></call><operator pos:start="1264:2" pos:end="1264:2">)</operator> <operator pos:start="1264:4" pos:end="1264:4">&lt;</operator> <literal type="number" pos:start="1264:6" pos:end="1264:6">0</literal></expr>)</condition><block type="pseudo" pos:start="1265:17" pos:end="1265:33"><block_content pos:start="1265:17" pos:end="1265:33">
                <return pos:start="1265:17" pos:end="1265:33">return <expr pos:start="1265:24" pos:end="1265:32"><name pos:start="1265:24" pos:end="1265:32">temp_size</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1267:13" pos:end="1269:0"><expr pos:start="1267:13" pos:end="1267:31"><name pos:start="1267:13" pos:end="1267:17">score</name> <operator pos:start="1267:19" pos:end="1267:20">+=</operator> <name pos:start="1267:22" pos:end="1267:31">score_temp</name></expr>;</expr_stmt>
<cpp:ifdef pos:start="1268:1" pos:end="1268:26">#<cpp:directive pos:start="1268:2" pos:end="1268:6">ifdef</cpp:directive> <name pos:start="1268:8" pos:end="1268:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
            <expr_stmt pos:start="1269:13" pos:end="1271:0"><expr pos:start="1269:13" pos:end="1269:29"><name pos:start="1269:13" pos:end="1269:16">serr</name> <operator pos:start="1269:18" pos:end="1269:19">+=</operator> <name pos:start="1269:21" pos:end="1269:29">serr_temp</name></expr>;</expr_stmt>
<cpp:endif pos:start="1270:1" pos:end="1270:6">#<cpp:directive pos:start="1270:2" pos:end="1270:6">endif</cpp:directive></cpp:endif>
            <expr_stmt pos:start="1271:13" pos:end="1271:30"><expr pos:start="1271:13" pos:end="1271:29"><name pos:start="1271:13" pos:end="1271:16">size</name> <operator pos:start="1271:18" pos:end="1271:19">+=</operator> <name pos:start="1271:21" pos:end="1271:29">temp_size</name></expr>;</expr_stmt>
            <comment type="line" pos:start="1272:13" pos:end="1272:92">//av_log(s-&gt;avctx, AV_LOG_INFO, "strip %d, isakeyframe=%d", strip, isakeyframe);</comment>
            <comment type="line" pos:start="1273:13" pos:end="1273:50">//av_log(s-&gt;avctx, AV_LOG_INFO, "\n");</comment>
        </block_content>}</block></for>

        <if_stmt pos:start="1276:9" pos:end="1290:9"><if pos:start="1276:9" pos:end="1290:9">if<condition pos:start="1276:11" pos:end="1276:49">(<expr pos:start="1276:12" pos:end="1276:48"><name pos:start="1276:12" pos:end="1276:21">best_score</name> <operator pos:start="1276:23" pos:end="1276:24">==</operator> <literal type="number" pos:start="1276:26" pos:end="1276:26">0</literal> <operator pos:start="1276:28" pos:end="1276:29">||</operator> <name pos:start="1276:31" pos:end="1276:35">score</name> <operator pos:start="1276:37" pos:end="1276:37">&lt;</operator> <name pos:start="1276:39" pos:end="1276:48">best_score</name></expr>)</condition> <block pos:start="1276:51" pos:end="1290:9">{<block_content pos:start="1277:13" pos:end="1289:38">
            <expr_stmt pos:start="1277:13" pos:end="1279:0"><expr pos:start="1277:13" pos:end="1277:30"><name pos:start="1277:13" pos:end="1277:22">best_score</name> <operator pos:start="1277:24" pos:end="1277:24">=</operator> <name pos:start="1277:26" pos:end="1277:30">score</name></expr>;</expr_stmt>
<cpp:ifdef pos:start="1278:1" pos:end="1278:26">#<cpp:directive pos:start="1278:2" pos:end="1278:6">ifdef</cpp:directive> <name pos:start="1278:8" pos:end="1278:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
            <expr_stmt pos:start="1279:13" pos:end="1281:0"><expr pos:start="1279:13" pos:end="1279:28"><name pos:start="1279:13" pos:end="1279:21">best_serr</name> <operator pos:start="1279:23" pos:end="1279:23">=</operator> <name pos:start="1279:25" pos:end="1279:28">serr</name></expr>;</expr_stmt>
<cpp:endif pos:start="1280:1" pos:end="1280:6">#<cpp:directive pos:start="1280:2" pos:end="1280:6">endif</cpp:directive></cpp:endif>
            <expr_stmt pos:start="1281:13" pos:end="1284:0"><expr pos:start="1281:13" pos:end="1281:96"><name pos:start="1281:13" pos:end="1281:21">best_size</name> <operator pos:start="1281:23" pos:end="1281:23">=</operator> <name pos:start="1281:25" pos:end="1281:28">size</name> <operator pos:start="1281:30" pos:end="1281:30">+</operator> <call pos:start="1281:32" pos:end="1281:96"><name pos:start="1281:32" pos:end="1281:48">write_cvid_header</name><argument_list pos:start="1281:49" pos:end="1281:96">(<argument pos:start="1281:50" pos:end="1281:50"><expr pos:start="1281:50" pos:end="1281:50"><name pos:start="1281:50" pos:end="1281:50">s</name></expr></argument>, <argument pos:start="1281:53" pos:end="1281:64"><expr pos:start="1281:53" pos:end="1281:64"><name pos:start="1281:53" pos:end="1281:64"><name pos:start="1281:53" pos:end="1281:53">s</name><operator pos:start="1281:54" pos:end="1281:55">-&gt;</operator><name pos:start="1281:56" pos:end="1281:64">frame_buf</name></name></expr></argument>, <argument pos:start="1281:67" pos:end="1281:76"><expr pos:start="1281:67" pos:end="1281:76"><name pos:start="1281:67" pos:end="1281:76">num_strips</name></expr></argument>, <argument pos:start="1281:79" pos:end="1281:82"><expr pos:start="1281:79" pos:end="1281:82"><name pos:start="1281:79" pos:end="1281:82">size</name></expr></argument>, <argument pos:start="1281:85" pos:end="1281:95"><expr pos:start="1281:85" pos:end="1281:95"><name pos:start="1281:85" pos:end="1281:95">isakeyframe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:start="1282:13" pos:end="1282:132">//av_log(s-&gt;avctx, AV_LOG_INFO, "best number of strips so far: %2i, %12"PRId64", %i B\n", num_strips, score, best_size);</comment>
<cpp:ifdef pos:start="1283:1" pos:end="1283:26">#<cpp:directive pos:start="1283:2" pos:end="1283:6">ifdef</cpp:directive> <name pos:start="1283:8" pos:end="1283:26">CINEPAK_REPORT_SERR</name></cpp:ifdef>
            <expr_stmt pos:start="1284:13" pos:end="1286:0"><expr pos:start="1284:13" pos:end="1284:128"><call pos:start="1284:13" pos:end="1284:128"><name pos:start="1284:13" pos:end="1284:18">av_log</name><argument_list pos:start="1284:19" pos:end="1284:128">(<argument pos:start="1284:20" pos:end="1284:27"><expr pos:start="1284:20" pos:end="1284:27"><name pos:start="1284:20" pos:end="1284:27"><name pos:start="1284:20" pos:end="1284:20">s</name><operator pos:start="1284:21" pos:end="1284:22">-&gt;</operator><name pos:start="1284:23" pos:end="1284:27">avctx</name></name></expr></argument>, <argument pos:start="1284:30" pos:end="1284:40"><expr pos:start="1284:30" pos:end="1284:40"><name pos:start="1284:30" pos:end="1284:40">AV_LOG_INFO</name></expr></argument>, <argument pos:start="1284:43" pos:end="1284:98"><expr pos:start="1284:43" pos:end="1284:98"><literal type="string" pos:start="1284:43" pos:end="1284:82">"best number of strips so far: %2i, %12"</literal><name pos:start="1284:83" pos:end="1284:88">PRId64</name><literal type="string" pos:start="1284:89" pos:end="1284:98">", %i B\n"</literal></expr></argument>, <argument pos:start="1284:101" pos:end="1284:110"><expr pos:start="1284:101" pos:end="1284:110"><name pos:start="1284:101" pos:end="1284:110">num_strips</name></expr></argument>, <argument pos:start="1284:113" pos:end="1284:116"><expr pos:start="1284:113" pos:end="1284:116"><name pos:start="1284:113" pos:end="1284:116">serr</name></expr></argument>, <argument pos:start="1284:119" pos:end="1284:127"><expr pos:start="1284:119" pos:end="1284:127"><name pos:start="1284:119" pos:end="1284:127">best_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="1285:1" pos:end="1285:6">#<cpp:directive pos:start="1285:2" pos:end="1285:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="1287:13" pos:end="1287:63"><expr pos:start="1287:13" pos:end="1287:62"><call pos:start="1287:13" pos:end="1287:62"><name pos:start="1287:13" pos:end="1287:18">FFSWAP</name><argument_list pos:start="1287:19" pos:end="1287:62">(<argument pos:start="1287:20" pos:end="1287:28"><expr pos:start="1287:20" pos:end="1287:28"><name pos:start="1287:20" pos:end="1287:26">AVFrame</name> <operator pos:start="1287:28" pos:end="1287:28">*</operator></expr></argument>, <argument pos:start="1287:31" pos:end="1287:43"><expr pos:start="1287:31" pos:end="1287:43"><name pos:start="1287:31" pos:end="1287:43"><name pos:start="1287:31" pos:end="1287:31">s</name><operator pos:start="1287:32" pos:end="1287:33">-&gt;</operator><name pos:start="1287:34" pos:end="1287:43">best_frame</name></name></expr></argument>, <argument pos:start="1287:46" pos:end="1287:61"><expr pos:start="1287:46" pos:end="1287:61"><name pos:start="1287:46" pos:end="1287:61"><name pos:start="1287:46" pos:end="1287:46">s</name><operator pos:start="1287:47" pos:end="1287:48">-&gt;</operator><name pos:start="1287:49" pos:end="1287:61">scratch_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="1288:13" pos:end="1288:49"><expr pos:start="1288:13" pos:end="1288:48"><call pos:start="1288:13" pos:end="1288:48"><name pos:start="1288:13" pos:end="1288:18">memcpy</name><argument_list pos:start="1288:19" pos:end="1288:48">(<argument pos:start="1288:20" pos:end="1288:22"><expr pos:start="1288:20" pos:end="1288:22"><name pos:start="1288:20" pos:end="1288:22">buf</name></expr></argument>, <argument pos:start="1288:25" pos:end="1288:36"><expr pos:start="1288:25" pos:end="1288:36"><name pos:start="1288:25" pos:end="1288:36"><name pos:start="1288:25" pos:end="1288:25">s</name><operator pos:start="1288:26" pos:end="1288:27">-&gt;</operator><name pos:start="1288:28" pos:end="1288:36">frame_buf</name></name></expr></argument>, <argument pos:start="1288:39" pos:end="1288:47"><expr pos:start="1288:39" pos:end="1288:47"><name pos:start="1288:39" pos:end="1288:47">best_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="1289:13" pos:end="1289:38"><expr pos:start="1289:13" pos:end="1289:37"><name pos:start="1289:13" pos:end="1289:24">best_nstrips</name> <operator pos:start="1289:26" pos:end="1289:26">=</operator> <name pos:start="1289:28" pos:end="1289:37">num_strips</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
<comment type="line" pos:start="1291:1" pos:end="1291:60">// avoid trying too many strip numbers without a real reason</comment>
<comment type="line" pos:start="1292:1" pos:end="1292:61">// (this makes the processing of the very first frame faster)</comment>
        <if_stmt pos:start="1293:9" pos:end="1294:18"><if pos:start="1293:9" pos:end="1294:18">if<condition pos:start="1293:11" pos:end="1293:41">(<expr pos:start="1293:12" pos:end="1293:40"><name pos:start="1293:12" pos:end="1293:21">num_strips</name> <operator pos:start="1293:23" pos:end="1293:23">-</operator> <name pos:start="1293:25" pos:end="1293:36">best_nstrips</name> <operator pos:start="1293:38" pos:end="1293:38">&gt;</operator> <literal type="number" pos:start="1293:40" pos:end="1293:40">4</literal></expr>)</condition><block type="pseudo" pos:start="1294:13" pos:end="1294:18"><block_content pos:start="1294:13" pos:end="1294:18">
            <break pos:start="1294:13" pos:end="1294:18">break;</break></block_content></block></if></if_stmt>
    </block_content>}</block></for>

    <expr_stmt pos:start="1297:5" pos:end="1297:52"><expr pos:start="1297:5" pos:end="1297:51"><call pos:start="1297:5" pos:end="1297:51"><name pos:start="1297:5" pos:end="1297:14">av_assert0</name><argument_list pos:start="1297:15" pos:end="1297:51">(<argument pos:start="1297:16" pos:end="1297:50"><expr pos:start="1297:16" pos:end="1297:50"><name pos:start="1297:16" pos:end="1297:27">best_nstrips</name> <operator pos:start="1297:29" pos:end="1297:30">&gt;=</operator> <literal type="number" pos:start="1297:32" pos:end="1297:32">0</literal> <operator pos:start="1297:34" pos:end="1297:35">&amp;&amp;</operator> <name pos:start="1297:37" pos:end="1297:45">best_size</name> <operator pos:start="1297:47" pos:end="1297:48">&gt;=</operator> <literal type="number" pos:start="1297:50" pos:end="1297:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="1299:1" pos:end="1299:72">// let the number of strips slowly adapt to the changes in the contents,</comment>
<comment type="line" pos:start="1300:1" pos:end="1300:71">// compared to full bruteforcing every time this will occasionally lead</comment>
<comment type="line" pos:start="1301:1" pos:end="1301:77">// to some r/d performance loss but makes encoding up to several times faster</comment>
    <if_stmt pos:start="1302:5" pos:end="1320:5"><if pos:start="1302:5" pos:end="1313:5">if<condition pos:start="1302:7" pos:end="1302:36">(<expr pos:start="1302:8" pos:end="1302:35"><operator pos:start="1302:8" pos:end="1302:8">!</operator><name pos:start="1302:9" pos:end="1302:35"><name pos:start="1302:9" pos:end="1302:9">s</name><operator pos:start="1302:10" pos:end="1302:11">-&gt;</operator><name pos:start="1302:12" pos:end="1302:35">strip_number_delta_range</name></name></expr>)</condition> <block pos:start="1302:38" pos:end="1313:5">{<block_content pos:start="1303:9" pos:end="1312:46">
        <if_stmt pos:start="1303:9" pos:end="1309:9"><if pos:start="1303:9" pos:end="1307:9">if<condition pos:start="1303:11" pos:end="1303:41">(<expr pos:start="1303:12" pos:end="1303:40"><name pos:start="1303:12" pos:end="1303:23">best_nstrips</name> <operator pos:start="1303:25" pos:end="1303:26">==</operator> <name pos:start="1303:28" pos:end="1303:40"><name pos:start="1303:28" pos:end="1303:28">s</name><operator pos:start="1303:29" pos:end="1303:30">-&gt;</operator><name pos:start="1303:31" pos:end="1303:40">max_strips</name></name></expr>)</condition> <block pos:start="1303:43" pos:end="1307:9">{<block_content pos:start="1304:13" pos:end="1306:50"> <comment type="line" pos:start="1303:45" pos:end="1303:68">// let us try to step up</comment>
            <expr_stmt pos:start="1304:13" pos:end="1304:45"><expr pos:start="1304:13" pos:end="1304:44"><name pos:start="1304:13" pos:end="1304:25"><name pos:start="1304:13" pos:end="1304:13">s</name><operator pos:start="1304:14" pos:end="1304:15">-&gt;</operator><name pos:start="1304:16" pos:end="1304:25">max_strips</name></name> <operator pos:start="1304:27" pos:end="1304:27">=</operator> <name pos:start="1304:29" pos:end="1304:40">best_nstrips</name> <operator pos:start="1304:42" pos:end="1304:42">+</operator> <literal type="number" pos:start="1304:44" pos:end="1304:44">1</literal></expr>;</expr_stmt>
            <if_stmt pos:start="1305:13" pos:end="1306:50"><if pos:start="1305:13" pos:end="1306:50">if<condition pos:start="1305:15" pos:end="1305:50">(<expr pos:start="1305:16" pos:end="1305:49"><name pos:start="1305:16" pos:end="1305:28"><name pos:start="1305:16" pos:end="1305:16">s</name><operator pos:start="1305:17" pos:end="1305:18">-&gt;</operator><name pos:start="1305:19" pos:end="1305:28">max_strips</name></name> <operator pos:start="1305:30" pos:end="1305:31">&gt;=</operator> <name pos:start="1305:33" pos:end="1305:49"><name pos:start="1305:33" pos:end="1305:33">s</name><operator pos:start="1305:34" pos:end="1305:35">-&gt;</operator><name pos:start="1305:36" pos:end="1305:49">max_max_strips</name></name></expr>)</condition><block type="pseudo" pos:start="1306:17" pos:end="1306:50"><block_content pos:start="1306:17" pos:end="1306:50">
                <expr_stmt pos:start="1306:17" pos:end="1306:50"><expr pos:start="1306:17" pos:end="1306:49"><name pos:start="1306:17" pos:end="1306:29"><name pos:start="1306:17" pos:end="1306:17">s</name><operator pos:start="1306:18" pos:end="1306:19">-&gt;</operator><name pos:start="1306:20" pos:end="1306:29">max_strips</name></name> <operator pos:start="1306:31" pos:end="1306:31">=</operator> <name pos:start="1306:33" pos:end="1306:49"><name pos:start="1306:33" pos:end="1306:33">s</name><operator pos:start="1306:34" pos:end="1306:35">-&gt;</operator><name pos:start="1306:36" pos:end="1306:49">max_max_strips</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        </block_content>}</block></if> <else pos:start="1307:11" pos:end="1309:9">else <block pos:start="1307:16" pos:end="1309:9">{<block_content pos:start="1308:13" pos:end="1308:41"> <comment type="line" pos:start="1307:18" pos:end="1307:36">// try to step down</comment>
            <expr_stmt pos:start="1308:13" pos:end="1308:41"><expr pos:start="1308:13" pos:end="1308:40"><name pos:start="1308:13" pos:end="1308:25"><name pos:start="1308:13" pos:end="1308:13">s</name><operator pos:start="1308:14" pos:end="1308:15">-&gt;</operator><name pos:start="1308:16" pos:end="1308:25">max_strips</name></name> <operator pos:start="1308:27" pos:end="1308:27">=</operator> <name pos:start="1308:29" pos:end="1308:40">best_nstrips</name></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <expr_stmt pos:start="1310:9" pos:end="1310:42"><expr pos:start="1310:9" pos:end="1310:41"><name pos:start="1310:9" pos:end="1310:21"><name pos:start="1310:9" pos:end="1310:9">s</name><operator pos:start="1310:10" pos:end="1310:11">-&gt;</operator><name pos:start="1310:12" pos:end="1310:21">min_strips</name></name> <operator pos:start="1310:23" pos:end="1310:23">=</operator> <name pos:start="1310:25" pos:end="1310:37"><name pos:start="1310:25" pos:end="1310:25">s</name><operator pos:start="1310:26" pos:end="1310:27">-&gt;</operator><name pos:start="1310:28" pos:end="1310:37">max_strips</name></name> <operator pos:start="1310:39" pos:end="1310:39">-</operator> <literal type="number" pos:start="1310:41" pos:end="1310:41">1</literal></expr>;</expr_stmt>
        <if_stmt pos:start="1311:9" pos:end="1312:46"><if pos:start="1311:9" pos:end="1312:46">if<condition pos:start="1311:11" pos:end="1311:45">(<expr pos:start="1311:12" pos:end="1311:44"><name pos:start="1311:12" pos:end="1311:24"><name pos:start="1311:12" pos:end="1311:12">s</name><operator pos:start="1311:13" pos:end="1311:14">-&gt;</operator><name pos:start="1311:15" pos:end="1311:24">min_strips</name></name> <operator pos:start="1311:26" pos:end="1311:26">&lt;</operator> <name pos:start="1311:28" pos:end="1311:44"><name pos:start="1311:28" pos:end="1311:28">s</name><operator pos:start="1311:29" pos:end="1311:30">-&gt;</operator><name pos:start="1311:31" pos:end="1311:44">min_min_strips</name></name></expr>)</condition><block type="pseudo" pos:start="1312:13" pos:end="1312:46"><block_content pos:start="1312:13" pos:end="1312:46">
            <expr_stmt pos:start="1312:13" pos:end="1312:46"><expr pos:start="1312:13" pos:end="1312:45"><name pos:start="1312:13" pos:end="1312:25"><name pos:start="1312:13" pos:end="1312:13">s</name><operator pos:start="1312:14" pos:end="1312:15">-&gt;</operator><name pos:start="1312:16" pos:end="1312:25">min_strips</name></name> <operator pos:start="1312:27" pos:end="1312:27">=</operator> <name pos:start="1312:29" pos:end="1312:45"><name pos:start="1312:29" pos:end="1312:29">s</name><operator pos:start="1312:30" pos:end="1312:31">-&gt;</operator><name pos:start="1312:32" pos:end="1312:45">min_min_strips</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></if> <else pos:start="1313:7" pos:end="1320:5">else <block pos:start="1313:12" pos:end="1320:5">{<block_content pos:start="1314:9" pos:end="1319:46">
        <expr_stmt pos:start="1314:9" pos:end="1314:67"><expr pos:start="1314:9" pos:end="1314:66"><name pos:start="1314:9" pos:end="1314:21"><name pos:start="1314:9" pos:end="1314:9">s</name><operator pos:start="1314:10" pos:end="1314:11">-&gt;</operator><name pos:start="1314:12" pos:end="1314:21">max_strips</name></name> <operator pos:start="1314:23" pos:end="1314:23">=</operator> <name pos:start="1314:25" pos:end="1314:36">best_nstrips</name> <operator pos:start="1314:38" pos:end="1314:38">+</operator> <name pos:start="1314:40" pos:end="1314:66"><name pos:start="1314:40" pos:end="1314:40">s</name><operator pos:start="1314:41" pos:end="1314:42">-&gt;</operator><name pos:start="1314:43" pos:end="1314:66">strip_number_delta_range</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="1315:9" pos:end="1316:46"><if pos:start="1315:9" pos:end="1316:46">if<condition pos:start="1315:11" pos:end="1315:46">(<expr pos:start="1315:12" pos:end="1315:45"><name pos:start="1315:12" pos:end="1315:24"><name pos:start="1315:12" pos:end="1315:12">s</name><operator pos:start="1315:13" pos:end="1315:14">-&gt;</operator><name pos:start="1315:15" pos:end="1315:24">max_strips</name></name> <operator pos:start="1315:26" pos:end="1315:27">&gt;=</operator> <name pos:start="1315:29" pos:end="1315:45"><name pos:start="1315:29" pos:end="1315:29">s</name><operator pos:start="1315:30" pos:end="1315:31">-&gt;</operator><name pos:start="1315:32" pos:end="1315:45">max_max_strips</name></name></expr>)</condition><block type="pseudo" pos:start="1316:13" pos:end="1316:46"><block_content pos:start="1316:13" pos:end="1316:46">
            <expr_stmt pos:start="1316:13" pos:end="1316:46"><expr pos:start="1316:13" pos:end="1316:45"><name pos:start="1316:13" pos:end="1316:25"><name pos:start="1316:13" pos:end="1316:13">s</name><operator pos:start="1316:14" pos:end="1316:15">-&gt;</operator><name pos:start="1316:16" pos:end="1316:25">max_strips</name></name> <operator pos:start="1316:27" pos:end="1316:27">=</operator> <name pos:start="1316:29" pos:end="1316:45"><name pos:start="1316:29" pos:end="1316:29">s</name><operator pos:start="1316:30" pos:end="1316:31">-&gt;</operator><name pos:start="1316:32" pos:end="1316:45">max_max_strips</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="1317:9" pos:end="1317:67"><expr pos:start="1317:9" pos:end="1317:66"><name pos:start="1317:9" pos:end="1317:21"><name pos:start="1317:9" pos:end="1317:9">s</name><operator pos:start="1317:10" pos:end="1317:11">-&gt;</operator><name pos:start="1317:12" pos:end="1317:21">min_strips</name></name> <operator pos:start="1317:23" pos:end="1317:23">=</operator> <name pos:start="1317:25" pos:end="1317:36">best_nstrips</name> <operator pos:start="1317:38" pos:end="1317:38">-</operator> <name pos:start="1317:40" pos:end="1317:66"><name pos:start="1317:40" pos:end="1317:40">s</name><operator pos:start="1317:41" pos:end="1317:42">-&gt;</operator><name pos:start="1317:43" pos:end="1317:66">strip_number_delta_range</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="1318:9" pos:end="1319:46"><if pos:start="1318:9" pos:end="1319:46">if<condition pos:start="1318:11" pos:end="1318:45">(<expr pos:start="1318:12" pos:end="1318:44"><name pos:start="1318:12" pos:end="1318:24"><name pos:start="1318:12" pos:end="1318:12">s</name><operator pos:start="1318:13" pos:end="1318:14">-&gt;</operator><name pos:start="1318:15" pos:end="1318:24">min_strips</name></name> <operator pos:start="1318:26" pos:end="1318:26">&lt;</operator> <name pos:start="1318:28" pos:end="1318:44"><name pos:start="1318:28" pos:end="1318:28">s</name><operator pos:start="1318:29" pos:end="1318:30">-&gt;</operator><name pos:start="1318:31" pos:end="1318:44">min_min_strips</name></name></expr>)</condition><block type="pseudo" pos:start="1319:13" pos:end="1319:46"><block_content pos:start="1319:13" pos:end="1319:46">
            <expr_stmt pos:start="1319:13" pos:end="1319:46"><expr pos:start="1319:13" pos:end="1319:45"><name pos:start="1319:13" pos:end="1319:25"><name pos:start="1319:13" pos:end="1319:13">s</name><operator pos:start="1319:14" pos:end="1319:15">-&gt;</operator><name pos:start="1319:16" pos:end="1319:25">min_strips</name></name> <operator pos:start="1319:27" pos:end="1319:27">=</operator> <name pos:start="1319:29" pos:end="1319:45"><name pos:start="1319:29" pos:end="1319:29">s</name><operator pos:start="1319:30" pos:end="1319:31">-&gt;</operator><name pos:start="1319:32" pos:end="1319:45">min_min_strips</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></else></if_stmt>

    <return pos:start="1322:5" pos:end="1322:21">return <expr pos:start="1322:12" pos:end="1322:20"><name pos:start="1322:12" pos:end="1322:20">best_size</name></expr>;</return>
</block_content>}</block></function>

<function pos:start="1325:1" pos:end="1347:1"><type pos:start="1325:1" pos:end="1325:10"><specifier pos:start="1325:1" pos:end="1325:6">static</specifier> <name pos:start="1325:8" pos:end="1325:10">int</name></type> <name pos:start="1325:12" pos:end="1325:31">cinepak_encode_frame</name><parameter_list pos:start="1325:32" pos:end="1326:70">(<parameter pos:start="1325:33" pos:end="1325:53"><decl pos:start="1325:33" pos:end="1325:53"><type pos:start="1325:33" pos:end="1325:53"><name pos:start="1325:33" pos:end="1325:46">AVCodecContext</name> <modifier pos:start="1325:48" pos:end="1325:48">*</modifier></type><name pos:start="1325:49" pos:end="1325:53">avctx</name></decl></parameter>, <parameter pos:start="1325:56" pos:end="1325:68"><decl pos:start="1325:56" pos:end="1325:68"><type pos:start="1325:56" pos:end="1325:68"><name pos:start="1325:56" pos:end="1325:63">AVPacket</name> <modifier pos:start="1325:65" pos:end="1325:65">*</modifier></type><name pos:start="1325:66" pos:end="1325:68">pkt</name></decl></parameter>,
                                <parameter pos:start="1326:33" pos:end="1326:52"><decl pos:start="1326:33" pos:end="1326:52"><type pos:start="1326:33" pos:end="1326:52"><specifier pos:start="1326:33" pos:end="1326:37">const</specifier> <name pos:start="1326:39" pos:end="1326:45">AVFrame</name> <modifier pos:start="1326:47" pos:end="1326:47">*</modifier></type><name pos:start="1326:48" pos:end="1326:52">frame</name></decl></parameter>, <parameter pos:start="1326:55" pos:end="1326:69"><decl pos:start="1326:55" pos:end="1326:69"><type pos:start="1326:55" pos:end="1326:69"><name pos:start="1326:55" pos:end="1326:57">int</name> <modifier pos:start="1326:59" pos:end="1326:59">*</modifier></type><name pos:start="1326:60" pos:end="1326:69">got_packet</name></decl></parameter>)</parameter_list>
<block pos:start="1327:1" pos:end="1347:1">{<block_content pos:start="1328:5" pos:end="1346:13">
    <decl_stmt pos:start="1328:5" pos:end="1328:44"><decl pos:start="1328:5" pos:end="1328:43"><type pos:start="1328:5" pos:end="1328:23"><name pos:start="1328:5" pos:end="1328:21">CinepakEncContext</name> <modifier pos:start="1328:23" pos:end="1328:23">*</modifier></type><name pos:start="1328:24" pos:end="1328:24">s</name> <init pos:start="1328:26" pos:end="1328:43">= <expr pos:start="1328:28" pos:end="1328:43"><name pos:start="1328:28" pos:end="1328:43"><name pos:start="1328:28" pos:end="1328:32">avctx</name><operator pos:start="1328:33" pos:end="1328:34">-&gt;</operator><name pos:start="1328:35" pos:end="1328:43">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="1329:5" pos:end="1329:12"><decl pos:start="1329:5" pos:end="1329:11"><type pos:start="1329:5" pos:end="1329:7"><name pos:start="1329:5" pos:end="1329:7">int</name></type> <name pos:start="1329:9" pos:end="1329:11">ret</name></decl>;</decl_stmt>

    <expr_stmt pos:start="1331:5" pos:end="1331:74"><expr pos:start="1331:5" pos:end="1331:73"><name pos:start="1331:5" pos:end="1331:13"><name pos:start="1331:5" pos:end="1331:5">s</name><operator pos:start="1331:6" pos:end="1331:7">-&gt;</operator><name pos:start="1331:8" pos:end="1331:13">lambda</name></name> <operator pos:start="1331:15" pos:end="1331:15">=</operator> <ternary pos:start="1331:17" pos:end="1331:73"><condition pos:start="1331:17" pos:end="1331:32"><expr pos:start="1331:17" pos:end="1331:30"><name pos:start="1331:17" pos:end="1331:30"><name pos:start="1331:17" pos:end="1331:21">frame</name><operator pos:start="1331:22" pos:end="1331:23">-&gt;</operator><name pos:start="1331:24" pos:end="1331:30">quality</name></name></expr> ?</condition><then pos:start="1331:34" pos:end="1331:51"> <expr pos:start="1331:34" pos:end="1331:51"><name pos:start="1331:34" pos:end="1331:47"><name pos:start="1331:34" pos:end="1331:38">frame</name><operator pos:start="1331:39" pos:end="1331:40">-&gt;</operator><name pos:start="1331:41" pos:end="1331:47">quality</name></name> <operator pos:start="1331:49" pos:end="1331:49">-</operator> <literal type="number" pos:start="1331:51" pos:end="1331:51">1</literal></expr> </then><else pos:start="1331:53" pos:end="1331:73">: <expr pos:start="1331:55" pos:end="1331:73"><literal type="number" pos:start="1331:55" pos:end="1331:55">2</literal> <operator pos:start="1331:57" pos:end="1331:57">*</operator> <name pos:start="1331:59" pos:end="1331:73">FF_LAMBDA_SCALE</name></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="1333:5" pos:end="1334:19"><if pos:start="1333:5" pos:end="1334:19">if <condition pos:start="1333:8" pos:end="1333:71">(<expr pos:start="1333:9" pos:end="1333:70"><operator pos:start="1333:9" pos:end="1333:9">(</operator><name pos:start="1333:10" pos:end="1333:12">ret</name> <operator pos:start="1333:14" pos:end="1333:14">=</operator> <call pos:start="1333:16" pos:end="1333:65"><name pos:start="1333:16" pos:end="1333:31">ff_alloc_packet2</name><argument_list pos:start="1333:32" pos:end="1333:65">(<argument pos:start="1333:33" pos:end="1333:37"><expr pos:start="1333:33" pos:end="1333:37"><name pos:start="1333:33" pos:end="1333:37">avctx</name></expr></argument>, <argument pos:start="1333:40" pos:end="1333:42"><expr pos:start="1333:40" pos:end="1333:42"><name pos:start="1333:40" pos:end="1333:42">pkt</name></expr></argument>, <argument pos:start="1333:45" pos:end="1333:61"><expr pos:start="1333:45" pos:end="1333:61"><name pos:start="1333:45" pos:end="1333:61"><name pos:start="1333:45" pos:end="1333:45">s</name><operator pos:start="1333:46" pos:end="1333:47">-&gt;</operator><name pos:start="1333:48" pos:end="1333:61">frame_buf_size</name></name></expr></argument>, <argument pos:start="1333:64" pos:end="1333:64"><expr pos:start="1333:64" pos:end="1333:64"><literal type="number" pos:start="1333:64" pos:end="1333:64">0</literal></expr></argument>)</argument_list></call><operator pos:start="1333:66" pos:end="1333:66">)</operator> <operator pos:start="1333:68" pos:end="1333:68">&lt;</operator> <literal type="number" pos:start="1333:70" pos:end="1333:70">0</literal></expr>)</condition><block type="pseudo" pos:start="1334:9" pos:end="1334:19"><block_content pos:start="1334:9" pos:end="1334:19">
        <return pos:start="1334:9" pos:end="1334:19">return <expr pos:start="1334:16" pos:end="1334:18"><name pos:start="1334:16" pos:end="1334:18">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="1335:5" pos:end="1335:79"><expr pos:start="1335:5" pos:end="1335:78"><name pos:start="1335:5" pos:end="1335:7">ret</name> <operator pos:start="1335:9" pos:end="1335:9">=</operator> <call pos:start="1335:11" pos:end="1335:78"><name pos:start="1335:11" pos:end="1335:18">rd_frame</name><argument_list pos:start="1335:19" pos:end="1335:78">(<argument pos:start="1335:20" pos:end="1335:20"><expr pos:start="1335:20" pos:end="1335:20"><name pos:start="1335:20" pos:end="1335:20">s</name></expr></argument>, <argument pos:start="1335:23" pos:end="1335:27"><expr pos:start="1335:23" pos:end="1335:27"><name pos:start="1335:23" pos:end="1335:27">frame</name></expr></argument>, <argument pos:start="1335:30" pos:end="1335:47"><expr pos:start="1335:30" pos:end="1335:47"><operator pos:start="1335:30" pos:end="1335:30">(</operator><name pos:start="1335:31" pos:end="1335:41"><name pos:start="1335:31" pos:end="1335:31">s</name><operator pos:start="1335:32" pos:end="1335:33">-&gt;</operator><name pos:start="1335:34" pos:end="1335:41">curframe</name></name> <operator pos:start="1335:43" pos:end="1335:44">==</operator> <literal type="number" pos:start="1335:46" pos:end="1335:46">0</literal><operator pos:start="1335:47" pos:end="1335:47">)</operator></expr></argument>, <argument pos:start="1335:50" pos:end="1335:58"><expr pos:start="1335:50" pos:end="1335:58"><name pos:start="1335:50" pos:end="1335:58"><name pos:start="1335:50" pos:end="1335:52">pkt</name><operator pos:start="1335:53" pos:end="1335:54">-&gt;</operator><name pos:start="1335:55" pos:end="1335:58">data</name></name></expr></argument>, <argument pos:start="1335:61" pos:end="1335:77"><expr pos:start="1335:61" pos:end="1335:77"><name pos:start="1335:61" pos:end="1335:77"><name pos:start="1335:61" pos:end="1335:61">s</name><operator pos:start="1335:62" pos:end="1335:63">-&gt;</operator><name pos:start="1335:64" pos:end="1335:77">frame_buf_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="1336:5" pos:end="1336:20"><expr pos:start="1336:5" pos:end="1336:19"><name pos:start="1336:5" pos:end="1336:13"><name pos:start="1336:5" pos:end="1336:7">pkt</name><operator pos:start="1336:8" pos:end="1336:9">-&gt;</operator><name pos:start="1336:10" pos:end="1336:13">size</name></name> <operator pos:start="1336:15" pos:end="1336:15">=</operator> <name pos:start="1336:17" pos:end="1336:19">ret</name></expr>;</expr_stmt>
    <if_stmt pos:start="1337:5" pos:end="1338:38"><if pos:start="1337:5" pos:end="1338:38">if <condition pos:start="1337:8" pos:end="1337:25">(<expr pos:start="1337:9" pos:end="1337:24"><name pos:start="1337:9" pos:end="1337:19"><name pos:start="1337:9" pos:end="1337:9">s</name><operator pos:start="1337:10" pos:end="1337:11">-&gt;</operator><name pos:start="1337:12" pos:end="1337:19">curframe</name></name> <operator pos:start="1337:21" pos:end="1337:22">==</operator> <literal type="number" pos:start="1337:24" pos:end="1337:24">0</literal></expr>)</condition><block type="pseudo" pos:start="1338:9" pos:end="1338:38"><block_content pos:start="1338:9" pos:end="1338:38">
        <expr_stmt pos:start="1338:9" pos:end="1338:38"><expr pos:start="1338:9" pos:end="1338:37"><name pos:start="1338:9" pos:end="1338:18"><name pos:start="1338:9" pos:end="1338:11">pkt</name><operator pos:start="1338:12" pos:end="1338:13">-&gt;</operator><name pos:start="1338:14" pos:end="1338:18">flags</name></name> <operator pos:start="1338:20" pos:end="1338:21">|=</operator> <name pos:start="1338:23" pos:end="1338:37">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="1339:5" pos:end="1339:20"><expr pos:start="1339:5" pos:end="1339:19"><operator pos:start="1339:5" pos:end="1339:5">*</operator><name pos:start="1339:6" pos:end="1339:15">got_packet</name> <operator pos:start="1339:17" pos:end="1339:17">=</operator> <literal type="number" pos:start="1339:19" pos:end="1339:19">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1341:5" pos:end="1341:52"><expr pos:start="1341:5" pos:end="1341:51"><call pos:start="1341:5" pos:end="1341:51"><name pos:start="1341:5" pos:end="1341:10">FFSWAP</name><argument_list pos:start="1341:11" pos:end="1341:51">(<argument pos:start="1341:12" pos:end="1341:20"><expr pos:start="1341:12" pos:end="1341:20"><name pos:start="1341:12" pos:end="1341:18">AVFrame</name> <operator pos:start="1341:20" pos:end="1341:20">*</operator></expr></argument>, <argument pos:start="1341:23" pos:end="1341:35"><expr pos:start="1341:23" pos:end="1341:35"><name pos:start="1341:23" pos:end="1341:35"><name pos:start="1341:23" pos:end="1341:23">s</name><operator pos:start="1341:24" pos:end="1341:25">-&gt;</operator><name pos:start="1341:26" pos:end="1341:35">last_frame</name></name></expr></argument>, <argument pos:start="1341:38" pos:end="1341:50"><expr pos:start="1341:38" pos:end="1341:50"><name pos:start="1341:38" pos:end="1341:50"><name pos:start="1341:38" pos:end="1341:38">s</name><operator pos:start="1341:39" pos:end="1341:40">-&gt;</operator><name pos:start="1341:41" pos:end="1341:50">best_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="1343:5" pos:end="1344:24"><if pos:start="1343:5" pos:end="1344:24">if <condition pos:start="1343:8" pos:end="1343:35">(<expr pos:start="1343:9" pos:end="1343:34"><operator pos:start="1343:9" pos:end="1343:10">++</operator><name pos:start="1343:11" pos:end="1343:21"><name pos:start="1343:11" pos:end="1343:11">s</name><operator pos:start="1343:12" pos:end="1343:13">-&gt;</operator><name pos:start="1343:14" pos:end="1343:21">curframe</name></name> <operator pos:start="1343:23" pos:end="1343:24">&gt;=</operator> <name pos:start="1343:26" pos:end="1343:34"><name pos:start="1343:26" pos:end="1343:26">s</name><operator pos:start="1343:27" pos:end="1343:28">-&gt;</operator><name pos:start="1343:29" pos:end="1343:34">keyint</name></name></expr>)</condition><block type="pseudo" pos:start="1344:9" pos:end="1344:24"><block_content pos:start="1344:9" pos:end="1344:24">
        <expr_stmt pos:start="1344:9" pos:end="1344:24"><expr pos:start="1344:9" pos:end="1344:23"><name pos:start="1344:9" pos:end="1344:19"><name pos:start="1344:9" pos:end="1344:9">s</name><operator pos:start="1344:10" pos:end="1344:11">-&gt;</operator><name pos:start="1344:12" pos:end="1344:19">curframe</name></name> <operator pos:start="1344:21" pos:end="1344:21">=</operator> <literal type="number" pos:start="1344:23" pos:end="1344:23">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="1346:5" pos:end="1346:13">return <expr pos:start="1346:12" pos:end="1346:12"><literal type="number" pos:start="1346:12" pos:end="1346:12">0</literal></expr>;</return>
</block_content>}</block></function>

<function pos:start="1349:1" pos:end="1377:1"><type pos:start="1349:1" pos:end="1349:18"><specifier pos:start="1349:1" pos:end="1349:6">static</specifier> <name pos:start="1349:8" pos:end="1349:14">av_cold</name> <name pos:start="1349:16" pos:end="1349:18">int</name></type> <name pos:start="1349:20" pos:end="1349:37">cinepak_encode_end</name><parameter_list pos:start="1349:38" pos:end="1349:60">(<parameter pos:start="1349:39" pos:end="1349:59"><decl pos:start="1349:39" pos:end="1349:59"><type pos:start="1349:39" pos:end="1349:54"><name pos:start="1349:39" pos:end="1349:52">AVCodecContext</name> <modifier pos:start="1349:54" pos:end="1349:54">*</modifier></type><name pos:start="1349:55" pos:end="1349:59">avctx</name></decl></parameter>)</parameter_list>
<block pos:start="1350:1" pos:end="1377:1">{<block_content pos:start="1351:5" pos:end="1376:13">
    <decl_stmt pos:start="1351:5" pos:end="1351:44"><decl pos:start="1351:5" pos:end="1351:43"><type pos:start="1351:5" pos:end="1351:23"><name pos:start="1351:5" pos:end="1351:21">CinepakEncContext</name> <modifier pos:start="1351:23" pos:end="1351:23">*</modifier></type><name pos:start="1351:24" pos:end="1351:24">s</name> <init pos:start="1351:26" pos:end="1351:43">= <expr pos:start="1351:28" pos:end="1351:43"><name pos:start="1351:28" pos:end="1351:43"><name pos:start="1351:28" pos:end="1351:32">avctx</name><operator pos:start="1351:33" pos:end="1351:34">-&gt;</operator><name pos:start="1351:35" pos:end="1351:43">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="1352:5" pos:end="1352:10"><decl pos:start="1352:5" pos:end="1352:9"><type pos:start="1352:5" pos:end="1352:7"><name pos:start="1352:5" pos:end="1352:7">int</name></type> <name pos:start="1352:9" pos:end="1352:9">x</name></decl>;</decl_stmt>

    <expr_stmt pos:start="1354:5" pos:end="1354:34"><expr pos:start="1354:5" pos:end="1354:33"><call pos:start="1354:5" pos:end="1354:33"><name pos:start="1354:5" pos:end="1354:17">av_frame_free</name><argument_list pos:start="1354:18" pos:end="1354:33">(<argument pos:start="1354:19" pos:end="1354:32"><expr pos:start="1354:19" pos:end="1354:32"><operator pos:start="1354:19" pos:end="1354:19">&amp;</operator><name pos:start="1354:20" pos:end="1354:32"><name pos:start="1354:20" pos:end="1354:20">s</name><operator pos:start="1354:21" pos:end="1354:22">-&gt;</operator><name pos:start="1354:23" pos:end="1354:32">last_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="1355:5" pos:end="1355:34"><expr pos:start="1355:5" pos:end="1355:33"><call pos:start="1355:5" pos:end="1355:33"><name pos:start="1355:5" pos:end="1355:17">av_frame_free</name><argument_list pos:start="1355:18" pos:end="1355:33">(<argument pos:start="1355:19" pos:end="1355:32"><expr pos:start="1355:19" pos:end="1355:32"><operator pos:start="1355:19" pos:end="1355:19">&amp;</operator><name pos:start="1355:20" pos:end="1355:32"><name pos:start="1355:20" pos:end="1355:20">s</name><operator pos:start="1355:21" pos:end="1355:22">-&gt;</operator><name pos:start="1355:23" pos:end="1355:32">best_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="1356:5" pos:end="1356:37"><expr pos:start="1356:5" pos:end="1356:36"><call pos:start="1356:5" pos:end="1356:36"><name pos:start="1356:5" pos:end="1356:17">av_frame_free</name><argument_list pos:start="1356:18" pos:end="1356:36">(<argument pos:start="1356:19" pos:end="1356:35"><expr pos:start="1356:19" pos:end="1356:35"><operator pos:start="1356:19" pos:end="1356:19">&amp;</operator><name pos:start="1356:20" pos:end="1356:35"><name pos:start="1356:20" pos:end="1356:20">s</name><operator pos:start="1356:21" pos:end="1356:22">-&gt;</operator><name pos:start="1356:23" pos:end="1356:35">scratch_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="1357:5" pos:end="1358:39"><if pos:start="1357:5" pos:end="1358:39">if <condition pos:start="1357:8" pos:end="1357:43">(<expr pos:start="1357:9" pos:end="1357:42"><name pos:start="1357:9" pos:end="1357:22"><name pos:start="1357:9" pos:end="1357:13">avctx</name><operator pos:start="1357:14" pos:end="1357:15">-&gt;</operator><name pos:start="1357:16" pos:end="1357:22">pix_fmt</name></name> <operator pos:start="1357:24" pos:end="1357:25">==</operator> <name pos:start="1357:27" pos:end="1357:42">AV_PIX_FMT_RGB24</name></expr>)</condition><block type="pseudo" pos:start="1358:9" pos:end="1358:39"><block_content pos:start="1358:9" pos:end="1358:39">
        <expr_stmt pos:start="1358:9" pos:end="1358:39"><expr pos:start="1358:9" pos:end="1358:38"><call pos:start="1358:9" pos:end="1358:38"><name pos:start="1358:9" pos:end="1358:21">av_frame_free</name><argument_list pos:start="1358:22" pos:end="1358:38">(<argument pos:start="1358:23" pos:end="1358:37"><expr pos:start="1358:23" pos:end="1358:37"><operator pos:start="1358:23" pos:end="1358:23">&amp;</operator><name pos:start="1358:24" pos:end="1358:37"><name pos:start="1358:24" pos:end="1358:24">s</name><operator pos:start="1358:25" pos:end="1358:26">-&gt;</operator><name pos:start="1358:27" pos:end="1358:37">input_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="1359:5" pos:end="1359:33"><expr pos:start="1359:5" pos:end="1359:32"><call pos:start="1359:5" pos:end="1359:32"><name pos:start="1359:5" pos:end="1359:12">av_freep</name><argument_list pos:start="1359:13" pos:end="1359:32">(<argument pos:start="1359:14" pos:end="1359:31"><expr pos:start="1359:14" pos:end="1359:31"><operator pos:start="1359:14" pos:end="1359:14">&amp;</operator><name pos:start="1359:15" pos:end="1359:31"><name pos:start="1359:15" pos:end="1359:15">s</name><operator pos:start="1359:16" pos:end="1359:17">-&gt;</operator><name pos:start="1359:18" pos:end="1359:31">codebook_input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="1360:5" pos:end="1360:35"><expr pos:start="1360:5" pos:end="1360:34"><call pos:start="1360:5" pos:end="1360:34"><name pos:start="1360:5" pos:end="1360:12">av_freep</name><argument_list pos:start="1360:13" pos:end="1360:34">(<argument pos:start="1360:14" pos:end="1360:33"><expr pos:start="1360:14" pos:end="1360:33"><operator pos:start="1360:14" pos:end="1360:14">&amp;</operator><name pos:start="1360:15" pos:end="1360:33"><name pos:start="1360:15" pos:end="1360:15">s</name><operator pos:start="1360:16" pos:end="1360:17">-&gt;</operator><name pos:start="1360:18" pos:end="1360:33">codebook_closest</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="1361:5" pos:end="1361:28"><expr pos:start="1361:5" pos:end="1361:27"><call pos:start="1361:5" pos:end="1361:27"><name pos:start="1361:5" pos:end="1361:12">av_freep</name><argument_list pos:start="1361:13" pos:end="1361:27">(<argument pos:start="1361:14" pos:end="1361:26"><expr pos:start="1361:14" pos:end="1361:26"><operator pos:start="1361:14" pos:end="1361:14">&amp;</operator><name pos:start="1361:15" pos:end="1361:26"><name pos:start="1361:15" pos:end="1361:15">s</name><operator pos:start="1361:16" pos:end="1361:17">-&gt;</operator><name pos:start="1361:18" pos:end="1361:26">strip_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="1362:5" pos:end="1362:28"><expr pos:start="1362:5" pos:end="1362:27"><call pos:start="1362:5" pos:end="1362:27"><name pos:start="1362:5" pos:end="1362:12">av_freep</name><argument_list pos:start="1362:13" pos:end="1362:27">(<argument pos:start="1362:14" pos:end="1362:26"><expr pos:start="1362:14" pos:end="1362:26"><operator pos:start="1362:14" pos:end="1362:14">&amp;</operator><name pos:start="1362:15" pos:end="1362:26"><name pos:start="1362:15" pos:end="1362:15">s</name><operator pos:start="1362:16" pos:end="1362:17">-&gt;</operator><name pos:start="1362:18" pos:end="1362:26">frame_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="1363:5" pos:end="1365:0"><expr pos:start="1363:5" pos:end="1363:20"><call pos:start="1363:5" pos:end="1363:20"><name pos:start="1363:5" pos:end="1363:12">av_freep</name><argument_list pos:start="1363:13" pos:end="1363:20">(<argument pos:start="1363:14" pos:end="1363:19"><expr pos:start="1363:14" pos:end="1363:19"><operator pos:start="1363:14" pos:end="1363:14">&amp;</operator><name pos:start="1363:15" pos:end="1363:19"><name pos:start="1363:15" pos:end="1363:15">s</name><operator pos:start="1363:16" pos:end="1363:17">-&gt;</operator><name pos:start="1363:18" pos:end="1363:19">mb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:ifdef pos:start="1364:1" pos:end="1364:23">#<cpp:directive pos:start="1364:2" pos:end="1364:6">ifdef</cpp:directive> <name pos:start="1364:8" pos:end="1364:23">CINEPAKENC_DEBUG</name></cpp:ifdef>
    <expr_stmt pos:start="1365:5" pos:end="1367:0"><expr pos:start="1365:5" pos:end="1365:25"><call pos:start="1365:5" pos:end="1365:25"><name pos:start="1365:5" pos:end="1365:12">av_freep</name><argument_list pos:start="1365:13" pos:end="1365:25">(<argument pos:start="1365:14" pos:end="1365:24"><expr pos:start="1365:14" pos:end="1365:24"><operator pos:start="1365:14" pos:end="1365:14">&amp;</operator><name pos:start="1365:15" pos:end="1365:24"><name pos:start="1365:15" pos:end="1365:15">s</name><operator pos:start="1365:16" pos:end="1365:17">-&gt;</operator><name pos:start="1365:18" pos:end="1365:24">best_mb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="1366:1" pos:end="1366:6">#<cpp:directive pos:start="1366:2" pos:end="1366:6">endif</cpp:directive></cpp:endif>

    <for pos:start="1368:5" pos:end="1372:0">for<control pos:start="1368:8" pos:end="1368:69">(<init pos:start="1368:9" pos:end="1368:14"><expr pos:start="1368:9" pos:end="1368:13"><name pos:start="1368:9" pos:end="1368:9">x</name> <operator pos:start="1368:11" pos:end="1368:11">=</operator> <literal type="number" pos:start="1368:13" pos:end="1368:13">0</literal></expr>;</init> <condition pos:start="1368:16" pos:end="1368:64"><expr pos:start="1368:16" pos:end="1368:63"><name pos:start="1368:16" pos:end="1368:16">x</name> <operator pos:start="1368:18" pos:end="1368:18">&lt;</operator> <operator pos:start="1368:20" pos:end="1368:20">(</operator><ternary pos:start="1368:21" pos:end="1368:62"><condition pos:start="1368:21" pos:end="1368:56"><expr pos:start="1368:21" pos:end="1368:54"><name pos:start="1368:21" pos:end="1368:34"><name pos:start="1368:21" pos:end="1368:25">avctx</name><operator pos:start="1368:26" pos:end="1368:27">-&gt;</operator><name pos:start="1368:28" pos:end="1368:34">pix_fmt</name></name> <operator pos:start="1368:36" pos:end="1368:37">==</operator> <name pos:start="1368:39" pos:end="1368:54">AV_PIX_FMT_RGB24</name></expr> ?</condition><then pos:start="1368:58" pos:end="1368:58"> <expr pos:start="1368:58" pos:end="1368:58"><literal type="number" pos:start="1368:58" pos:end="1368:58">4</literal></expr> </then><else pos:start="1368:60" pos:end="1368:62">: <expr pos:start="1368:62" pos:end="1368:62"><literal type="number" pos:start="1368:62" pos:end="1368:62">3</literal></expr></else></ternary><operator pos:start="1368:63" pos:end="1368:63">)</operator></expr>;</condition> <incr pos:start="1368:66" pos:end="1368:68"><expr pos:start="1368:66" pos:end="1368:68"><name pos:start="1368:66" pos:end="1368:66">x</name><operator pos:start="1368:67" pos:end="1368:68">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1369:9" pos:end="1372:0"><block_content pos:start="1369:9" pos:end="1372:0">
        <expr_stmt pos:start="1369:9" pos:end="1372:0"><expr pos:start="1369:9" pos:end="1369:34"><call pos:start="1369:9" pos:end="1369:34"><name pos:start="1369:9" pos:end="1369:16">av_freep</name><argument_list pos:start="1369:17" pos:end="1369:34">(<argument pos:start="1369:18" pos:end="1369:33"><expr pos:start="1369:18" pos:end="1369:33"><operator pos:start="1369:18" pos:end="1369:18">&amp;</operator><name pos:start="1369:19" pos:end="1369:33"><name pos:start="1369:19" pos:end="1369:19">s</name><operator pos:start="1369:20" pos:end="1369:21">-&gt;</operator><name pos:start="1369:22" pos:end="1369:30">pict_bufs</name><index pos:start="1369:31" pos:end="1369:33">[<expr pos:start="1369:32" pos:end="1369:32"><name pos:start="1369:32" pos:end="1369:32">x</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<cpp:ifdef pos:start="1371:1" pos:end="1371:23">#<cpp:directive pos:start="1371:2" pos:end="1371:6">ifdef</cpp:directive> <name pos:start="1371:8" pos:end="1371:23">CINEPAKENC_DEBUG</name></cpp:ifdef>
    <expr_stmt pos:start="1372:5" pos:end="1375:0"><expr pos:start="1372:5" pos:end="1373:101"><call pos:start="1372:5" pos:end="1373:101"><name pos:start="1372:5" pos:end="1372:10">av_log</name><argument_list pos:start="1372:11" pos:end="1373:101">(<argument pos:start="1372:12" pos:end="1372:16"><expr pos:start="1372:12" pos:end="1372:16"><name pos:start="1372:12" pos:end="1372:16">avctx</name></expr></argument>, <argument pos:start="1372:19" pos:end="1372:29"><expr pos:start="1372:19" pos:end="1372:29"><name pos:start="1372:19" pos:end="1372:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="1372:32" pos:end="1372:124"><expr pos:start="1372:32" pos:end="1372:124"><literal type="string" pos:start="1372:32" pos:end="1372:124">"strip coding stats: %i V1 mode, %i V4 mode, %i MC mode (%i V1 encs, %i V4 encs, %i skips)\n"</literal></expr></argument>,
        <argument pos:start="1373:9" pos:end="1373:22"><expr pos:start="1373:9" pos:end="1373:22"><name pos:start="1373:9" pos:end="1373:22"><name pos:start="1373:9" pos:end="1373:9">s</name><operator pos:start="1373:10" pos:end="1373:11">-&gt;</operator><name pos:start="1373:12" pos:end="1373:22">num_v1_mode</name></name></expr></argument>, <argument pos:start="1373:25" pos:end="1373:38"><expr pos:start="1373:25" pos:end="1373:38"><name pos:start="1373:25" pos:end="1373:38"><name pos:start="1373:25" pos:end="1373:25">s</name><operator pos:start="1373:26" pos:end="1373:27">-&gt;</operator><name pos:start="1373:28" pos:end="1373:38">num_v4_mode</name></name></expr></argument>, <argument pos:start="1373:41" pos:end="1373:54"><expr pos:start="1373:41" pos:end="1373:54"><name pos:start="1373:41" pos:end="1373:54"><name pos:start="1373:41" pos:end="1373:41">s</name><operator pos:start="1373:42" pos:end="1373:43">-&gt;</operator><name pos:start="1373:44" pos:end="1373:54">num_mc_mode</name></name></expr></argument>, <argument pos:start="1373:57" pos:end="1373:70"><expr pos:start="1373:57" pos:end="1373:70"><name pos:start="1373:57" pos:end="1373:70"><name pos:start="1373:57" pos:end="1373:57">s</name><operator pos:start="1373:58" pos:end="1373:59">-&gt;</operator><name pos:start="1373:60" pos:end="1373:70">num_v1_encs</name></name></expr></argument>, <argument pos:start="1373:73" pos:end="1373:86"><expr pos:start="1373:73" pos:end="1373:86"><name pos:start="1373:73" pos:end="1373:86"><name pos:start="1373:73" pos:end="1373:73">s</name><operator pos:start="1373:74" pos:end="1373:75">-&gt;</operator><name pos:start="1373:76" pos:end="1373:86">num_v4_encs</name></name></expr></argument>, <argument pos:start="1373:89" pos:end="1373:100"><expr pos:start="1373:89" pos:end="1373:100"><name pos:start="1373:89" pos:end="1373:100"><name pos:start="1373:89" pos:end="1373:89">s</name><operator pos:start="1373:90" pos:end="1373:91">-&gt;</operator><name pos:start="1373:92" pos:end="1373:100">num_skips</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="1374:1" pos:end="1374:6">#<cpp:directive pos:start="1374:2" pos:end="1374:6">endif</cpp:directive></cpp:endif>

    <return pos:start="1376:5" pos:end="1376:13">return <expr pos:start="1376:12" pos:end="1376:12"><literal type="number" pos:start="1376:12" pos:end="1376:12">0</literal></expr>;</return>
</block_content>}</block></function>

<decl_stmt pos:start="1379:1" pos:end="1390:2"><decl pos:start="1379:1" pos:end="1390:1"><type pos:start="1379:1" pos:end="1379:7"><name pos:start="1379:1" pos:end="1379:7">AVCodec</name></type> <name pos:start="1379:9" pos:end="1379:26">ff_cinepak_encoder</name> <init pos:start="1379:28" pos:end="1390:1">= <expr pos:start="1379:30" pos:end="1390:1"><block pos:start="1379:30" pos:end="1390:1">{
    <expr pos:start="1380:5" pos:end="1380:31"><operator pos:start="1380:5" pos:end="1380:5">.</operator><name pos:start="1380:6" pos:end="1380:9">name</name>           <operator pos:start="1380:21" pos:end="1380:21">=</operator> <literal type="string" pos:start="1380:23" pos:end="1380:31">"cinepak"</literal></expr>,
    <expr pos:start="1381:5" pos:end="1381:40"><operator pos:start="1381:5" pos:end="1381:5">.</operator><name pos:start="1381:6" pos:end="1381:9">type</name>           <operator pos:start="1381:21" pos:end="1381:21">=</operator> <name pos:start="1381:23" pos:end="1381:40">AVMEDIA_TYPE_VIDEO</name></expr>,
    <expr pos:start="1382:5" pos:end="1382:41"><operator pos:start="1382:5" pos:end="1382:5">.</operator><name pos:start="1382:6" pos:end="1382:7">id</name>             <operator pos:start="1382:21" pos:end="1382:21">=</operator> <name pos:start="1382:23" pos:end="1382:41">AV_CODEC_ID_CINEPAK</name></expr>,
    <expr pos:start="1383:5" pos:end="1383:47"><operator pos:start="1383:5" pos:end="1383:5">.</operator><name pos:start="1383:6" pos:end="1383:19">priv_data_size</name> <operator pos:start="1383:21" pos:end="1383:21">=</operator> <sizeof pos:start="1383:23" pos:end="1383:47">sizeof<argument_list pos:start="1383:29" pos:end="1383:47">(<argument pos:start="1383:30" pos:end="1383:46"><expr pos:start="1383:30" pos:end="1383:46"><name pos:start="1383:30" pos:end="1383:46">CinepakEncContext</name></expr></argument>)</argument_list></sizeof></expr>,
    <expr pos:start="1384:5" pos:end="1384:41"><operator pos:start="1384:5" pos:end="1384:5">.</operator><name pos:start="1384:6" pos:end="1384:9">init</name>           <operator pos:start="1384:21" pos:end="1384:21">=</operator> <name pos:start="1384:23" pos:end="1384:41">cinepak_encode_init</name></expr>,
    <expr pos:start="1385:5" pos:end="1385:42"><operator pos:start="1385:5" pos:end="1385:5">.</operator><name pos:start="1385:6" pos:end="1385:12">encode2</name>        <operator pos:start="1385:21" pos:end="1385:21">=</operator> <name pos:start="1385:23" pos:end="1385:42">cinepak_encode_frame</name></expr>,
    <expr pos:start="1386:5" pos:end="1386:40"><operator pos:start="1386:5" pos:end="1386:5">.</operator><name pos:start="1386:6" pos:end="1386:10">close</name>          <operator pos:start="1386:21" pos:end="1386:21">=</operator> <name pos:start="1386:23" pos:end="1386:40">cinepak_encode_end</name></expr>,
    <expr pos:start="1387:5" pos:end="1387:103"><operator pos:start="1387:5" pos:end="1387:5">.</operator><name pos:start="1387:6" pos:end="1387:13">pix_fmts</name>       <operator pos:start="1387:21" pos:end="1387:21">=</operator> <operator pos:start="1387:23" pos:end="1387:23">(</operator><specifier pos:start="1387:24" pos:end="1387:28">const</specifier> enum <name pos:start="1387:35" pos:end="1387:49"><name pos:start="1387:35" pos:end="1387:47">AVPixelFormat</name><index pos:start="1387:48" pos:end="1387:49">[]</index></name><operator pos:start="1387:50" pos:end="1387:50">)</operator><block pos:start="1387:51" pos:end="1387:103">{<expr pos:start="1387:52" pos:end="1387:67"><name pos:start="1387:52" pos:end="1387:67">AV_PIX_FMT_RGB24</name></expr>, <expr pos:start="1387:70" pos:end="1387:85"><name pos:start="1387:70" pos:end="1387:85">AV_PIX_FMT_GRAY8</name></expr>, <expr pos:start="1387:88" pos:end="1387:102"><name pos:start="1387:88" pos:end="1387:102">AV_PIX_FMT_NONE</name></expr>}</block></expr>,
    <expr pos:start="1388:5" pos:end="1388:60"><operator pos:start="1388:5" pos:end="1388:5">.</operator><name pos:start="1388:6" pos:end="1388:14">long_name</name>      <operator pos:start="1388:21" pos:end="1388:21">=</operator> <call pos:start="1388:23" pos:end="1388:60"><name pos:start="1388:23" pos:end="1388:42">NULL_IF_CONFIG_SMALL</name><argument_list pos:start="1388:43" pos:end="1388:60">(<argument pos:start="1388:44" pos:end="1388:59"><expr pos:start="1388:44" pos:end="1388:59"><literal type="string" pos:start="1388:44" pos:end="1388:59">"Cinepak / CVID"</literal></expr></argument>)</argument_list></call></expr>,
    <expr pos:start="1389:5" pos:end="1389:36"><operator pos:start="1389:5" pos:end="1389:5">.</operator><name pos:start="1389:6" pos:end="1389:15">priv_class</name>     <operator pos:start="1389:21" pos:end="1389:21">=</operator> <operator pos:start="1389:23" pos:end="1389:23">&amp;</operator><name pos:start="1389:24" pos:end="1389:36">cinepak_class</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
</unit>
